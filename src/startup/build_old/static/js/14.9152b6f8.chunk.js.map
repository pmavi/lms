{"version":3,"sources":["components/EntityEdit.js","components/TextFieldLF.js","fhg/components/ProgressButton.js","fhg/components/edit/useEditData.js","fhg/components/edit/Form.js","fhg/components/edit/Prompt.js","fhg/hooks/useKeyDown.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/pick.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/_basePick.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/flatten.js"],"names":["useStyles","makeStyles","theme","paperStyle","maxHeight","margin","spacing","formStyle","overflow","width","display","flexDirection","infoRootStyle","height","marginRight","marginBottom","fileFrameStyle","infoInnerStyle","padding","buttonPanelStyle","marginLeft","borderTop","palette","divider","titleStyle","frameStyle","color","dividerStyle","uploadStyle","position","bottom","backgroundColor","background","paper","marginTop","name","EntityEdit","classes","clientId","useParams","history","useHistory","location","useLocation","entityId","state","id","isNew","parentEntityId","isActive","editItem","uuid","ein","isDeleted","useState","isSaving","setIsSaving","useEditData","undefined","editValues","handleChange","setEditValues","isChanged","setIsChanged","defaultValues","setDefaultValues","resetValues","useQueryFHG","ENTITY_BY_ID_QUERY","variables","skip","validate","entityData","useMutationFHG","ENTITY_CREATE_UPDATE","entityCreateUpdate","useEffect","entity","handleClose","useCallback","defer","edit","selectEntityId","replace","useKeyDown","handleSubmit","a","optimisticResponse","__typename","update","cacheUpdate","getEntityCacheQueries","container","fullWidth","fullHeight","className","direction","wrap","variant","gutterBottom","onSubmit","when","item","autoFocus","required","labelKey","defaultValue","value","onChange","description","multiline","maxRows","minRows","resizable","isProgress","type","size","disabled","onClick","createMuiTheme","text","secondary","primary","TextFieldLF","placeholderKey","helpKey","helperText","InputLabelProps","InputProps","label","isFormattedNumber","labelTemplate","classesProp","editData","internalKey","placeholder","textFieldProps","useLabelKey","format","currentLabel","useMessage","currentPlaceholder","helpText","useInputProps","get","console","log","inputComponent","CustomInputTextField","inputProps","component","NumberFormatCustom","key","textFieldStyle","shrink","spinnerMargin","darkSpinnerMargin","main","ProgressButton","isSpinnerLight","children","typographyProps","buttonProperties","thickness","defaultValuesProp","requiredEditValues","isArrayType","isArray","requiredObject","pick","event","reason","newValue","useValue","handleArrayChange","newEditValues","editChange","index","componentName","requiredValues","defaultValuesLocal","useDefaultValues","handleSelectChange","getValue","path","editValue","setValue","hasValue","hasValueUtil","Form","forwardRef","ref","onValid","customValidity","reportInvalid","props","useFormEl","useRef","formEl","isValid","isReport","form","current","checkValidity","reportValidity","preventDefault","stopPropagation","defaultProps","Prompt","messageKey","message","intl","useIntl","getPrompt","newLocation","pathname","window","formatMessage","onClose","ignoreDefaultPrevented","onOther","handleKey","defaultPrevented","document","addEventListener","useLayoutEffect","removeEventListener","propTypes","PropTypes","func","arrayPush","require","isFlattenable","module","exports","baseFlatten","array","depth","predicate","isStrict","result","length","basePick","flatRest","object","paths","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","basePickBy","hasIn","flatten","overRest","setToString"],"mappings":"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","file":"static/js/14.9152b6f8.chunk.js","sourcesContent":["import makeStyles from '@material-ui/core/styles/makeStyles';\nimport {defer} from 'lodash';\nimport React, {useState, useCallback} from 'react';\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport {validate} from 'uuid';\nimport {v4 as uuid} from 'uuid';\nimport {ENTITY_BY_ID_QUERY} from '../data/QueriesGL';\nimport {getEntityCacheQueries} from '../data/QueriesGL';\nimport {ENTITY_CREATE_UPDATE} from '../data/QueriesGL';\nimport ButtonFHG from '../fhg/components/ButtonFHG';\nimport Form from '../fhg/components/edit/Form';\nimport Prompt from '../fhg/components/edit/Prompt';\nimport useEditData from '../fhg/components/edit/useEditData';\nimport Grid from '../fhg/components/Grid';\nimport ProgressButton from '../fhg/components/ProgressButton';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport useQueryFHG from '../fhg/hooks/data/useQueryFHG';\nimport {useEffect} from 'react';\nimport useKeyDown from '../fhg/hooks/useKeyDown';\nimport {cacheUpdate} from '../fhg/utils/DataUtil';\nimport TextFieldLF from './TextFieldLF';\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      paperStyle: {\n         maxHeight: `calc(100% - 1px)`,\n         margin: theme.spacing(0, 0, 0, 2),\n      },\n      formStyle: {\n         maxHeight: '100%',\n         overflow: 'hidden',\n         // minHeight: 320,\n         width: '100%',\n         display: 'flex',\n         flexDirection: 'column',\n      },\n      infoRootStyle: {\n         height: 'fit-content',\n         '& > *': {\n            marginRight: theme.spacing(1),\n         },\n         overflow: 'auto',\n         marginBottom: theme.spacing(1),\n      },\n      fileFrameStyle: {\n         height: 'fit-content',\n         // minHeight: 180,\n         // maxHeight: '50%',\n         '& > *': {\n            marginRight: theme.spacing(1),\n         },\n         overflow: 'auto',\n         marginBottom: theme.spacing(1),\n      },\n      infoInnerStyle: {\n         padding: theme.spacing(0, 2),\n         // minHeight: 200,\n      },\n      buttonPanelStyle: {\n         marginLeft: -8,\n         borderTop: `solid 1px ${theme.palette.divider}`,\n         padding: theme.spacing(2),\n         '& > *': {\n            marginRight: theme.spacing(1),\n         },\n      },\n      titleStyle: {\n         padding: theme.spacing(3, 2, 0),\n      },\n      frameStyle: {\n         // padding: theme.spacing(4, 0),\n      },\n      '::placeholder': {\n         color: '#707070 !important',\n      },\n      dividerStyle: {\n         marginBottom: theme.spacing(2),\n         width: '100%',\n      },\n      uploadStyle: {\n         position: 'sticky',\n         bottom: 0,\n         backgroundColor: theme.palette.background.paper,\n         marginTop: theme.spacing(2),\n         padding: theme.spacing(0, 2),\n      },\n   }),\n   {name: 'EntityEditStyles'}\n);\n\nexport default function EntityEdit() {\n   const classes = useStyles();\n   const {clientId} = useParams();\n   const history = useHistory();\n   const location = useLocation();\n   const entityId = location?.state?.id;\n   const isNew = !entityId;\n   const parentEntityId = !entityId && location?.state?.parentEntityId;\n   const isActive = !entityId && location?.state?.isActive;\n\n   const editItem = {\n      id: uuid(),\n      name: '',\n      ein: '',\n      isActive,\n      clientId,\n      entityId: parentEntityId,\n      isDeleted: false,\n   };\n   const [isSaving, setIsSaving] = useState(false);\n\n   const [\n      editValues,\n      handleChange,\n      {setEditValues, isChanged = false, setIsChanged, defaultValues, setDefaultValues, resetValues},\n   ] = useEditData(isNew ? editItem : undefined, isNew ? ['isActive', 'entityId', 'clientId'] : undefined);\n\n   const [entityData] = useQueryFHG(\n      ENTITY_BY_ID_QUERY,\n      {variables: {entityId}, skip: !validate(entityId)},\n      'entity.type'\n   );\n   const [entityCreateUpdate] = useMutationFHG(ENTITY_CREATE_UPDATE);\n\n   useEffect(() => {\n      if (entityData?.entity) {\n         setDefaultValues(entityData?.entity);\n      }\n   }, [entityData, setDefaultValues]);\n\n   const handleClose = useCallback(() => {\n      resetValues();\n      defer(() => {\n         location.state = {edit: undefined, id: undefined, selectEntityId: parentEntityId, isActive};\n         history.replace(location);\n      });\n   }, [resetValues, history, isActive, location, parentEntityId]);\n\n   useKeyDown(handleClose);\n\n   const handleSubmit = useCallback(async () => {\n      if (isChanged) {\n         try {\n            let variables = {...editValues};\n            setIsSaving(true);\n            await entityCreateUpdate({\n               variables,\n               optimisticResponse: {\n                  __typename: 'Mutation',\n                  entity: {\n                     __typename: 'Entity',\n                     ...defaultValues,\n                     ...variables,\n                     clientId,\n                     entityId: parentEntityId || '',\n                     isDeleted: false,\n                  },\n               },\n               update: isNew\n                  ? cacheUpdate(getEntityCacheQueries(clientId, isActive), editValues.id, 'entity')\n                  : undefined,\n            });\n            location.state = {...location.state, id: editValues.id};\n            history.replace(location);\n            setIsChanged(false);\n            setEditValues({});\n            setDefaultValues(editValues);\n            handleClose();\n         } catch (e) {\n            //Intentionally left blank\n         } finally {\n            setIsSaving(false);\n         }\n      } else {\n         // handleClose();\n      }\n   }, [\n      isChanged,\n      editValues,\n      entityCreateUpdate,\n      defaultValues,\n      clientId,\n      parentEntityId,\n      isNew,\n      isActive,\n      location,\n      history,\n      setIsChanged,\n      setEditValues,\n      setDefaultValues,\n   ]);\n\n   return (\n      <Grid\n         container\n         fullWidth\n         fullHeight\n         className={classes.frameStyle}\n         direction={'column'}\n         overflow={'visible'}\n         wrap={'nowrap'}\n      >\n         <TypographyFHG\n            variant={'h5'}\n            id={'entity.title.label'}\n            color={'textSecondary'}\n            gutterBottom\n            className={classes.titleStyle}\n         />\n         <Form onSubmit={handleSubmit} className={classes.formStyle}>\n            <Prompt when={isChanged} />\n            <Grid name={'Entity Edit Root'} container item fullWidth className={classes.infoRootStyle}>\n               <Grid name={'Entity Edit Root'} container item fullWidth className={classes.infoInnerStyle}>\n                  <TextFieldLF\n                     key={'name' + defaultValues.id}\n                     name={'name'}\n                     autoFocus\n                     required\n                     labelKey='entity.name.label'\n                     defaultValue={defaultValues.name}\n                     value={editValues.name}\n                     onChange={handleChange}\n                  />\n                  <TextFieldLF\n                     key={'description' + defaultValues.id}\n                     name={'description'}\n                     labelKey='entity.description.label'\n                     defaultValue={defaultValues.description}\n                     value={editValues.description}\n                     onChange={handleChange}\n                     multiline\n                     maxRows={4}\n                     minRows={2}\n                  />\n                  <TextFieldLF\n                     key={'ein' + defaultValues.id}\n                     name={'ein'}\n                     labelKey={'entity.ein.label'}\n                     defaultValue={defaultValues.ein}\n                     value={editValues.ein}\n                     onChange={handleChange}\n                  />\n               </Grid>\n            </Grid>\n            <Grid\n               container\n               item\n               direction={'row'}\n               fullWidth\n               className={classes.buttonPanelStyle}\n               overflow={'visible'}\n               resizable={false}\n            >\n               <Grid item>\n                  <ProgressButton\n                     isProgress={isSaving}\n                     variant='text'\n                     color='primary'\n                     type={'submit'}\n                     size='large'\n                     labelKey='save.label'\n                     disabled={isSaving || !isChanged}\n                  />\n                  <ButtonFHG\n                     variant='text'\n                     size={'large'}\n                     labelKey={'cancel.button'}\n                     disabled={isSaving}\n                     onClick={() => handleClose()}\n                  />\n               </Grid>\n            </Grid>\n         </Form>\n      </Grid>\n   );\n}\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport TextField from '@material-ui/core/TextField';\nimport get from 'lodash/get';\nimport React from 'react';\nimport NumberFormatCustom from '../fhg/components/NumberFormat';\nimport useMessage from '../fhg/hooks/useMessage';\nimport CustomInputTextField from './CustomInputTextField';\nimport ThemeProvider from './ThemeProvider';\n\nconst theme = createMuiTheme({\n   palette: {\n      text: {\n         secondary: '#707070',\n         primary: '#527928',\n      },\n   },\n});\n\n/**\n * The TextField with preset formats.\n\n * @param className\n * @param name\n * @param labelKey\n * @param placeholderKey\n * @param helpKey\n * @param helperText\n * @param defaultValue\n * @param value\n * @param onChange\n * @param margin\n * @param InputLabelProps\n * @param InputProps\n * @param label\n * @param fullWidth\n * @param isFormattedNumber\n * @param variant\n * @param size\n * @param labelTemplate\n * @param editData\n * @param classesProp\n * @param internalKey\n * @param textFieldProps\n * @param placeholder The placeholder for the text component.\n * @return {JSX.Element}\n * @constructor\n */\nexport default function TextFieldLF({\n   className,\n   name,\n   labelKey,\n   placeholderKey,\n   helpKey,\n   helperText,\n   defaultValue,\n   value,\n   onChange,\n   margin = 'normal',\n   InputLabelProps,\n   InputProps,\n   label,\n   fullWidth = true,\n   isFormattedNumber,\n   variant = 'outlined',\n   size = 'small',\n   labelTemplate,\n   editData,\n   classes: classesProp,\n   internalKey,\n   placeholder,\n   ...textFieldProps\n}) {\n   const classes = {...classesProp};\n   const useLabelKey = labelTemplate?.format({name}) || labelKey;\n   const currentLabel = useMessage(useLabelKey, label);\n   const currentPlaceholder = useMessage(placeholderKey) || placeholder;\n   const helpText = useMessage(helpKey, helperText) || helperText;\n\n   const useInputProps = {\n      ...InputProps,\n   };\n\n   if (isFormattedNumber) {\n      if (get(InputProps, 'inputComponent') || get(InputProps, 'inputProps.component')) {\n         console.log('isFormattedNumber cannot have a different input component.', InputProps);\n      }\n      useInputProps.inputComponent = CustomInputTextField;\n      useInputProps.inputProps =\n         {...get(InputProps, 'inputProps', {}), ...(textFieldProps.inputProps || {}), component: NumberFormatCustom};\n   }\n\n   return (\n      <ThemeProvider theme={theme}>\n         <TextField\n            {...textFieldProps}\n            key={'internal' + internalKey}\n            name={name}\n            className={`${classes.textFieldStyle} ${className}`}\n            label={currentLabel}\n            placeholder={currentPlaceholder}\n            helperText={helpText}\n            defaultValue={defaultValue}\n            value={value}\n            onChange={onChange}\n            InputProps={useInputProps}\n            InputLabelProps={{\n               ...InputLabelProps,\n               shrink: true,\n            }}\n            variant={variant}\n            size={size}\n            margin={margin}\n            fullWidth={fullWidth}\n         />\n      </ThemeProvider>\n   );\n}\n","// eslint-disable-next-line\nimport Button, {ButtonProps} from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from './Typography';\n\nconst useStyles = makeStyles(theme => ({\n   spinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: 'white',\n   },\n   darkSpinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: theme.palette.primary.main,\n   },\n}), {name: 'ProgressButtonStyles'});\n\n/**\n * Button Component to show progress.\n *\n * Reviewed:\n */\nProgressButton.propTypes = {\n   isProgress: PropTypes.bool.isRequired, //Indicates if the progress should be showing.\n   labelKey: PropTypes.string,            // Localization key for the button label.\n   typographyProps: PropTypes.any,        // The properties for the typography component.\n   ...Button.propTypes,\n};\n\n/**\n *\n * @param isProgress\n * @param labelKey\n * @param isSpinnerDark Indicates if the spinner should be dark.\n * @param children\n * @param typographyProps\n * @param buttonProperties {ButtonProps}\n * @return {JSX.Element}\n * @constructor\n */\nexport default function ProgressButton({isProgress = false, labelKey, isSpinnerLight = false, children, typographyProps, ...buttonProperties}) {\n   const classes = useStyles();\n\n   return (\n      <Button {...buttonProperties}>\n         {labelKey && (\n            <Typography variant={'inherit'} id={labelKey} {...typographyProps}/>\n         )}\n         {children}\n         {isProgress && <CircularProgress className={buttonProperties?.classes?.spinnerMargin || (!isSpinnerLight ? classes.darkSpinnerMargin : classes.spinnerMargin)} size={15} thickness={2.5}/>}\n      </Button>\n   );\n}\n\n","import get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport pick from 'lodash/pick';\nimport {useState, useEffect, useCallback} from 'react';\nimport {v4 as uuid} from 'uuid';\nimport {hasValue as hasValueUtil} from '../../utils/Utils';\nimport {editChange} from '../../utils/Utils';\n\nexport default function useEditData(defaultValuesProp, requiredEditValues = [], isArrayType = false, onChange) {\n   const [isChanged, setIsChanged] = useState(false);\n   const [defaultValues, setDefaultValues] = useState(defaultValuesProp ? defaultValuesProp : isArrayType ? [] : {});\n   const [editValues, setEditValues] = useState(\n      isArrayType ? [] : !isArray(requiredEditValues) ? requiredEditValues : {}\n   );\n\n   useEffect(() => {\n      if (defaultValues && !isArrayType) {\n         let requiredObject;\n\n         if (isArray(requiredEditValues)) {\n            requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n         } else {\n            requiredObject = {...defaultValues};\n         }\n\n         setEditValues({...editValues, ...requiredObject});\n      }\n      //editValues and requiredEditValues cause constant changes.\n      // eslint-disable-next-line\n   }, [defaultValues, isArrayType]);\n\n   /**\n    * Handle onChange events for the inputs.\n    *\n    * NOTE:\n    * Input components MUST have their name set to be set in the editValues.\n    *\n    * @param event The event that changed the input.\n    * @param value The value if the component is an Autocomplete\n    * @param reason The reason of the value change if Autocomplete\n    * @param newValue The value from the component.\n    * @param name the name of the component.\n    */\n   const handleChange = (event, value, reason, newValue, name) => {\n      let useValue = newValue;\n\n      if (isArrayType) {\n         handleArrayChange(event);\n      } else {\n         let newEditValues;\n\n         if (newValue) {\n            newEditValues = {...editValues, ...newValue};\n         } else {\n            useValue = editChange(event, value, reason, true, newValue, name);\n            newEditValues = {...editValues, ...useValue};\n         }\n         setEditValues(newEditValues);\n         if (onChange) {\n            let requiredObject;\n\n            if (isArray(requiredEditValues)) {\n               requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n            } else {\n               requiredObject = {...defaultValues};\n            }\n            onChange?.({...requiredObject, ...useValue}, newEditValues);\n         }\n\n         if (reason !== 'reset') {\n            setIsChanged(true);\n         }\n      }\n      return useValue;\n   };\n\n   const handleArrayChange = (event) => {\n      const index = get(event, 'target.dataset.index');\n      const {componentName, newValue} = editChange(event, undefined, undefined, false);\n\n      const edit = editValues[index];\n      if (!edit) {\n         let requiredValues = {};\n         // Is there a default at each index?\n         if (isArray(defaultValues)) {\n            const defaultValue = get(defaultValues, `[${index}]`);\n            if (defaultValue) {\n               if (isArray(requiredEditValues)) {\n                  requiredValues = pick(defaultValue, requiredEditValues);\n               } else {\n                  requiredValues = {uuid: defaultValue, id: defaultValue.id};\n               }\n            }\n            //Is there a generic default?\n         } else if (defaultValues) {\n            if (isArray(requiredEditValues)) {\n               requiredValues = pick(defaultValues, requiredEditValues);\n               requiredValues.uuid = uuid();\n            } else {\n               requiredValues = {uuid: uuid(), id: defaultValues.id};\n            }\n         }\n         editValues[index] = {[componentName]: newValue, ...requiredValues};\n      } else {\n         editValues[index] = {...edit, [componentName]: newValue};\n      }\n      setEditValues([...editValues]);\n      setIsChanged(true);\n   };\n\n   const resetValues = useCallback(\n      (defaultValuesLocal) => {\n         let requiredObject;\n         const useDefaultValues = defaultValuesLocal || defaultValuesProp || (isArrayType ? [] : {});\n\n         if (isArray(requiredEditValues)) {\n            requiredObject = pick(useDefaultValues, ['id', ...requiredEditValues]);\n         } else {\n            requiredObject = {...useDefaultValues};\n         }\n\n         setEditValues({...requiredObject});\n         setDefaultValues(useDefaultValues);\n         setIsChanged(false);\n      },\n      [isArrayType]\n   );\n\n   const handleSelectChange = (value, name) => {\n      setEditValues((editValues) => ({...editValues, [name]: value}));\n      setIsChanged(true);\n   };\n\n   /**\n    * Get the current value for the named property. If the value has been edited, it will return the edited value even\n    * if it is null, and it will return the default value if not edited. If there is no default value, the default\n    * value from the parameter is used.\n    *\n    * @Param path The path to the property\n    * @Param defaultValue The default value to use if there isn't a edit or default value already.\n    *\n    * @type {function(*, *=): *}\n    */\n   const getValue = useCallback(\n      (path, defaultValue) => {\n         const editValue = get(editValues, path);\n         return editValue !== undefined ? editValue : get(defaultValues, path) || defaultValue;\n      },\n      [editValues, defaultValues]\n   );\n\n   /**\n    * Get the current value for the named property. If the value has been edited, it will return the edited value even\n    * if it is null, and it will return the default value if not edited. If there is no default value, the default\n    * value from the parameter is used.\n    *\n    * @Param path The path to the property\n    * @Param defaultValue The default value to use if there isn't a edit or default value already.\n    *\n    * @type {function(*, *=): *}\n    */\n   const setValue = useCallback(\n      (path, value, isChanged = false) => {\n         const newEditValues = {...editValues, [path]: value};\n\n         setEditValues((editValues) => ({...editValues, [path]: value}));\n\n         if (isChanged) {\n            setIsChanged(true);\n         }\n\n         if (onChange) {\n            let requiredObject;\n\n            if (isArray(requiredEditValues)) {\n               requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n            } else {\n               requiredObject = {...defaultValues};\n            }\n            onChange?.({...requiredObject, ...newEditValues}, newEditValues);\n         }\n      },\n      [editValues, defaultValues]\n   );\n\n   /**\n    * Indicates if there is a value set for the property. If the default value is deleted, false will be returned even\n    * though there is a defaultValue.\n    *\n    * @Param name The name of the property\n    * @type {function(*=, *=): boolean}\n    */\n   const hasValue = useCallback(\n      (name) => {\n         return hasValueUtil(getValue(name));\n      },\n      [getValue]\n   );\n\n   return [\n      editValues,\n      handleChange,\n      {\n         handleSelectChange,\n         isChanged,\n         setIsChanged,\n         setEditValues,\n         defaultValues,\n         setDefaultValues,\n         resetValues,\n         getValue,\n         setValue,\n         hasValue,\n      },\n   ];\n}\n","import PropTypes from 'prop-types';\nimport React, {useRef, useEffect, forwardRef} from 'react';\n\n/**\n * Form component that handles custom validation and removing prevents default for the submit event.\n *\n * Reviewed: 3/26/20\n */\nconst Form = forwardRef(\nfunction Form({onSubmit, onValid, validate, customValidity, reportInvalid, children, ...props}, ref) {\n   const useFormEl = useRef();\n   const formEl = ref || useFormEl;\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    */\n   useEffect(() => {\n      /**\n       * Validate the form data. Calls customValidity if the rest of the form is valid.\n       *\n       * @param isReport True if the validity should be reported.\n       * @return {boolean} True if the form is valid and the custom validity is valid.\n       */\n      const checkValidity = (isReport = true) => {\n         let isValid;\n         let form = formEl.current;\n         if (form) {\n            // noinspection JSUnresolvedFunction\n            isValid = form.checkValidity();\n            if (isValid && customValidity) {\n               isValid = customValidity();\n            }\n            if (!isValid && isReport) {\n               // noinspection JSUnresolvedFunction\n               return form.reportValidity();\n            }\n            return isValid\n         }\n         return true;\n      };\n\n      if (validate && checkValidity(reportInvalid)) {\n         onValid && onValid()\n      }\n   }, [validate, reportInvalid, customValidity, onValid, formEl]);\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    *\n    * @param prevProps\n    * @param prevState\n    * @param snapshot\n    */\n\n   /**\n    * Submits the form data and prevents the default for the submit event.\n    * @param event The submit event.\n    */\n   const submitHandler = (event) => {\n      event && event.preventDefault();\n      event && event.stopPropagation();\n      let form = formEl.current;\n      let isValid = true;\n\n      if (customValidity) {\n         isValid = customValidity();\n      }\n      if (!isValid && reportInvalid) {\n         // noinspection JSUnresolvedFunction\n         return form.reportValidity();\n      }\n\n      if (isValid) {\n         onSubmit && onSubmit(event);\n      }\n   };\n\n   return (\n      <form ref={formEl} onSubmit={submitHandler} {...props} className={props.className}>\n         {children}\n      </form>\n   );\n});\n\nForm.propTypes = {\n   validate: PropTypes.bool,           // True to force validation.\n   reportInvalid: PropTypes.bool,      // True to report when invalid. Can prevent reporting if needed.\n   onValid: PropTypes.func,            // Callback when the form is valid.\n   onSubmit: PropTypes.func,           // Submit callback to submit the form inputs.\n   customValidity: PropTypes.func,     // A validity check from the parent component.\n};\n\nForm.defaultProps = {\n   validate: false,\n   reportInvalid: true,\n};\n\nexport default Form;","import React, {useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useIntl} from 'react-intl';\nimport {useLocation} from 'react-router';\nimport { Prompt as PromptDOM } from \"react-router-dom\"\nimport {formatMessage} from '../../utils/Utils';\n\n/**\n * The component to prompt the user when leaving the page with unsaved changes.\n *\n * Reviewed:\n */\nexport default function Prompt({when, messageKey = 'leavePage', message, ...props}) {\n   const intl = useIntl();\n   const location = useLocation();\n\n   const getPrompt = useCallback((newLocation = {}) => {\n      if (newLocation && location && newLocation.pathname !== window.location.pathname) {\n         if (messageKey) {\n            return formatMessage(intl, 'leavePage', 'Discard changes?')\n         }\n         return message;\n      }\n   }, [intl, message, messageKey, location]);\n\n   return (\n      <PromptDOM when={when} message={getPrompt} {...props}/>\n   )\n}\n\nPrompt.propTypes = {\n   when: PropTypes.bool.isRequired,\n   message: PropTypes.string,\n   messageKey: PropTypes.string,\n}\n","import {useLayoutEffect} from 'react';\nimport {useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useEffect} from 'react';\n\nuseKeyDown.propTypes = {\n   onClose: PropTypes.func,\n   onSubmit: PropTypes.func,\n};\n\n/**\n * Hook to call onClose when escape is pressed, and onSubmit when the enter key is pressed.\n * @param onClose The callback for closing for escape key.\n * @param onSubmit The callback for submit for enter key.\n * @param ignoreDefaultPrevented Indicates if the defaultPrevented should be ignored.\n */\nfunction useKeyDown(onClose, onSubmit, ignoreDefaultPrevented = false, onOther) {\n\n   const handleKey = useCallback((event) => {\n      if (ignoreDefaultPrevented || !event.defaultPrevented) {\n         if (event.key === 'Escape' && onClose) {\n            event.preventDefault();\n            onClose(event);\n         } else if (event.key === 'Enter' && onSubmit) {\n            onSubmit(event);\n         } else {\n            onOther?.(event);\n         }\n      }\n   }, [ignoreDefaultPrevented, onClose, onOther, onSubmit]);\n\n   /**\n    * Handles keydown events for Escape and Enter.\n    */\n   useEffect(() => {\n      document.addEventListener('keydown', handleKey, false);\n      }, [handleKey]);\n\n   /**\n    * Cleanup the listener when this component is removed. This is needed because of a bug in react. Should be able to\n    * do this from UseEffect.\n    */\n   useLayoutEffect(() => {\n      return () => {\n         document.removeEventListener('keydown', handleKey, false);\n      }\n   }, [handleKey]);\n\n   return [handleKey, onSubmit, onClose];\n}\n\nexport default useKeyDown;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n"],"sourceRoot":""}