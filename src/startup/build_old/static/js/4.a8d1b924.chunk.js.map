{"version":3,"sources":["../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/icons/VisibilityOff.js","../node_modules/@material-ui/icons/Visibility.js","fhg/components/security/PasswordTextField.js","components/UserEdit.js","components/TextFieldLF.js","fhg/components/ProgressButton.js","fhg/components/edit/useEditData.js","fhg/components/edit/Form.js","fhg/components/edit/Prompt.js","fhg/hooks/useKeyDown.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/pick.js","../node_modules/lodash/_isFlattenable.js","fhg/components/ConfirmButton.js","../node_modules/lodash/_basePick.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/flatten.js"],"names":["InputAdornment","React","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","value","_extends","clsx","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","PasswordTextField","password","confirm","onChange","isNew","disabled","useState","showPassword","setShowPassword","editValues","setEditValues","useEffect","target","document","getElementById","setCustomValidity","handleChange","event","editChange","inputProps","pattern","title","labelKey","fullWidth","required","type","autoComplete","InputProps","endAdornment","IconButton","aria-label","onMouseDown","id","useStyles","makeStyles","theme","formStyle","width","flexDirection","infoRootStyle","spacing","overflow","marginBottom","infoInnerStyle","padding","buttonPanelStyle","borderTop","palette","divider","frameStyle","buttonStyle","error","main","deleteColorStyle","backgroundColor","lighten","light","deleteButtonStyle","UserEdit","isAdmin","useTheme","useParams","clientId","userIdParam","userId","intl","useIntl","history","useHistory","editItem","username","isDeleted","location","useLocation","state","useQueryFHG","USER_CLIENT_QUERY","variables","skip","validate","userData","useMutationFHG","USER_CREATE_UPDATE","userCreateUpdate","USER_DELETE","userDelete","isSaving","setIsSaving","useEditData","undefined","isChanged","setIsChanged","defaultValues","setDefaultValues","resetValues","getValue","authState","useRecoilValue","authenticationDataStatus","users","length","handleClose","useCallback","defer","replace","ADMIN_USERS_PATH","edit","nodeIdOpen","USER_NODE","useKeyDown","handleSubmit","a","uuid","optimisticResponse","__typename","user","update","cacheUpdate","getUserCacheQueries","handleDelete","stopPropagation","preventDefault","user_Delete","cacheDelete","handleChangeCallback","reason","newValue","formatMessage","Grid","container","fullHeight","direction","wrap","item","resizable","gutterBottom","Form","onSubmit","Prompt","when","TextFieldLF","autoFocus","labelTemplate","defaultValue","contactName","email","helperText","justify","ProgressButton","isProgress","size","ButtonFHG","onClick","ConfirmButton","dark","onConfirm","values","submitStyle","startIcon","Delete","buttonTypographyProps","createMuiTheme","text","secondary","primary","placeholderKey","helpKey","InputLabelProps","label","isFormattedNumber","classesProp","editData","internalKey","placeholder","textFieldProps","useLabelKey","format","currentLabel","useMessage","currentPlaceholder","helpText","useInputProps","get","console","log","inputComponent","CustomInputTextField","NumberFormatCustom","key","textFieldStyle","shrink","spinnerMargin","darkSpinnerMargin","isSpinnerLight","typographyProps","buttonProperties","thickness","defaultValuesProp","requiredEditValues","isArrayType","isArray","requiredObject","pick","useValue","handleArrayChange","newEditValues","index","componentName","requiredValues","defaultValuesLocal","useDefaultValues","handleSelectChange","path","editValue","setValue","hasValue","hasValueUtil","forwardRef","onValid","customValidity","reportInvalid","useFormEl","useRef","formEl","isValid","isReport","form","current","checkValidity","reportValidity","defaultProps","messageKey","message","getPrompt","newLocation","pathname","window","onClose","ignoreDefaultPrevented","onOther","handleKey","defaultPrevented","addEventListener","useLayoutEffect","removeEventListener","propTypes","PropTypes","func","arrayPush","isFlattenable","module","baseFlatten","array","depth","predicate","isStrict","result","basePick","flatRest","object","paths","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","messageStyle","background","paddingRight","snackbarMessageStyle","closeButtonStyle","right","top","zIndex","titleKey","buttonLabelKey","onCancel","confirmProps","titleValues","onUndo","isModalOpen","setIsModalOpen","showUndelete","setShowUndelete","useTitleValues","handleUndoClose","submitKey","hideBackdrop","submitColor","messageValues","submitColorStyle","open","autoHideDuration","UNDO_DURATION","ContentProps","action","fontSize","basePickBy","hasIn","flatten","overRest","setToString"],"mappings":"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","file":"static/js/4.a8d1b924.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport React, {useState, Fragment, useEffect} from 'react';\nimport TextFieldFHG from '../../../components/TextFieldLF';\nimport {editChange} from '../../utils/Utils';\n\n/**\n * The TextField with preset formats.\n */\nexport default function PasswordTextField({password, confirm, margin, onChange, isNew, disabled}) {\n   const [showPassword, setShowPassword] = useState(false);\n   const [editValues, setEditValues] = useState({});\n\n   useEffect(() => {\n      const target = document.getElementById('confirm_password');\n      if (target) {\n         target.setCustomValidity(\n            editValues.confirm !== editValues.password ? 'Confirm does not match the password.' : ''\n         );\n      }\n   }, [editValues.confirm, editValues.password, password, confirm]);\n\n   const handleShowPasswordClick = () => {\n      setShowPassword(!showPassword);\n   };\n\n   const handleChange = (event) => {\n      setEditValues({...editValues, ...editChange(event)});\n      onChange && onChange(event);\n   };\n\n   return (\n      <Fragment>\n         <TextFieldFHG\n            name='password'\n            inputProps={{\n               pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&-]{8,}$',\n               title: 'Password must contain at least 8 characters with one or more uppercase, lowercase, number and symbol.',\n            }}\n            labelKey={isNew ? 'user.password.label' : 'user.changePassword.label'}\n            fullWidth\n            required={isNew}\n            disabled={disabled}\n            type={showPassword ? 'text' : 'password'}\n            autoComplete='current-password'\n            onChange={handleChange}\n            value={password}\n            margin={margin}\n            // eslint-disable-next-line\n            InputProps={{\n               'aria-label': 'Password',\n               endAdornment: (\n                  <InputAdornment position='end'>\n                     <IconButton\n                        aria-label='Toggle password visibility'\n                        onMouseDown={handleShowPasswordClick}\n                        disabled={disabled}\n                     >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                     </IconButton>\n                  </InputAdornment>\n               ),\n            }}\n         />\n         {!showPassword && (\n            <TextFieldFHG\n               name='confirm'\n               labelKey={'user.confirm.label'}\n               type={'password'}\n               required={isNew}\n               onChange={handleChange}\n               value={confirm}\n               autoComplete='current-password'\n               fullWidth\n               disabled={disabled}\n               InputProps={{id: 'confirm_password'}}\n            />\n         )}\n      </Fragment>\n   );\n}\n","import {lighten} from '@material-ui/core/styles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {Delete} from '@material-ui/icons';\nimport {defer} from 'lodash';\nimport React, {useState, useCallback} from 'react';\nimport {useIntl} from 'react-intl';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {useRecoilValue} from 'recoil';\nimport {validate} from 'uuid';\nimport {v4 as uuid} from 'uuid';\nimport {ADMIN_USERS_PATH} from '../Constants';\nimport {USER_DELETE} from '../data/QueriesGL';\nimport {USER_CLIENT_QUERY} from '../data/QueriesGL';\nimport {getUserCacheQueries} from '../data/QueriesGL';\nimport {USER_CREATE_UPDATE} from '../data/QueriesGL';\nimport ButtonFHG from '../fhg/components/ButtonFHG';\nimport ConfirmButton from '../fhg/components/ConfirmButton';\nimport Form from '../fhg/components/edit/Form';\nimport Prompt from '../fhg/components/edit/Prompt';\nimport useEditData from '../fhg/components/edit/useEditData';\nimport Grid from '../fhg/components/Grid';\nimport ProgressButton from '../fhg/components/ProgressButton';\nimport {authenticationDataStatus} from '../fhg/components/security/AuthenticatedUser';\nimport PasswordTextField from '../fhg/components/security/PasswordTextField';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport useQueryFHG from '../fhg/hooks/data/useQueryFHG';\nimport {useEffect} from 'react';\nimport useKeyDown from '../fhg/hooks/useKeyDown';\nimport {cacheDelete} from '../fhg/utils/DataUtil';\nimport {cacheUpdate} from '../fhg/utils/DataUtil';\nimport {formatMessage} from '../fhg/utils/Utils';\nimport {USER_NODE} from './AdminDrawer';\nimport TextFieldLF from './TextFieldLF';\nimport {useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      formStyle: {\n         maxHeight: '100%',\n         // overflow: 'hidden',\n         width: '100%',\n         display: 'flex',\n         flexDirection: 'column',\n      },\n      infoRootStyle: {\n         maxHeight: `calc(100% - ${theme.spacing(5)}px)`,\n         '& > *': {\n            marginRight: theme.spacing(1),\n         },\n         overflow: 'auto',\n         marginBottom: theme.spacing(1),\n      },\n      infoInnerStyle: {\n         padding: theme.spacing(0, 2),\n      },\n      buttonPanelStyle: {\n         marginLeft: -8,\n         borderTop: `solid 1px ${theme.palette.divider}`,\n         margin: theme.spacing(0, 0, 0, 0),\n         padding: theme.spacing(1, 2, 0),\n         '& > *': {\n            marginRight: theme.spacing(1),\n         },\n      },\n      frameStyle: {\n         padding: theme.spacing(3, 0),\n      },\n      '::placeholder': {\n         color: '#707070 !important',\n      },\n      buttonStyle: {\n         margin: theme.spacing(1),\n         '&:hover': {\n            color: theme.palette.error.main,\n         },\n      },\n      deleteColorStyle: {\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\n         '&:hover': {\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\n         },\n      },\n      deleteButtonStyle: {\n         '&:hover': {\n            color: theme.palette.error.main,\n         },\n      },\n   }),\n   {name: 'UserEditStyles'}\n);\n\nexport default function UserEdit({isAdmin = false}) {\n   const classes = useStyles();\n   const theme = useTheme();\n   const {clientId, userId: userIdParam} = useParams();\n   const intl = useIntl();\n   const history = useHistory();\n   const editItem = {\n      name: '',\n      username: '',\n      clientId,\n      isDeleted: false,\n   };\n\n   const location = useLocation();\n   const userId = location?.state?.id || userIdParam;\n   const isNew = !userId;\n\n   const [userData] = useQueryFHG(\n      USER_CLIENT_QUERY,\n      {variables: {clientId, id: userId}, skip: !(isAdmin || validate(clientId)) || !userId},\n      'user.type'\n   );\n   const [userCreateUpdate] = useMutationFHG(USER_CREATE_UPDATE);\n   const [userDelete] = useMutationFHG(USER_DELETE);\n\n   const [isSaving, setIsSaving] = useState(false);\n   const [\n      editValues,\n      handleChange,\n      {isChanged = false, setIsChanged, defaultValues, setDefaultValues, resetValues, getValue},\n   ] = useEditData(isNew ? editItem : undefined, ['id', 'clientId']);\n\n   const authState = useRecoilValue(authenticationDataStatus);\n\n   useEffect(() => {\n      if (isNew) {\n         resetValues();\n      }\n   }, [isNew, resetValues]);\n\n   useEffect(() => {\n      if (userData?.users?.length > 0) {\n         resetValues();\n         setDefaultValues(userData.users[0]);\n      }\n   }, [userData, setDefaultValues, resetValues]);\n\n   const handleClose = useCallback(() => {\n      // onClose?.(clientId);\n      resetValues();\n\n      defer(() => {\n         if (!isAdmin) {\n            location.state = {edit: undefined, id: undefined, nodeIdOpen: USER_NODE};\n            history.replace(location);\n         } else {\n            history.replace(ADMIN_USERS_PATH);\n         }\n      });\n   }, [isAdmin, resetValues, location, history]);\n\n   useKeyDown(handleClose);\n\n   /**\n    * Submit the user.\n    * @return {Promise<void>}\n    */\n   const handleSubmit = useCallback(async () => {\n      if (isChanged) {\n         try {\n            setIsSaving(true);\n\n            await userCreateUpdate({\n               variables: {id: uuid(), ...editValues},\n               optimisticResponse: {\n                  __typename: 'Mutation',\n                  user: {\n                     __typename: 'User',\n                     ...defaultValues,\n                     ...editValues,\n                     clientId: getValue('clientId') || '',\n                     isDeleted: false,\n                  },\n               },\n               update: cacheUpdate(getUserCacheQueries(clientId || null), editValues.id, 'user'),\n            });\n            setIsSaving(false);\n            setIsChanged(false);\n            handleClose();\n         } catch (e) {\n            setIsSaving(false);\n         }\n      } else {\n         handleClose();\n      }\n   }, [getValue, clientId, userCreateUpdate, handleClose, isChanged, defaultValues, editValues, setIsChanged]);\n\n   const handleDelete = async (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      setIsSaving(true);\n\n      await userDelete({\n         variables: {id: userId},\n         optimisticResponse: {user_Delete: 1},\n         update: cacheDelete(getUserCacheQueries(clientId || null), userId),\n      });\n      setIsSaving(false);\n      handleClose();\n   };\n\n   /**\n    * Handle onChange events for the password. Check if the password and confirm match.\n    *\n    * @param event The event that changed the input.\n    * @param value The value if the component is an Autocomplete\n    * @param name\n    * @param reason The reason of the value change if Autocomplete\n    */\n   const handleChangeCallback = useCallback(\n      (event, value, reason, newValue, name) => {\n         handleChange(event, value, reason, newValue, name);\n\n         if (name === 'password') {\n            const target = document.getElementById('confirm_password');\n            if (target) {\n               target.setCustomValidity(\n                  this.state.confirm !== this.state.password\n                     ? formatMessage(intl, 'user.confirmMismatch.message', 'Confirm does not match the password.')\n                     : ''\n               );\n            }\n         }\n      },\n      [handleChange, intl]\n   );\n\n   return (\n      <Grid\n         container\n         fullWidth\n         fullHeight\n         className={classes.frameStyle}\n         direction={'column'}\n         overflow={'visible'}\n         wrap={'nowrap'}\n      >\n         {!isAdmin && (\n            <Grid item resizable={false} className={classes.infoInnerStyle}>\n               <TypographyFHG variant={'h5'} id={'user.title.label'} color={'textSecondary'} gutterBottom />\n            </Grid>\n         )}\n         <Grid item container resizable>\n            <Form onSubmit={handleSubmit} className={classes.formStyle}>\n               <Prompt when={isChanged} />\n               <Grid name={'User Edit Root'} item fullWidth className={classes.infoRootStyle}>\n                  <Grid name={'User Edit Inner'} container item fullWidth className={classes.infoInnerStyle}>\n                     <TextFieldLF\n                        key={'contactName' + defaultValues.id}\n                        name={'contactName'}\n                        autoFocus\n                        labelTemplate={'user.{name}.label'}\n                        onChange={handleChange}\n                        defaultValue={defaultValues.contactName}\n                        value={editValues.contactName}\n                        required\n                     />\n                     <TextFieldLF\n                        key={'email' + defaultValues.id}\n                        name={'email'}\n                        labelTemplate={'user.{name}.label'}\n                        onChange={handleChange}\n                        defaultValue={defaultValues.email}\n                        value={editValues.email}\n                        required\n                     />\n                     <TextFieldLF\n                        key={'username' + defaultValues.id}\n                        name={'username'}\n                        labelTemplate={'user.{name}.label'}\n                        onChange={handleChange}\n                        defaultValue={defaultValues.username}\n                        value={editValues.username}\n                        disabled={!isNew}\n                        helperText={!isNew ? 'Username cannot be changed' : undefined}\n                        required\n                     />\n                     <PasswordTextField\n                        key={'password' + defaultValues.id}\n                        name='password'\n                        fullWidth\n                        isNew={isNew}\n                        disabled={isSaving}\n                        onChange={handleChangeCallback}\n                        password={editValues.password}\n                        confirm={editValues.confirm}\n                     />\n                  </Grid>\n               </Grid>\n               <Grid\n                  container\n                  item\n                  direction={'row'}\n                  fullWidth\n                  className={classes.buttonPanelStyle}\n                  justify={'space-between'}\n                  overflow={'visible'}\n                  resizable={false}\n                  alignItems={'center'}\n               >\n                  <Grid item>\n                     <ProgressButton\n                        isProgress={isSaving}\n                        variant='text'\n                        color='primary'\n                        type={'submit'}\n                        size='large'\n                        labelKey='save.label'\n                        disabled={isSaving}\n                     />\n                     <ButtonFHG\n                        variant='text'\n                        size={'large'}\n                        labelKey={'cancel.button'}\n                        disabled={isSaving}\n                        onClick={() => handleClose()}\n                     />\n                  </Grid>\n                  {isAdmin && defaultValues?.username !== authState?.username && (\n                     <Grid item>\n                        <ConfirmButton\n                           className={classes.buttonStyle}\n                           color={theme.palette.error.dark}\n                           onConfirm={handleDelete}\n                           values={{\n                              type: isAdmin ? 'admin user' : 'user',\n                              name: getValue('contactName'),\n                           }}\n                           size='large'\n                           submitStyle={classes.deleteColorStyle}\n                           startIcon={<Delete />}\n                           buttonTypographyProps={{variant: 'inherit'}}\n                           disabled={isSaving || isNew}\n                        />\n                     </Grid>\n                  )}\n               </Grid>\n            </Form>\n         </Grid>\n      </Grid>\n   );\n}\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport TextField from '@material-ui/core/TextField';\nimport get from 'lodash/get';\nimport React from 'react';\nimport NumberFormatCustom from '../fhg/components/NumberFormat';\nimport useMessage from '../fhg/hooks/useMessage';\nimport CustomInputTextField from './CustomInputTextField';\nimport ThemeProvider from './ThemeProvider';\n\nconst theme = createMuiTheme({\n   palette: {\n      text: {\n         secondary: '#707070',\n         primary: '#527928',\n      },\n   },\n});\n\n/**\n * The TextField with preset formats.\n\n * @param className\n * @param name\n * @param labelKey\n * @param placeholderKey\n * @param helpKey\n * @param helperText\n * @param defaultValue\n * @param value\n * @param onChange\n * @param margin\n * @param InputLabelProps\n * @param InputProps\n * @param label\n * @param fullWidth\n * @param isFormattedNumber\n * @param variant\n * @param size\n * @param labelTemplate\n * @param editData\n * @param classesProp\n * @param internalKey\n * @param textFieldProps\n * @param placeholder The placeholder for the text component.\n * @return {JSX.Element}\n * @constructor\n */\nexport default function TextFieldLF({\n   className,\n   name,\n   labelKey,\n   placeholderKey,\n   helpKey,\n   helperText,\n   defaultValue,\n   value,\n   onChange,\n   margin = 'normal',\n   InputLabelProps,\n   InputProps,\n   label,\n   fullWidth = true,\n   isFormattedNumber,\n   variant = 'outlined',\n   size = 'small',\n   labelTemplate,\n   editData,\n   classes: classesProp,\n   internalKey,\n   placeholder,\n   ...textFieldProps\n}) {\n   const classes = {...classesProp};\n   const useLabelKey = labelTemplate?.format({name}) || labelKey;\n   const currentLabel = useMessage(useLabelKey, label);\n   const currentPlaceholder = useMessage(placeholderKey) || placeholder;\n   const helpText = useMessage(helpKey, helperText) || helperText;\n\n   const useInputProps = {\n      ...InputProps,\n   };\n\n   if (isFormattedNumber) {\n      if (get(InputProps, 'inputComponent') || get(InputProps, 'inputProps.component')) {\n         console.log('isFormattedNumber cannot have a different input component.', InputProps);\n      }\n      useInputProps.inputComponent = CustomInputTextField;\n      useInputProps.inputProps =\n         {...get(InputProps, 'inputProps', {}), ...(textFieldProps.inputProps || {}), component: NumberFormatCustom};\n   }\n\n   return (\n      <ThemeProvider theme={theme}>\n         <TextField\n            {...textFieldProps}\n            key={'internal' + internalKey}\n            name={name}\n            className={`${classes.textFieldStyle} ${className}`}\n            label={currentLabel}\n            placeholder={currentPlaceholder}\n            helperText={helpText}\n            defaultValue={defaultValue}\n            value={value}\n            onChange={onChange}\n            InputProps={useInputProps}\n            InputLabelProps={{\n               ...InputLabelProps,\n               shrink: true,\n            }}\n            variant={variant}\n            size={size}\n            margin={margin}\n            fullWidth={fullWidth}\n         />\n      </ThemeProvider>\n   );\n}\n","// eslint-disable-next-line\nimport Button, {ButtonProps} from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from './Typography';\n\nconst useStyles = makeStyles(theme => ({\n   spinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: 'white',\n   },\n   darkSpinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: theme.palette.primary.main,\n   },\n}), {name: 'ProgressButtonStyles'});\n\n/**\n * Button Component to show progress.\n *\n * Reviewed:\n */\nProgressButton.propTypes = {\n   isProgress: PropTypes.bool.isRequired, //Indicates if the progress should be showing.\n   labelKey: PropTypes.string,            // Localization key for the button label.\n   typographyProps: PropTypes.any,        // The properties for the typography component.\n   ...Button.propTypes,\n};\n\n/**\n *\n * @param isProgress\n * @param labelKey\n * @param isSpinnerDark Indicates if the spinner should be dark.\n * @param children\n * @param typographyProps\n * @param buttonProperties {ButtonProps}\n * @return {JSX.Element}\n * @constructor\n */\nexport default function ProgressButton({isProgress = false, labelKey, isSpinnerLight = false, children, typographyProps, ...buttonProperties}) {\n   const classes = useStyles();\n\n   return (\n      <Button {...buttonProperties}>\n         {labelKey && (\n            <Typography variant={'inherit'} id={labelKey} {...typographyProps}/>\n         )}\n         {children}\n         {isProgress && <CircularProgress className={buttonProperties?.classes?.spinnerMargin || (!isSpinnerLight ? classes.darkSpinnerMargin : classes.spinnerMargin)} size={15} thickness={2.5}/>}\n      </Button>\n   );\n}\n\n","import get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport pick from 'lodash/pick';\nimport {useState, useEffect, useCallback} from 'react';\nimport {v4 as uuid} from 'uuid';\nimport {hasValue as hasValueUtil} from '../../utils/Utils';\nimport {editChange} from '../../utils/Utils';\n\nexport default function useEditData(defaultValuesProp, requiredEditValues = [], isArrayType = false, onChange) {\n   const [isChanged, setIsChanged] = useState(false);\n   const [defaultValues, setDefaultValues] = useState(defaultValuesProp ? defaultValuesProp : isArrayType ? [] : {});\n   const [editValues, setEditValues] = useState(\n      isArrayType ? [] : !isArray(requiredEditValues) ? requiredEditValues : {}\n   );\n\n   useEffect(() => {\n      if (defaultValues && !isArrayType) {\n         let requiredObject;\n\n         if (isArray(requiredEditValues)) {\n            requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n         } else {\n            requiredObject = {...defaultValues};\n         }\n\n         setEditValues({...editValues, ...requiredObject});\n      }\n      //editValues and requiredEditValues cause constant changes.\n      // eslint-disable-next-line\n   }, [defaultValues, isArrayType]);\n\n   /**\n    * Handle onChange events for the inputs.\n    *\n    * NOTE:\n    * Input components MUST have their name set to be set in the editValues.\n    *\n    * @param event The event that changed the input.\n    * @param value The value if the component is an Autocomplete\n    * @param reason The reason of the value change if Autocomplete\n    * @param newValue The value from the component.\n    * @param name the name of the component.\n    */\n   const handleChange = (event, value, reason, newValue, name) => {\n      let useValue = newValue;\n\n      if (isArrayType) {\n         handleArrayChange(event);\n      } else {\n         let newEditValues;\n\n         if (newValue) {\n            newEditValues = {...editValues, ...newValue};\n         } else {\n            useValue = editChange(event, value, reason, true, newValue, name);\n            newEditValues = {...editValues, ...useValue};\n         }\n         setEditValues(newEditValues);\n         if (onChange) {\n            let requiredObject;\n\n            if (isArray(requiredEditValues)) {\n               requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n            } else {\n               requiredObject = {...defaultValues};\n            }\n            onChange?.({...requiredObject, ...useValue}, newEditValues);\n         }\n\n         if (reason !== 'reset') {\n            setIsChanged(true);\n         }\n      }\n      return useValue;\n   };\n\n   const handleArrayChange = (event) => {\n      const index = get(event, 'target.dataset.index');\n      const {componentName, newValue} = editChange(event, undefined, undefined, false);\n\n      const edit = editValues[index];\n      if (!edit) {\n         let requiredValues = {};\n         // Is there a default at each index?\n         if (isArray(defaultValues)) {\n            const defaultValue = get(defaultValues, `[${index}]`);\n            if (defaultValue) {\n               if (isArray(requiredEditValues)) {\n                  requiredValues = pick(defaultValue, requiredEditValues);\n               } else {\n                  requiredValues = {uuid: defaultValue, id: defaultValue.id};\n               }\n            }\n            //Is there a generic default?\n         } else if (defaultValues) {\n            if (isArray(requiredEditValues)) {\n               requiredValues = pick(defaultValues, requiredEditValues);\n               requiredValues.uuid = uuid();\n            } else {\n               requiredValues = {uuid: uuid(), id: defaultValues.id};\n            }\n         }\n         editValues[index] = {[componentName]: newValue, ...requiredValues};\n      } else {\n         editValues[index] = {...edit, [componentName]: newValue};\n      }\n      setEditValues([...editValues]);\n      setIsChanged(true);\n   };\n\n   const resetValues = useCallback(\n      (defaultValuesLocal) => {\n         let requiredObject;\n         const useDefaultValues = defaultValuesLocal || defaultValuesProp || (isArrayType ? [] : {});\n\n         if (isArray(requiredEditValues)) {\n            requiredObject = pick(useDefaultValues, ['id', ...requiredEditValues]);\n         } else {\n            requiredObject = {...useDefaultValues};\n         }\n\n         setEditValues({...requiredObject});\n         setDefaultValues(useDefaultValues);\n         setIsChanged(false);\n      },\n      [isArrayType]\n   );\n\n   const handleSelectChange = (value, name) => {\n      setEditValues((editValues) => ({...editValues, [name]: value}));\n      setIsChanged(true);\n   };\n\n   /**\n    * Get the current value for the named property. If the value has been edited, it will return the edited value even\n    * if it is null, and it will return the default value if not edited. If there is no default value, the default\n    * value from the parameter is used.\n    *\n    * @Param path The path to the property\n    * @Param defaultValue The default value to use if there isn't a edit or default value already.\n    *\n    * @type {function(*, *=): *}\n    */\n   const getValue = useCallback(\n      (path, defaultValue) => {\n         const editValue = get(editValues, path);\n         return editValue !== undefined ? editValue : get(defaultValues, path) || defaultValue;\n      },\n      [editValues, defaultValues]\n   );\n\n   /**\n    * Get the current value for the named property. If the value has been edited, it will return the edited value even\n    * if it is null, and it will return the default value if not edited. If there is no default value, the default\n    * value from the parameter is used.\n    *\n    * @Param path The path to the property\n    * @Param defaultValue The default value to use if there isn't a edit or default value already.\n    *\n    * @type {function(*, *=): *}\n    */\n   const setValue = useCallback(\n      (path, value, isChanged = false) => {\n         const newEditValues = {...editValues, [path]: value};\n\n         setEditValues((editValues) => ({...editValues, [path]: value}));\n\n         if (isChanged) {\n            setIsChanged(true);\n         }\n\n         if (onChange) {\n            let requiredObject;\n\n            if (isArray(requiredEditValues)) {\n               requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n            } else {\n               requiredObject = {...defaultValues};\n            }\n            onChange?.({...requiredObject, ...newEditValues}, newEditValues);\n         }\n      },\n      [editValues, defaultValues]\n   );\n\n   /**\n    * Indicates if there is a value set for the property. If the default value is deleted, false will be returned even\n    * though there is a defaultValue.\n    *\n    * @Param name The name of the property\n    * @type {function(*=, *=): boolean}\n    */\n   const hasValue = useCallback(\n      (name) => {\n         return hasValueUtil(getValue(name));\n      },\n      [getValue]\n   );\n\n   return [\n      editValues,\n      handleChange,\n      {\n         handleSelectChange,\n         isChanged,\n         setIsChanged,\n         setEditValues,\n         defaultValues,\n         setDefaultValues,\n         resetValues,\n         getValue,\n         setValue,\n         hasValue,\n      },\n   ];\n}\n","import PropTypes from 'prop-types';\nimport React, {useRef, useEffect, forwardRef} from 'react';\n\n/**\n * Form component that handles custom validation and removing prevents default for the submit event.\n *\n * Reviewed: 3/26/20\n */\nconst Form = forwardRef(\nfunction Form({onSubmit, onValid, validate, customValidity, reportInvalid, children, ...props}, ref) {\n   const useFormEl = useRef();\n   const formEl = ref || useFormEl;\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    */\n   useEffect(() => {\n      /**\n       * Validate the form data. Calls customValidity if the rest of the form is valid.\n       *\n       * @param isReport True if the validity should be reported.\n       * @return {boolean} True if the form is valid and the custom validity is valid.\n       */\n      const checkValidity = (isReport = true) => {\n         let isValid;\n         let form = formEl.current;\n         if (form) {\n            // noinspection JSUnresolvedFunction\n            isValid = form.checkValidity();\n            if (isValid && customValidity) {\n               isValid = customValidity();\n            }\n            if (!isValid && isReport) {\n               // noinspection JSUnresolvedFunction\n               return form.reportValidity();\n            }\n            return isValid\n         }\n         return true;\n      };\n\n      if (validate && checkValidity(reportInvalid)) {\n         onValid && onValid()\n      }\n   }, [validate, reportInvalid, customValidity, onValid, formEl]);\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    *\n    * @param prevProps\n    * @param prevState\n    * @param snapshot\n    */\n\n   /**\n    * Submits the form data and prevents the default for the submit event.\n    * @param event The submit event.\n    */\n   const submitHandler = (event) => {\n      event && event.preventDefault();\n      event && event.stopPropagation();\n      let form = formEl.current;\n      let isValid = true;\n\n      if (customValidity) {\n         isValid = customValidity();\n      }\n      if (!isValid && reportInvalid) {\n         // noinspection JSUnresolvedFunction\n         return form.reportValidity();\n      }\n\n      if (isValid) {\n         onSubmit && onSubmit(event);\n      }\n   };\n\n   return (\n      <form ref={formEl} onSubmit={submitHandler} {...props} className={props.className}>\n         {children}\n      </form>\n   );\n});\n\nForm.propTypes = {\n   validate: PropTypes.bool,           // True to force validation.\n   reportInvalid: PropTypes.bool,      // True to report when invalid. Can prevent reporting if needed.\n   onValid: PropTypes.func,            // Callback when the form is valid.\n   onSubmit: PropTypes.func,           // Submit callback to submit the form inputs.\n   customValidity: PropTypes.func,     // A validity check from the parent component.\n};\n\nForm.defaultProps = {\n   validate: false,\n   reportInvalid: true,\n};\n\nexport default Form;","import React, {useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useIntl} from 'react-intl';\nimport {useLocation} from 'react-router';\nimport { Prompt as PromptDOM } from \"react-router-dom\"\nimport {formatMessage} from '../../utils/Utils';\n\n/**\n * The component to prompt the user when leaving the page with unsaved changes.\n *\n * Reviewed:\n */\nexport default function Prompt({when, messageKey = 'leavePage', message, ...props}) {\n   const intl = useIntl();\n   const location = useLocation();\n\n   const getPrompt = useCallback((newLocation = {}) => {\n      if (newLocation && location && newLocation.pathname !== window.location.pathname) {\n         if (messageKey) {\n            return formatMessage(intl, 'leavePage', 'Discard changes?')\n         }\n         return message;\n      }\n   }, [intl, message, messageKey, location]);\n\n   return (\n      <PromptDOM when={when} message={getPrompt} {...props}/>\n   )\n}\n\nPrompt.propTypes = {\n   when: PropTypes.bool.isRequired,\n   message: PropTypes.string,\n   messageKey: PropTypes.string,\n}\n","import {useLayoutEffect} from 'react';\nimport {useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useEffect} from 'react';\n\nuseKeyDown.propTypes = {\n   onClose: PropTypes.func,\n   onSubmit: PropTypes.func,\n};\n\n/**\n * Hook to call onClose when escape is pressed, and onSubmit when the enter key is pressed.\n * @param onClose The callback for closing for escape key.\n * @param onSubmit The callback for submit for enter key.\n * @param ignoreDefaultPrevented Indicates if the defaultPrevented should be ignored.\n */\nfunction useKeyDown(onClose, onSubmit, ignoreDefaultPrevented = false, onOther) {\n\n   const handleKey = useCallback((event) => {\n      if (ignoreDefaultPrevented || !event.defaultPrevented) {\n         if (event.key === 'Escape' && onClose) {\n            event.preventDefault();\n            onClose(event);\n         } else if (event.key === 'Enter' && onSubmit) {\n            onSubmit(event);\n         } else {\n            onOther?.(event);\n         }\n      }\n   }, [ignoreDefaultPrevented, onClose, onOther, onSubmit]);\n\n   /**\n    * Handles keydown events for Escape and Enter.\n    */\n   useEffect(() => {\n      document.addEventListener('keydown', handleKey, false);\n      }, [handleKey]);\n\n   /**\n    * Cleanup the listener when this component is removed. This is needed because of a bug in react. Should be able to\n    * do this from UseEffect.\n    */\n   useLayoutEffect(() => {\n      return () => {\n         document.removeEventListener('keydown', handleKey, false);\n      }\n   }, [handleKey]);\n\n   return [handleKey, onSubmit, onClose];\n}\n\nexport default useKeyDown;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","import IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport React, {Fragment, useState} from 'react';\nimport ButtonLF from '../../components/ButtonLF';\nimport {UNDO_DURATION} from '../../Constants';\nimport ModalDialog from './dialog/ModalDialog';\nimport ProgressButton from './ProgressButton';\nimport Typography from './Typography';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n   messageStyle: {\n      backgroundColor: `${theme.palette.background.default} !important`,\n      color: `${theme.palette.text.secondary} !important`,\n      paddingRight: theme.spacing(6),\n   },\n   snackbarMessageStyle: {\n      marginRight: theme.spacing(1),\n   },\n   closeButtonStyle: {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      marginLeft: 'auto',\n      zIndex: 1001,\n   },\n\n}), {name: 'ConfirmButtonStyles'});\n\n/**\n * Button Component to show confirmation.\n *\n * Reviewed:\n */\nConfirmButton.propTypes = {\n   titleKey: PropTypes.string,                  // Localization key for the title.\n   messageKey: PropTypes.string,                // Localization key for the messages.\n   buttonLabelKey: PropTypes.string,            // Localization key for the button label.\n   onConfirm: PropTypes.func.isRequired,        // The callback when the action is confirmed.\n   onCancel: PropTypes.func,                    // The callback when the action is canceled.\n   component: PropTypes.any,                    // The Button component. Defaults to Button.\n   isProgress: PropTypes.bool,                  // Indicates if the confirmed action is in progress.\n   buttonProperties: PropTypes.any              // The properties for the button component.\n};\n\nexport default function ConfirmButton({\n   titleKey = 'confirmRemove.title',\n   messageKey = 'confirmRemoveValue.message',\n   buttonLabelKey = 'delete.button',\n   onConfirm,\n   onCancel,\n   confirmProps,\n   children,\n   color,\n   component,\n   values,\n   titleValues,\n   isProgress = false,\n   submitStyle,\n   onUndo = false,\n   buttonTypographyProps,\n   ...buttonProperties\n}) {\n   const classes = useStyles();\n\n   const [isModalOpen, setIsModalOpen] = useState(false);\n   const [showUndelete, setShowUndelete] = useState(false);\n\n   const useTitleValues = titleValues || values;\n\n   const handleClick = event => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      if (buttonProperties.type !== 'submit') {\n         setIsModalOpen(true);\n      }\n\n      buttonProperties?.onClick?.(event);\n   };\n\n   const handleConfirm = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      setIsModalOpen(false);\n\n      if (onUndo) {\n         setShowUndelete(true);\n      }\n      onConfirm && onConfirm();\n   };\n\n   const handleCancel = () => {\n      setIsModalOpen(false);\n      onCancel && onCancel();\n   };\n\n   const handleUndoClose = () => {\n      setShowUndelete(false);\n   };\n\n   const handleUndo = () => {\n      onUndo?.();\n      handleUndoClose();\n   };\n\n   return (\n      <Fragment>\n         {isModalOpen && (\n            <ModalDialog submitKey={buttonLabelKey} {...confirmProps} titleKey={titleKey} messageKey={messageKey}\n                         onSubmit={handleConfirm}\n                         onClose={handleCancel} hideBackdrop submitColor={color} messageValues={values}\n                         titleValues={useTitleValues}\n                         submitColorStyle={submitStyle}\n            />\n         )}\n         {showUndelete && (\n            <Snackbar\n               open={true}\n               autoHideDuration={UNDO_DURATION}\n               onClose={handleUndoClose}\n               ContentProps={{classes: {root: classes.messageStyle,}}}\n               message={(\n                  <Typography id={'confirmRemoveValue.Undo.message'} variant={'subtitle1'} className={classes.snackbarMessageStyle}\n                              values={values} color={'inherit'}\n                  >\n                     <ButtonLF labelKey={'undo.label'} onClick={handleUndo}/>\n                  </Typography>\n               )}\n               action={[\n                  <IconButton\n                     key='close'\n                     aria-label='Close'\n                     color='inherit'\n                     size={'small'}\n                     className={classes.closeButtonStyle}\n                     onClick={handleUndoClose}\n                  >\n                     <CloseIcon fontSize='inherit'/>\n                  </IconButton>,\n               ]}\n            />\n         )}\n         <ProgressButton isProgress={isProgress} onClick={handleClick} color={color} isSpinnerLight {...buttonProperties}>\n            {(!component && buttonLabelKey) && (\n               <Typography variant={'button'} id={buttonLabelKey} {...buttonTypographyProps}/>\n            )}\n            {children}\n         </ProgressButton>\n      </Fragment>\n   );\n}\n\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n"],"sourceRoot":""}