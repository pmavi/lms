{"version":3,"sources":["components/TextAreaField.js","fhg/Lms/ModulesEdit.js","fhg/Lms/Modules.js","fhg/Lms/Unit.js","fhg/Lms/Component/ViewUnitModal.js","fhg/Lms/Component/ChooseFile.js","fhg/Lms/Component/AddUnitModal.js","fhg/Lms/Component/ChooseFileEdit.js","fhg/Lms/Component/EditUnitModal.js","fhg/Lms/StyledTreeItem.js","fhg/Lms/index.js","components/TextFieldLF.js","fhg/components/ProgressButton.js","fhg/components/edit/Form.js"],"names":["theme","createMuiTheme","palette","text","secondary","primary","TextFieldLF","className","name","labelKey","placeholderKey","helpKey","helperText","defaultValue","value","onChange","margin","InputLabelProps","InputProps","label","fullWidth","isFormattedNumber","variant","size","labelTemplate","classesProp","editData","classes","internalKey","placeholder","rows","textFieldProps","hidden","useLabelKey","format","currentLabel","useMessage","currentPlaceholder","helpText","useInputProps","get","console","log","inputComponent","CustomInputTextField","inputProps","component","NumberFormatCustom","key","textFieldStyle","multiline","shrink","makeStyles","formStyle","maxHeight","width","display","flexDirection","infoRootStyle","spacing","marginRight","overflow","marginBottom","infoInnerStyle","padding","buttonPanelStyle","marginLeft","borderTop","divider","frameStyle","color","buttonStyle","error","main","deleteColorStyle","backgroundColor","lighten","light","deleteButtonStyle","addButton","btnRight","float","textCenter","textAlign","inputStyle","background","default","transform","transition","transitions","create","duration","shortest","paddingTop","marginTop","opacity","textDecoration","height","position","right","top","zIndex","cursor","border","useStyles","expand","expandOpen","titleStyle","tableMain","table","tableHeading","tableCell","tableWidth","fadeArea","fadeIn","labelRoot","paper","boxShadow","shadows","getModalStyle","left","ModuleEdit","isAdmin","useTheme","useState","order_no","editValues","setEditValues","module_id","setModuleId","addNew","setAddNew","isSaving","setIsSaving","orderNumber","setOrderNumber","useMutationFHG","MODULES_CREATE_UPDATE","moduleCreateUpdate","location","useLocation","history","useHistory","MODULE_DELETE","ModuleDelete","React","modalStyle","params","useParams","courseId","moduleId","useQueryFHG","MODULES_QUERY_WHERE","variables","course_id","isDeleted","moduleData","usePageTitle","titleKey","sortedModules","useMemo","modules","number","sortBy","length","OrderNumber","parseInt","handleClose","handleChange","e","target","trim","handleSubmit","a","type","id","uuid","optimisticResponse","__typename","refetchQueries","getModelCacheQueries","options","method","url","headers","axios","then","res","data","hits","hit","dataFound","map","itm","JSON","stringify","fields","catch","err","handleDeleteModule","event","module","stopPropagation","preventDefault","modules_Delete","update","cacheDelete","push","open","onClose","aria-labelledby","aria-describedby","style","onSubmit","encType","autoFocus","required","min","container","item","direction","justify","resizable","alignItems","isProgress","disabled","onClick","fullHeight","wrap","gutterBottom","moduleHeading","button","Link","selected","startIcon","Paper","aria-label","align","idx","clsx","treeLabelStyle","trHover","selectedTrBox","link","state","courseData","pathname","handleClickLink","handleEditModule","fontSize","onConfirm","values","messageKey","buttonLabelKey","submitStyle","buttonTypographyProps","dark","colSpan","errorMessage","resourcesdiv","borderBottom","labelTd","fileTd","pdfCursor","wordBreak","processingRoot","clear","resources","justifyContent","resourcesViewTable","maxWidth","resourcesTable","minHeight","borderColor","borderRadius","LinearProgressWithLabel","props","mr","minWidth","Math","round","defaultId","description","fileLocation","originalFilename","transcript","original_filename","formErrors","unit_id","path_url","selectedValue","uploadingResources","uploadingResourcesPercentage","db","inputFields","setInputFields","labels","setLabels","processing","setProcessing","remove","setRemove","edit","setEdit","viewNew","setViewNew","uploading","setUploading","setUploadingResources","uploadingPercentage","setUploadingPercentage","setUploadingResourcesPercentage","totalFiles","setTotalFiles","uploadedFiles","setUploadedFiles","close","setClose","setError","setErrorMessage","resourcesData","setResourcesData","UNIT_CREATE_UPDATE","unitCreateUpdate","UNIT_DELETE","UnitDelete","UNIT_VIDEO_DELETE","UnitVideoDelete","UNIT_SORT","RESOURCES_DELETE","ResourceDelete","RESOURCES_EDIT","setSelectedValue","resourcesLength","setResourcesLength","UNITS_QUERY_WHERE","unitData","useEffect","sortedUnits","units","handleRadioChange","index","undefined","makeid","result","characters","charactersLength","i","charAt","floor","random","handleRemove","video","removeKey","Storage","introVideo","getUnitCacheQueries","handleFile","upload","file","files","ext","substring","lastIndexOf","fileName","moment","unix","insertKey","FILE_BUCKET","put","level","contentType","progressCallback","progress","loaded","total","completeCallback","errorCallback","cancel","handleResourcesLabel","handleUrl","selectedType","handleResources","counter","split","path","handleEditorChange","handleEditSubmit","keywords","keywordsData","parse","removeTags","des","deleteData","str","toString","replace","handleDeleteUnit","unit","units_Delete","addFields","removeFields","splice","removeFieldData","newfield","handleRemoveResources","getResourcesCacheQueries","handleViewtUnit","arr","handleEditUnit","ViewUnitModal","saveFile","filename","saveAs","scroll","dividers","tabIndex","dialogBody","controls","src","viewHeading","viewDescription","dangerouslySetInnerHTML","__html","alt","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","points","d","strokeMiterlimit","strokeWidth","stroke","class","verticalAlign","window","viewTranscript","ChooseFile","accept","input","RadioGroup","radioButton","FormControlLabel","control","Radio","Button","ConfirmIconButton","AddModal","Dialog","_","reason","DialogTitle","Form","DialogContent","DialogContentText","aria-hidden","textAreaEditor","maxWidthEditor","legendColor","textFieldHidden","editor","ClassicEditor","ckEditorEdit","getData","config","toolbar","TextAreaField","Add","DialogActions","Grid","ProgressButton","ButtonFHG","EditModal","handleClick","floatRight","ChooseFileEdit","useTreeItemStyles","root","content","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","body1","expanded","h6","labelIcon","labelText","flexGrow","actionStyle","StyledTreeItem","nodeId","labelInfo","bgColor","action","children","other","TreeItem","Typography","DEFAULT_EXPANDED","textRight","tags","tagInput","tag","tagInputField","paddingBottom","textDander","innerGridStyle","overflowY","drawerStyle","selectedBox","clearAll","scroller","textDanger","Users","setCourseId","COURSE_CREATE_UPDATE","courseCreateUpdate","setExpanded","COURSE_DELETE","CourseDelete","COURSE_QUERY_WHERE","active","setTags","sortedCourses","courses","handleDeleteCourse","course","course_Delete","getCourseCacheQueries","status","message","ADMIN_COURSES_PATH","cacheUpdate","course_name","course_description","course_keywords","Modal","suggestions","onDelete","filter","onAddition","allowNew","allowBackspace","removeButtonText","minQueryLength","ResponsiveMobileDrawer","ADMIN_DRAWER","ModalProps","BackdropProps","APPBAR_SMALL_HEIGHT","isScrollable","TreeView","treeStyle","disableSelection","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","onNodeToggle","expandedNodeIds","xs","Delete","IconButton","handleEditCourse","Edit","Modules","Unit","spinnerMargin","darkSpinnerMargin","isSpinnerLight","typographyProps","buttonProperties","thickness","forwardRef","ref","onValid","validate","customValidity","reportInvalid","useFormEl","useRef","formEl","isValid","isReport","form","current","checkValidity","reportValidity","defaultProps"],"mappings":"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","file":"static/js/13.8b24b1d2.chunk.js","sourcesContent":["import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport get from 'lodash/get';\r\nimport React from 'react';\r\nimport NumberFormatCustom from '../fhg/components/NumberFormat';\r\nimport useMessage from '../fhg/hooks/useMessage';\r\nimport CustomInputTextField from './CustomInputTextField';\r\nimport ThemeProvider from './ThemeProvider';\r\n\r\nconst theme = createMuiTheme({\r\n   palette: {\r\n      text: {\r\n         secondary: '#707070',\r\n         primary: '#527928',\r\n      },\r\n   },\r\n});\r\n\r\n/**\r\n * The TextField with preset formats.\r\n\r\n * @param className\r\n * @param name\r\n * @param labelKey\r\n * @param placeholderKey\r\n * @param helpKey\r\n * @param helperText\r\n * @param defaultValue\r\n * @param value\r\n * @param onChange\r\n * @param margin\r\n * @param InputLabelProps\r\n * @param InputProps\r\n * @param label\r\n * @param fullWidth\r\n * @param isFormattedNumber\r\n * @param variant\r\n * @param size\r\n * @param labelTemplate\r\n * @param editData\r\n * @param classesProp\r\n * @param internalKey\r\n * @param textFieldProps\r\n * @param placeholder The placeholder for the text component.\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function TextFieldLF({\r\n   className,\r\n   name,\r\n   labelKey,\r\n   placeholderKey,\r\n   helpKey,\r\n   helperText,\r\n   defaultValue,\r\n   value,\r\n   onChange,\r\n   margin = 'normal',\r\n   InputLabelProps,\r\n   InputProps,\r\n   label,\r\n   fullWidth = true,\r\n   isFormattedNumber,\r\n   variant = 'outlined',\r\n   size = 'small',\r\n   labelTemplate,\r\n   editData,\r\n   classes: classesProp,\r\n   internalKey,\r\n   placeholder,\r\n   rows,\r\n   hidden,\r\n   ...textFieldProps\r\n}) {\r\n   const classes = {...classesProp};\r\n   const useLabelKey = labelTemplate?.format({name}) || labelKey;\r\n   const currentLabel = useMessage(useLabelKey, label);\r\n   const currentPlaceholder = useMessage(placeholderKey) || placeholder;\r\n   const helpText = useMessage(helpKey, helperText) || helperText;\r\n\r\n   const useInputProps = {\r\n      ...InputProps,\r\n   };\r\n\r\n   if (isFormattedNumber) {\r\n      if (get(InputProps, 'inputComponent') || get(InputProps, 'inputProps.component')) {\r\n         console.log('isFormattedNumber cannot have a different input component.', InputProps);\r\n      }\r\n      useInputProps.inputComponent = CustomInputTextField;\r\n      useInputProps.inputProps =\r\n         {...get(InputProps, 'inputProps', {}), ...(textFieldProps.inputProps || {}), component: NumberFormatCustom};\r\n   }\r\n\r\n   return (\r\n      <ThemeProvider theme={theme}>\r\n         <TextField\r\n            {...textFieldProps}\r\n            key={'internal' + internalKey}\r\n            name={name}\r\n            className={`${classes.textFieldStyle} ${className}`}\r\n            label={currentLabel}\r\n            placeholder={currentPlaceholder}\r\n            helperText={helpText}\r\n            defaultValue={defaultValue}\r\n            value={value}\r\n            rows={rows ? rows : 8}\r\n            multiline={true}\r\n            onChange={onChange}\r\n            InputProps={useInputProps}\r\n            InputLabelProps={{\r\n               ...InputLabelProps,\r\n               shrink: true,\r\n            }}\r\n            hidden\r\n            variant={variant}\r\n            size={size}\r\n            margin={margin}\r\n            fullWidth={fullWidth}\r\n         />\r\n      </ThemeProvider>\r\n   );\r\n}\r\n","import {lighten} from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport {MODULES_QUERY_WHERE, getModelCacheQueries, MODULES_CREATE_UPDATE, MODULE_QUERY} from '../../data/QueriesGL';\r\nimport {MODULE_EDIT, ADMIN_COURSE_PATH, APPBAR_SMALL_HEIGHT, ADMIN_DRAWER, ADMIN_COURSES_PATH} from '../../Constants';\r\nimport usePageTitle from '../hooks/usePageTitle';\r\nimport { sortBy, defer } from 'lodash';\r\nimport {Link, useHistory, useParams, useLocation} from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Add} from '@material-ui/icons';\r\nimport ButtonFHG from '../components/ButtonFHG';\r\nimport {v4 as uuid} from 'uuid';\r\nimport Form from '../components/edit/Form';\r\nimport Grid from '../components/Grid';\r\nimport ProgressButton from '../components/ProgressButton';\r\nimport TypographyFHG from '../components/Typography';\r\nimport useMutationFHG from '../hooks/data/useMutationFHG';\r\nimport useQueryFHG from '../hooks/data/useQueryFHG';\r\nimport { cacheUpdate } from '../utils/DataUtil';\r\nimport TextFieldLF from '../../components/TextFieldLF';\r\n\r\nconst useStyles = makeStyles(\r\n   (theme) => ({\r\n      formStyle: {\r\n         maxHeight: '100%',\r\n         // overflow: 'hidden',\r\n         width: '100%',\r\n         display: 'flex',\r\n         flexDirection: 'column',\r\n      },\r\n      infoRootStyle: {\r\n         maxHeight: `calc(100% - ${theme.spacing(5)}px)`,\r\n         '& > *': {\r\n            marginRight: theme.spacing(1),\r\n         },\r\n         overflow: 'hidden',\r\n         marginBottom: theme.spacing(1),\r\n      },\r\n      infoInnerStyle: {\r\n         padding: theme.spacing(0, 1),\r\n      },\r\n      buttonPanelStyle: {\r\n         marginLeft: -8,\r\n         borderTop: `solid 1px ${theme.palette.divider}`,\r\n         margin: theme.spacing(0, 0, 0, 0),\r\n         padding: theme.spacing(1, 2, 0),\r\n         '& > *': {\r\n            marginRight: theme.spacing(1),\r\n         },\r\n      },\r\n      frameStyle: {\r\n         padding: theme.spacing(3, 0),\r\n      },\r\n      '::placeholder': {\r\n         color: '#707070 !important',\r\n      },\r\n      buttonStyle: {\r\n         margin: theme.spacing(1),\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      deleteColorStyle: {\r\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\r\n         '&:hover': {\r\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\r\n         },\r\n      },\r\n      deleteButtonStyle: {\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      addButton:{\r\n         width: '100%',\r\n      },\r\n      btnRight:{\r\n         float: 'right',\r\n      },\r\n      textCenter: {\r\n         textAlign: 'center'\r\n      },\r\n      main: {\r\n         width: '100%'\r\n      },\r\n\r\n      inputStyle: {\r\n         backgroundColor: theme.palette.background.default,\r\n      },\r\n      frameStyle: {\r\n         padding: theme.spacing(4, 2),\r\n      },\r\n      expand: {\r\n         transform: 'rotate(0deg)',\r\n         marginLeft: 'auto',\r\n         transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n         }),\r\n      },\r\n      expandOpen: {\r\n         transform: 'rotate(180deg)',\r\n      },\r\n      titleStyle: {\r\n         paddingTop: theme.spacing(2),\r\n         // position: 'relative',\r\n      },\r\n      fadeArea: {\r\n         marginTop: theme.spacing(1),\r\n         padding: '5px 0px 0px 6px',\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n      fadeIn: {\r\n         opacity: 1,\r\n      },\r\n      labelRoot: {\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n         },\r\n      },\r\n      deleteColorStyle: {\r\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\r\n         '&:hover': {\r\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\r\n         },\r\n      },\r\n      deleteButtonStyle: {\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      buttonStyle: {\r\n         height: 42,\r\n         backgroundColor: '#F4F4F4',\r\n         position: 'absolute',\r\n         right: 0,\r\n         top: 16,\r\n         zIndex: 1000,\r\n      },\r\n      treeLabelStyle: {\r\n         textDecoration: 'none',\r\n         cursor: 'pointer',\r\n         '&:hover': {\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n      selectedBox: {\r\n         background: 'rgba(0, 0, 0, 0.04)'\r\n      },\r\n\r\n      moduleHeading: {\r\n         textDecoration: 'none', \r\n      },\r\n      drawerStyle: {\r\n         padding: theme.spacing(0, 2),\r\n         border:' 1px solid black'\r\n      },\r\n   }),\r\n   {name: 'ModuleEditStyles'}\r\n);\r\nconst DEFAULT_EXPANDED = ['course'];\r\nconst TREE_CONTENT_WIDTH = 420;\r\n\r\nexport default function ModuleEdit({isAdmin = false, moduleId}) {\r\n   const classes = useStyles();\r\n   const theme = useTheme();\r\n   const [editValues, setEditValues] = useState({\r\n      name: '',\r\n      order_no: null,\r\n   });\r\n   const [isSaving, setIsSaving] = useState(false);\r\n   const [moduleCreateUpdate] = useMutationFHG(MODULES_CREATE_UPDATE);\r\n   const location = useLocation();\r\n   const history = useHistory();\r\n\r\n   const params = useParams();\r\n   const courseId = params.courseId;\r\n\r\n   const [moduleData] = useQueryFHG(MODULE_QUERY, {variables: {id: moduleId, isDeleted: false}}, 'module.type');\r\n   usePageTitle({titleKey: 'module.title2.label'});\r\n   console.log('moduleData ::::::::', moduleData)\r\n   useEffect(() => {\r\n      if (moduleData?.modules?.length > 0) {\r\n         setEditValues(moduleData.modules[0]);\r\n      }\r\n   }, [moduleData]);\r\n\r\n   const handleClose = () => {\r\n      setEditValues({\r\n         name: '',\r\n         order_no: null,\r\n      });\r\n      defer(() => {\r\n         if (!isAdmin) {\r\n            location.state = {edit: undefined};\r\n            location.pathname = `/admin/course/${courseId}`;\r\n            history.replace(location);\r\n         } else {\r\n            history.replace(`/admin/course/${courseId}`);\r\n         }\r\n      });\r\n   }\r\n\r\n   const handleChange = (e) => {\r\n      const target = e.target.name\r\n      const value = e.target.value\r\n      setEditValues({\r\n         ...editValues,\r\n         [target]: value\r\n      })\r\n   }\r\n\r\n   const handleSubmit = (async () => {\r\n      try {\r\n         setIsSaving(true);\r\n         var variables = null\r\n         if(typeof editValues.id !== 'undefined' ){\r\n            variables = {id: editValues.id, course_id: editValues.course_id, order_no: parseInt(editValues.order_no), name: editValues.name};\r\n         }\r\n\r\n         await moduleCreateUpdate({\r\n            variables,\r\n            optimisticResponse: {\r\n               __typename: 'Mutation',\r\n               modules: {\r\n                  __typename: 'Modules',\r\n                  id: editValues.id, \r\n                  course_id: editValues.course_id, \r\n                  order_no: parseInt(editValues.order_no), \r\n                  name: editValues.name\r\n               },\r\n            },\r\n            update: cacheUpdate(getModelCacheQueries(courseId, false), editValues.id, 'modules'),\r\n\r\n         });\r\n         setIsSaving(false);\r\n         // setIsChanged(false);\r\n         handleClose();\r\n      } catch (e) {\r\n         setIsSaving(false);\r\n      }\r\n\r\n   });\r\n\r\n   return (\r\n      <Grid\r\n         container\r\n         fullWidth\r\n         fullHeight\r\n         className={classes.frameStyle}\r\n         direction={'column'}\r\n         overflow={'visible'}\r\n         wrap={'nowrap'}\r\n      >\r\n         {!isAdmin && (\r\n            <Grid item resizable={false} className={classes.infoInnerStyle}>\r\n               <TypographyFHG variant={'h5'} id={'lms.title.label'} color={'textSecondary'} gutterBottom />\r\n            </Grid>\r\n         )}\r\n         <Grid item container resizable>\r\n            <Form onSubmit={handleSubmit} className={classes.formStyle}>\r\n               <Grid name={'Module Edit Root'} item fullWidth className={classes.infoRootStyle}>\r\n                  <Grid name={'Module Edit Inner'} container item fullWidth className={classes.infoInnerStyle}>\r\n                        <div className={classes.addButton}>\r\n                           <TypographyFHG\r\n                              variant='h5'\r\n                              color={'textPrimary'}\r\n                              className={classes.moduleHeading}\r\n                              // onClick={handleEditClient}\r\n                              button\r\n                              component={Link}\r\n                           >\r\n                              Edit Module\r\n                           </TypographyFHG>\r\n                        </div>\r\n                        <div className={classes.main}>\r\n                           <TextFieldLF\r\n                              key={'name'}\r\n                              name={'name'}\r\n                              autoFocus\r\n                              labelTemplate={'lms.{name}.label'}\r\n                              onChange={(e) => handleChange(e)}\r\n                              // defaultValue={defaultValues.name}\r\n                              value={editValues.name}\r\n                              required\r\n                           />\r\n                           <TextFieldLF\r\n                              key={'order_no'}\r\n                              name={'order_no'}\r\n                              type='number'\r\n                              labelTemplate={'lms.{name}.label'}\r\n                              onChange={(e) => handleChange(e)}\r\n                              value={editValues.order_no}\r\n                              required\r\n                           />\r\n                           <Grid container item direction={'row'} fullWidth className={classes.buttonPanelStyle} justify={'space-between'} overflow={'visible'} resizable={false} alignItems={'center'} >\r\n                              <Grid item>\r\n                                 <ProgressButton\r\n                                    isProgress={isSaving}\r\n                                    variant='text'\r\n                                    color='primary'\r\n                                    type={'submit'}\r\n                                    size='large'\r\n                                    labelKey='save.label'\r\n                                    disabled={isSaving}\r\n                                 />\r\n                                 <ButtonFHG\r\n                                    variant='text'\r\n                                    size={'large'}\r\n                                    labelKey={'cancel.button'}\r\n                                    disabled={isSaving}\r\n                                    onClick={() => handleClose()}\r\n                                 />\r\n                              </Grid>\r\n                           </Grid>\r\n                        </div>\r\n                  </Grid>\r\n               </Grid>\r\n            </Form>\r\n         </Grid>\r\n      </Grid>\r\n   );\r\n}\r\n","import {lighten} from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport {MODULES_QUERY_WHERE, getModelCacheQueries, MODULES_CREATE_UPDATE, MODULE_DELETE} from '../../data/QueriesGL';\r\nimport {MODULE_EDIT, ADMIN_COURSE_PATH, APPBAR_SMALL_HEIGHT, ADMIN_DRAWER, ADMIN_COURSES_PATH} from '../../Constants';\r\nimport usePageTitle from '../hooks/usePageTitle';\r\nimport { sortBy, defer } from 'lodash';\r\nimport {Link, useHistory, useParams, useLocation} from 'react-router-dom';\r\nimport React, {useState, useEffect , useMemo } from 'react';\r\nimport {Add} from '@material-ui/icons';\r\nimport ButtonFHG from '../components/ButtonFHG';\r\nimport {v4 as uuid} from 'uuid';\r\nimport Form from '../components/edit/Form';\r\nimport Grid from '../components/Grid';\r\nimport ProgressButton from '../components/ProgressButton';\r\nimport TypographyFHG from '../components/Typography';\r\nimport useMutationFHG from '../hooks/data/useMutationFHG';\r\nimport useQueryFHG from '../hooks/data/useQueryFHG';\r\nimport {cacheDelete, cacheUpdate} from '../utils/DataUtil';\r\nimport TextFieldLF from '../../components/TextFieldLF';\r\nimport ModulesEdit from './ModulesEdit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Edit} from '@material-ui/icons';\r\nimport {Delete} from '@material-ui/icons';\r\nimport ConfirmIconButton from '../components/ConfirmIconButton';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(\r\n   (theme) => ({\r\n      formStyle: {\r\n         height: `100%`,\r\n         maxHeight: '100%',\r\n         width: '100%',\r\n         display: 'flex',\r\n         flexDirection: 'column',\r\n      },\r\n      infoRootStyle: {\r\n         height: `100%`,\r\n         maxHeight: `100%`,\r\n         '& > *': {\r\n            marginRight: theme.spacing(1),\r\n         },\r\n         overflow: 'hidden',\r\n         marginBottom: theme.spacing(1),\r\n      },\r\n      infoInnerStyle: {\r\n         padding: theme.spacing(0, 1),\r\n      },\r\n      buttonPanelStyle: {\r\n         marginLeft: -8,\r\n         borderTop: `solid 1px ${theme.palette.divider}`,\r\n         margin: theme.spacing(0, 0, 0, 0),\r\n         padding: theme.spacing(1, 2, 0),\r\n         '& > *': {\r\n            marginRight: theme.spacing(1),\r\n         },\r\n      },\r\n      '::placeholder': {\r\n         color: '#707070 !important',\r\n      },\r\n      buttonStyle: {\r\n         margin: theme.spacing(1),\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      deleteColorStyle: {\r\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\r\n         '&:hover': {\r\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\r\n         },\r\n      },\r\n      deleteButtonStyle: {\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      addButton:{\r\n         width: '100%',\r\n      },\r\n      btnRight:{\r\n         float: 'right',\r\n      },\r\n      textCenter: {\r\n         textAlign: 'center'\r\n      },\r\n      main: {\r\n         width: '100%'\r\n      },\r\n\r\n      inputStyle: {\r\n         backgroundColor: theme.palette.background.default,\r\n      },\r\n      frameStyle: {\r\n         padding: theme.spacing(4, 2),\r\n      },\r\n      expand: {\r\n         transform: 'rotate(0deg)',\r\n         marginLeft: 'auto',\r\n         transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n         }),\r\n      },\r\n      expandOpen: {\r\n         transform: 'rotate(180deg)',\r\n      },\r\n      titleStyle: {\r\n         paddingTop: theme.spacing(2),\r\n         // position: 'relative',\r\n      },\r\n      tableMain: {\r\n         maxHeight: '592px',\r\n         // height: 100%\r\n      },\r\n      table: {\r\n         height: '100%',\r\n         overflow: 'auto'\r\n      },\r\n      tableHeading:{\r\n         position: 'sticky',\r\n         top: '0',\r\n         backgroundColor: '#85AC5B',\r\n         zIndex: '10',\r\n         color: '#fff !important',\r\n      },\r\n      tableCell: {\r\n         \"$hover:hover &\": {\r\n           color: \"pink\"\r\n         },\r\n         color: '#fff !important',\r\n      },\r\n      tableWidth: {\r\n         width: '90px'\r\n      },\r\n      fadeArea: {\r\n         marginTop: theme.spacing(1),\r\n         padding: '5px 0px 0px 6px',\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n      fadeIn: {\r\n         opacity: 1,\r\n      },\r\n      labelRoot: {\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n         },\r\n      },\r\n      deleteColorStyle: {\r\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\r\n         '&:hover': {\r\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\r\n         },\r\n      },\r\n      deleteButtonStyle: {\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      buttonStyle: {\r\n         height: 42,\r\n         backgroundColor: '#F4F4F4',\r\n         position: 'absolute',\r\n         right: 0,\r\n         top: 16,\r\n         zIndex: 1000,\r\n      },\r\n      treeLabelStyle: {\r\n         textDecoration: 'none',\r\n         cursor: 'pointer',\r\n         '&:hover': {\r\n            // textDecoration: 'underline',\r\n         },\r\n      },\r\n      selectedTrBox: {\r\n         // background: '#cce5b0'\r\n         background: '#cce5b0 !important'\r\n      },\r\n      // MuiTableRow-root. MuiTableRow-hover:hover {\r\n      //    background-color: rgba(0, 0, 0, 0.04);\r\n      // }\r\n      trHover:{\r\n         '&:hover': {\r\n            // backgroundColor: '#cce5b0'\r\n            backgroundColor: 'rgb(0 0 0 / 11%)'\r\n         }\r\n      },\r\n      moduleHeading: {\r\n         textDecoration: 'none', \r\n      },\r\n      drawerStyle: {\r\n         padding: theme.spacing(0, 2),\r\n         border:' 1px solid black'\r\n      },\r\n\r\n      paper: {\r\n         position: 'absolute',\r\n         width: 800,\r\n         backgroundColor: theme.palette.background.paper,\r\n         border: '2px solid #000',\r\n         boxShadow: theme.shadows[5],\r\n         padding: theme.spacing(2, 4, 3),\r\n      },\r\n   }),\r\n   {name: 'ModuleEditStyles'}\r\n);\r\n\r\nfunction getModalStyle() {\r\n   const top = 50;\r\n   const left = 50;\r\n   return {\r\n     top: `${top}%`,\r\n     left: `${left}%`,\r\n     transform: `translate(-${top}%, -${left}%)`,\r\n   };\r\n}\r\nconst DEFAULT_EXPANDED = ['course'];\r\nconst TREE_CONTENT_WIDTH = 420;\r\n\r\nexport default function ModuleEdit({isAdmin = false}) {\r\n   const classes = useStyles();\r\n   const theme = useTheme();\r\n   const [editValues, setEditValues] = useState({\r\n      name: '',\r\n      order_no: null,\r\n   });\r\n   const [module_id, setModuleId] = useState('');\r\n   const [addNew, setAddNew] = useState(false);\r\n   const [isSaving, setIsSaving] = useState(false);\r\n   const [orderNumber, setOrderNumber] = useState(0);\r\n   const [moduleCreateUpdate] = useMutationFHG(MODULES_CREATE_UPDATE);\r\n   const location = useLocation();\r\n   const history = useHistory();\r\n   const [ModuleDelete] = useMutationFHG(MODULE_DELETE);\r\n   const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n   const params = useParams();\r\n   const courseId = params.courseId;\r\n   const moduleId = params.moduleId;\r\n\r\n   const [moduleData] = useQueryFHG(MODULES_QUERY_WHERE, {variables: {course_id: courseId, isDeleted: false}}, 'module.type');\r\n   usePageTitle({titleKey: 'module.title2.label'});\r\n\r\n   \r\n   // console.log('moduleData', moduleData)\r\n   const sortedModules = useMemo(() => {\r\n      if (moduleData?.modules) {\r\n         let number = sortBy(moduleData?.modules, 'order_no');\r\n         number = number[number.length - 1]\r\n         if(typeof number?.order_no !== 'undefined'){\r\n            const OrderNumber = parseInt(number?.order_no + 1)\r\n            setOrderNumber(OrderNumber)\r\n            setEditValues({\r\n               order_no: OrderNumber,\r\n            });\r\n         }else{\r\n            setOrderNumber(1)\r\n            setEditValues({\r\n               order_no: 1,\r\n            });\r\n         }\r\n         return sortBy(moduleData?.modules, 'order_no');\r\n      }\r\n      return [];\r\n   }, [moduleData]);\r\n\r\n   // useEffect(() => {\r\n   //    if(orderNumber){\r\n   //       setEditValues({\r\n   //          order_no: orderNumber,\r\n   //       });\r\n   //    }\r\n   // }, [orderNumber])\r\n\r\n   const handleClose = () => {\r\n      setEditValues({\r\n         name: '',\r\n         order_no: orderNumber,\r\n      });\r\n      setModuleId('')\r\n      setAddNew(false)\r\n   }\r\n\r\n   const handleChange = (e) => {\r\n      // const target = e.target.name\r\n      // const value = e.target.value      \r\n      // setEditValues({\r\n      //    ...editValues,\r\n      //    [target]: value\r\n      // })\r\n      const target = e.target.name\r\n      const value = e.target.value\r\n      let trim = value.trim()\r\n      if(trim.length > 0){\r\n         setEditValues({\r\n            ...editValues,\r\n            [target]: value\r\n         })\r\n      }else{\r\n         setEditValues({\r\n            ...editValues,\r\n            [target]: ''\r\n         })\r\n      }\r\n   }\r\n   \r\n   const handleSubmit = (async (type = null) => {\r\n      try {\r\n         setIsSaving(true);\r\n         var variables = null\r\n         if(typeof editValues.id !== 'undefined' ){\r\n            variables = {id: editValues.id, course_id: editValues.course_id, order_no: parseInt(editValues.order_no), name: editValues.name};\r\n         }else{\r\n            variables = {id: uuid(), course_id: courseId, order_no: parseInt(editValues.order_no), name: editValues.name};\r\n         }\r\n\r\n         await moduleCreateUpdate({\r\n            variables,\r\n            optimisticResponse: {\r\n               __typename: 'Mutation',\r\n               modules: {\r\n                  __typename: 'Modules',\r\n                  id: typeof editValues.id !== 'undefined' ? editValues.id : uuid(), \r\n                  isDeleted: false,\r\n                  course_id: courseId,\r\n                  order_no: parseInt(editValues.order_no),\r\n                  name: editValues.name\r\n               },\r\n            },\r\n            refetchQueries: () => getModelCacheQueries(courseId, false),\r\n            // update: cacheUpdate(getModelCacheQueries(courseId, false), editValues.id, 'modules'),\r\n         });\r\n\r\n         if(type === 'edit'){\r\n            // edit data in aws CloudSearch\r\n            var options = {\r\n               method: 'GET',\r\n               // url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n               url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/search?q=${module_id}&q.options=%7Bfields:%5B'module_id'%5D%7D`,\r\n               headers:{\r\n                  'content-type': 'application/json',\r\n                  'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n               },\r\n            };\r\n            axios(options)\r\n               .then((res) => res.data?.hits)\r\n               .then((hits) => hits?.hit)\r\n               .then((dataFound) => {\r\n                  console.log('dataFound ::::::::::::::::::', dataFound)\r\n                  dataFound.map((itm) => {\r\n                     var options = {\r\n                        method: 'POST',\r\n                        url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n                        headers:{\r\n                           'content-type': 'application/json',\r\n                           'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n                        },\r\n                        data: JSON.stringify([\r\n                           {\r\n                              \"fields\" : {\r\n                                 ...itm.fields,\r\n                                 \"module_name\" : variables.name,\r\n                              },\r\n                              \"id\" : itm.id,\r\n                              \"type\" : \"add\"\r\n                           }\r\n                        ])\r\n                     };\r\n                     axios(options)\r\n                        .then((res) => {\r\n                        console.log('Data update Successfully ::::::::::::::::::')\r\n                        })\r\n                        .catch((err) => {\r\n                           console.log('error while uploading data::::::::::::::::::',err)\r\n                        })\r\n                  })\r\n               })\r\n               .catch((err) => {\r\n                  console.log('err ::::::::::::::::::',err)\r\n               })\r\n            // end :- data updated in aws CloudSearch\r\n         }\r\n\r\n         setIsSaving(false);\r\n         // setIsChanged(false);\r\n         handleClose();\r\n      } catch (e) {\r\n         setIsSaving(false);\r\n      }\r\n\r\n   });\r\n\r\n   const handleDeleteModule = async (event, module) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n      await ModuleDelete({\r\n         variables: {id: module?.id},\r\n         optimisticResponse: {\r\n            __typename: 'Mutation',\r\n            modules_Delete: {\r\n               __typename: 'modules_Delete',\r\n               isDeleted: true,\r\n            },\r\n         },\r\n         update: cacheDelete(getModelCacheQueries(courseId, false),  module?.id, 'modules'),\r\n      });\r\n      history.push(`/admin/course/${courseId}`);\r\n   };\r\n\r\n   const handleEditModule = (event, module) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n      setModuleId(module?.id);\r\n      setEditValues(module);\r\n      setAddNew(addNew => !addNew)\r\n   };\r\n   // const handleNewUser = (event) => {\r\n   //    event?.stopPropagation();\r\n   //    event?.preventDefault();\r\n\r\n   //    location.state = {edit: COURSE_EDIT};\r\n   //    location.pathname = ADMIN_COURSES_PATH;\r\n   //    history.push(location);\r\n   // };\r\n   const handleClickLink = (link, module) => {\r\n      location.state = {moduleData: module, courseData: location?.state?.courseData};\r\n      location.pathname = link;\r\n      history.push(location);\r\n   };\r\n   return (\r\n      <>\r\n         <Modal\r\n            open={addNew}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n         >\r\n            <div style={modalStyle} className={classes.paper} >\r\n               <Form onSubmit={() =>  handleSubmit(editValues.id ?  'edit' : null) } className={classes.formStyle} encType={'multipart/form-data'}>\r\n                  <h2> { editValues.id ? 'Edit Module' : 'Add Module' } </h2>\r\n                  <TextFieldLF\r\n                     key={'name'}\r\n                     name={'name'}\r\n                     autoFocus\r\n                     labelTemplate={'lms.{name}.label'}\r\n                     onChange={(e) => handleChange(e)}\r\n                     // defaultValue={defaultValues.name}\r\n                     value={editValues.name}\r\n                     required\r\n                  />\r\n                  <TextFieldLF\r\n                     key={'order_no'}\r\n                     name={'order_no'}\r\n                     type='number'\r\n                     min={\"1\"}\r\n                     labelTemplate={'lms.{name}.label'}\r\n                     onChange={(e) => handleChange(e)}\r\n                     value={editValues.order_no}\r\n                     required\r\n                  />\r\n                  <Grid container item direction={'row'} fullWidth className={classes.buttonPanelStyle} justify={'space-between'} overflow={'visible'} resizable={false} alignItems={'center'} >\r\n                     <Grid item>\r\n                        <ProgressButton\r\n                           isProgress={isSaving}\r\n                           variant='text'\r\n                           color='primary'\r\n                           type={'submit'}\r\n                           size='large'\r\n                           labelKey='save.label'\r\n                           disabled={isSaving}\r\n                        />\r\n                        <ButtonFHG\r\n                           variant='text'\r\n                           size={'large'}\r\n                           labelKey={'cancel.button'}\r\n                           disabled={isSaving}\r\n                           onClick={() => handleClose()}\r\n                        />\r\n                     </Grid>\r\n                  </Grid>\r\n               </Form>\r\n            </div>\r\n         </Modal>\r\n      <Grid\r\n         container\r\n         fullWidth\r\n         fullHeight\r\n         // className={classes.frameStyle}\r\n         direction={'column'}\r\n         overflow={'visible'}\r\n         wrap={'nowrap'}\r\n      >\r\n         {!isAdmin && (\r\n            <Grid item resizable={false} className={classes.infoInnerStyle}>\r\n               <TypographyFHG variant={'h5'} id={'lms.title.label'} color={'textSecondary'} gutterBottom />\r\n            </Grid>\r\n         )}\r\n         <Grid item container resizable >\r\n            {/* <Form onSubmit={handleSubmit} className={classes.formStyle}> */}\r\n               <Grid name={'Module Edit Root'} item fullWidth className={classes.infoRootStyle}>\r\n                  <Grid name={'Module Edit Inner'} container item fullWidth className={classes.infoInnerStyle}>\r\n                     <div className={classes.addButton}>\r\n                        <TypographyFHG\r\n                           variant='h5'\r\n                           color={'textPrimary'}\r\n                           className={classes.moduleHeading}\r\n                           // onClick={handleEditClient}\r\n                           button\r\n                           component={Link}\r\n                           selected={moduleId === module.id}\r\n                        >\r\n                           Modules\r\n                        </TypographyFHG>\r\n                        <ButtonFHG \r\n                           startIcon={(<Add/>)} \r\n                           onClick={() => setAddNew(addNew => !addNew) }\r\n                           labelKey={'module.new.button'}\r\n                           className={classes.btnRight}\r\n                        />\r\n                     </div>\r\n                     <div className={classes.main}>\r\n                        <TableContainer className={classes.tableMain} component={Paper}>\r\n                           <Table \r\n                              className={classes.table} \r\n                              aria-label=\"simple table\"\r\n                           >\r\n                              <TableHead className={classes.tableHeading}>\r\n                                 <TableRow>\r\n                                    <TableCell className={classes.tableCell} >#</TableCell>\r\n                                    <TableCell className={`${classes.tableCell} ${classes.tableWidth}`}  align=\"left\">Order No</TableCell>\r\n                                    <TableCell className={classes.tableCell}  align=\"left\">Name</TableCell>\r\n                                    <TableCell className={`${classes.tableCell} ${classes.tableWidth}`}  align=\"left\">Action</TableCell>\r\n                                 </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                 {typeof sortedModules !== 'undefined' && sortedModules !== null && sortedModules !== '' && sortedModules && sortedModules.length > 0 ?\r\n                                    sortedModules.map((module, idx) => (\r\n                                       <TableRow key={idx}\r\n                                          className={clsx(classes.treeLabelStyle, classes.trHover, moduleId === module.id && classes.selectedTrBox )}\r\n                                          // to={`/admin/course/${module.course_id}/${module.id}`}\r\n                                          onClick={() => handleClickLink(`/admin/course/${module.course_id}/${module.id}`, module)}\r\n                                          selected={moduleId === module.id}\r\n                                          align=\"left\" \r\n                                          // component={Link}\r\n                                       >\r\n                                          <TableCell align=\"left\">\r\n                                             <TypographyFHG\r\n                                                variant='subtitle1'\r\n                                                color={'textPrimary'}\r\n                                                // className={classes.treeLabelStyle}\r\n                                                // button\r\n                                                // component={Link}\r\n                                             >\r\n                                                {idx + 1}\r\n                                             </TypographyFHG>\r\n                                          </TableCell>\r\n                                          <TableCell align=\"left\">\r\n                                             <TypographyFHG\r\n                                                variant='subtitle1'\r\n                                                color={'textPrimary'}\r\n                                                // className={classes.treeLabelStyle}\r\n                                                // button\r\n                                                // component={Link}\r\n                                                // to={`/admin/course/${module.course_id}/${module.id}`}\r\n                                                // selected={moduleId === module.id}\r\n                                             >\r\n                                                {module.order_no}\r\n                                             </TypographyFHG>\r\n                                          </TableCell>\r\n                                          <TableCell align=\"left\">\r\n                                             <TypographyFHG\r\n                                                variant='subtitle1'\r\n                                                color={'textPrimary'}\r\n                                                // className={classes.treeLabelStyle}\r\n                                                // button\r\n                                                // component={Link}\r\n                                                // to={`/admin/course/${module.course_id}/${module.id}`}\r\n                                                // selected={moduleId === module.id}\r\n                                             >\r\n                                                {module.name}\r\n                                             </TypographyFHG>\r\n                                          </TableCell>\r\n                                          <TableCell align=\"left\">\r\n                                             <IconButton\r\n                                                size={'small'}\r\n                                                // style={{float: 'right'}}\r\n                                                onClick={(e) => handleEditModule(e, module)}\r\n                                                className={classes.fadeIn}\r\n                                             >\r\n                                                <Edit fontSize={'small'} />\r\n                                             </IconButton>\r\n                                             <ConfirmIconButton\r\n                                                className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                onConfirm={(e) => handleDeleteModule(e, module)}\r\n                                                values={{type: 'module', name: module.name}}\r\n                                                messageKey={'confirmRemoveValue.message'}\r\n                                                buttonLabelKey={'delete.button'}\r\n                                                size={'small'}\r\n                                                submitStyle={classes.deleteColorStyle}\r\n                                                // style={{float: 'right'}}\r\n                                                buttonTypographyProps={{\r\n                                                   float: 'right',\r\n                                                   color: theme.palette.error.dark,\r\n                                                   style: {textDecoration: 'underline'},\r\n                                                }}\r\n                                             >\r\n                                                <Delete fontSize={'small'} />\r\n                                             </ConfirmIconButton>\r\n                                          </TableCell>\r\n                                       </TableRow>\r\n                                    ))\r\n                                 :\r\n                                    <TableCell colSpan={4} className={classes.textCenter} >No module are Found</TableCell>\r\n                                 }\r\n                              </TableBody>\r\n                           </Table>\r\n                        </TableContainer>\r\n                     </div>\r\n                  </Grid>\r\n               </Grid>\r\n            {/* </Form> */}\r\n         </Grid>\r\n      </Grid>\r\n      </>\r\n   );\r\n}\r\n","import {lighten} from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {RESOURCES_QUERY_WHERE, UNITS_QUERY_WHERE, getUnitCacheQueries, getResourcesCacheQueries, RESOURCES_CREATE_UPDATE, UNIT_CREATE_UPDATE, UNIT_DELETE, RESOURCES_EDIT, RESOURCES_DELETE, UNIT_VIDEO_DELETE, UNIT_SORT } from '../../data/QueriesGL';\r\nimport { FILE_BUCKET } from '../../Constants';\r\nimport usePageTitle from '../hooks/usePageTitle';\r\nimport { sortBy, defer } from 'lodash';\r\nimport {Storage} from 'aws-amplify';\r\nimport {Link, useHistory, useParams, useLocation } from 'react-router-dom';\r\nimport React, {useState, useCallback , useMemo, useEffect } from 'react';\r\nimport {Add, ContactSupportSharp} from '@material-ui/icons';\r\nimport ButtonFHG from '../components/ButtonFHG';\r\nimport {v4 as uuid} from 'uuid';\r\nimport Grid from '../components/Grid';\r\nimport TypographyFHG from '../components/Typography';\r\nimport useMutationFHG from '../hooks/data/useMutationFHG';\r\nimport useQueryFHG from '../hooks/data/useQueryFHG';\r\nimport {cacheDelete, cacheUpdate} from '../utils/DataUtil';\r\nimport ViewUnitModal from './Component/ViewUnitModal';\r\nimport AddEditUnitModal from './Component/AddUnitModal';\r\nimport EditUnitModal from './Component/EditUnitModal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Edit} from '@material-ui/icons';\r\nimport {Delete} from '@material-ui/icons';\r\nimport ConfirmIconButton from '../components/ConfirmIconButton';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from 'moment'\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport { ADMIN_COURSES_PATH, COURSE_EDIT, MODULE_EDIT, ADMIN_COURSE_PATH, APPBAR_SMALL_HEIGHT, ADMIN_DRAWER } from '../../Constants';\r\nimport axios from \"axios\";\r\nimport './index.css'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nconst useStyles = makeStyles(\r\n   (theme) => ({\r\n      formStyle: {\r\n         height: `100%`,\r\n         maxHeight: '100%',\r\n         width: '100%',\r\n         display: 'flex',\r\n         flexDirection: 'column',\r\n      },\r\n      errorMessage: {\r\n         color: 'red'\r\n      },\r\n      resourcesdiv: {\r\n         borderBottom: '1px solid #e8e3e3',\r\n         padding: '5px 0px'\r\n      },\r\n      labelTd:{\r\n         width: \"300px\" \r\n      },\r\n      fileTd:{\r\n         width: \"400px\"      \r\n      },\r\n      pdfCursor: {\r\n         color: 'rgb(107,146,65)',\r\n         cursor: 'pointer',\r\n         wordBreak: 'break-all'\r\n      },\r\n      processingRoot: {\r\n         clear: 'both',\r\n         width: '100%',\r\n         textAlign: 'center'\r\n      },\r\n      resources: {\r\n         textAlign: 'center',\r\n         justifyContent: 'center',\r\n         display: 'flex'\r\n      },\r\n      resourcesViewTable: {\r\n         maxWidth: '800px',\r\n         marginLeft: '50px',\r\n         textAlign: 'center'\r\n      },\r\n      resourcesTable: {\r\n         maxWidth: '550px',\r\n         textAlign: 'center'\r\n      },\r\n      infoRootStyle: {\r\n         height: `100%`,\r\n         maxHeight: `100%`,\r\n         '& > *': {\r\n            marginRight: theme.spacing(1),\r\n         },\r\n         overflow: 'hidden',\r\n         marginBottom: theme.spacing(1),\r\n      },\r\n      infoInnerStyle: {\r\n         padding: theme.spacing(0, 1),\r\n      },\r\n      buttonPanelStyle: {\r\n         // marginLeft: -8,\r\n         // borderTop: `solid 1px ${theme.palette.divider}`,\r\n         margin: theme.spacing(0, 0, 0, 0),\r\n         // padding: theme.spacing(1, 2, 0),\r\n         '& > *': {\r\n            marginRight: theme.spacing(1),\r\n         },\r\n      },\r\n      '::placeholder': {\r\n         color: '#707070 !important',\r\n      },\r\n      buttonStyle: {\r\n         margin: theme.spacing(1),\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      deleteColorStyle: {\r\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\r\n         '&:hover': {\r\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\r\n         },\r\n      },\r\n      deleteButtonStyle: {\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      addButton:{\r\n         width: '100%',\r\n      },\r\n      btnRight:{\r\n         float: 'right',\r\n      },\r\n      textCenter: {\r\n         textAlign: 'center'\r\n      },\r\n      main: {\r\n         width: '100%'\r\n      },\r\n\r\n      inputStyle: {\r\n         backgroundColor: theme.palette.background.default,\r\n      },\r\n      frameStyle: {\r\n         padding: theme.spacing(4, 2),\r\n      },\r\n      expand: {\r\n         transform: 'rotate(0deg)',\r\n         marginLeft: 'auto',\r\n         transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n         }),\r\n      },\r\n      expandOpen: {\r\n         transform: 'rotate(180deg)',\r\n      },\r\n      titleStyle: {\r\n         paddingTop: theme.spacing(2),\r\n         // position: 'relative',\r\n      },\r\n      tableMain: {\r\n         maxHeight: '592px',\r\n         // height: 100%\r\n      },\r\n      table: {\r\n         height: '100%',\r\n         overflow: 'auto'\r\n      },\r\n      tableHeading:{\r\n         position: 'sticky',\r\n         top: '0',\r\n         backgroundColor: '#85AC5B',\r\n         zIndex: '10',\r\n         color: '#fff !important',\r\n      },\r\n      tableCell: {\r\n         \"$hover:hover &\": {\r\n           color: \"pink\"\r\n         },\r\n         color: '#fff !important',\r\n      },\r\n      tableWidth: {\r\n         width: '90px'\r\n      },\r\n      fadeArea: {\r\n         marginTop: theme.spacing(1),\r\n         padding: '5px 0px 0px 6px',\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n      fadeIn: {\r\n         opacity: 1,\r\n      },\r\n      labelRoot: {\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n         },\r\n      },\r\n      deleteColorStyle: {\r\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\r\n         '&:hover': {\r\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\r\n         },\r\n      },\r\n      deleteButtonStyle: {\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      buttonStyle: {\r\n         height: 42,\r\n         backgroundColor: '#F4F4F4',\r\n         position: 'absolute',\r\n         right: 0,\r\n         top: 16,\r\n         zIndex: 1000,\r\n      },\r\n      treeLabelStyle: {\r\n         textDecoration: 'none',\r\n         cursor: 'pointer',\r\n         '&:hover': {\r\n            // textDecoration: 'underline',\r\n         },\r\n      },\r\n      selectedBox: {\r\n         background: 'rgba(0, 0, 0, 0.04)'\r\n      },\r\n\r\n      moduleHeading: {\r\n         textDecoration: 'none', \r\n      },\r\n      drawerStyle: {\r\n         padding: theme.spacing(0, 2),\r\n         border:' 1px solid black'\r\n      },\r\n      textFieldHidden: {\r\n         background: 'white',\r\n         color: 'white',\r\n         marginTop: '30px',\r\n         zIndex: '-9999',\r\n         position: 'absolute',\r\n      },\r\n      height:\"500px\",\r\n      paper: {\r\n         position: 'absolute',\r\n         width: 800,\r\n         backgroundColor: theme.palette.background.paper,\r\n         border: '2px solid #000',\r\n         boxShadow: theme.shadows[5],\r\n         padding: theme.spacing(2, 4, 3),\r\n         maxHeight: '700px',\r\n         overflow: 'auto',\r\n      },\r\n      ckEditorEdit: {\r\n         height: '100%',\r\n         minHeight: '400px'\r\n      },\r\n      errorMessage: {\r\n         color: 'red'\r\n      },\r\n      textAreaEditor:{\r\n         borderColor: 'rgba(0, 0, 0, 0.23)',\r\n         border: '0.5px solid',\r\n         borderRadius: '6px'\r\n      },\r\n      legendColor:{\r\n         color: '#527928',\r\n         fontSize: '13px'\r\n      },\r\n      maxWidthEditor:{\r\n         maxHeight: '400px',\r\n         height: '100%',\r\n         width: '100%',\r\n         // maxWidth: '728px',\r\n         wordBreak: 'break-all',\r\n         overflow: 'auto'\r\n      },\r\n      modalHeading: {\r\n         borderBottom: '1px solid lightgray',\r\n      },\r\n      dialogBody:{\r\n         color: '#707070'\r\n      },\r\n      viewHeading: {\r\n         marginTop: '10px',\r\n         // textAlign: 'center'\r\n      },\r\n      viewDescription: {\r\n         margin: '20px 0px'\r\n      },\r\n      viewTranscript: {\r\n         // marginTop: '10px'\r\n      },\r\n      button: {\r\n         float: 'right'\r\n      },\r\n      floatRight: {\r\n         float: 'right'\r\n      },\r\n      radioButton:{\r\n         display: 'inline-block !important'\r\n      }\r\n   }),\r\n   {name: 'ModuleEditStyles'}\r\n);\r\n\r\nconst DEFAULT_EXPANDED = ['course'];\r\nconst TREE_CONTENT_WIDTH = 420;\r\n\r\nfunction getModalStyle() {\r\n   const top = 50;\r\n   const left = 50;\r\n   return {\r\n     top: `${top}%`,\r\n     left: `${left}%`,\r\n     transform: `translate(-${top}%, -${left}%)`,\r\n   };\r\n}\r\n \r\nfunction LinearProgressWithLabel(props) {\r\n   return (\r\n     <Box display=\"flex\" alignItems=\"center\">\r\n       <Box width=\"100%\" mr={1}>\r\n         <LinearProgress variant=\"determinate\" {...props} />\r\n       </Box>\r\n       <Box minWidth={35}>\r\n         <TypographyFHG variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n           props.value,\r\n         )}%`}</TypographyFHG>\r\n       </Box>\r\n     </Box>\r\n   );\r\n}\r\nexport default function ModuleEdit({isAdmin = false}) {\r\n   const location = useLocation();\r\n   const history = useHistory();\r\n   const classes = useStyles();\r\n   const theme = useTheme();\r\n   const [editValues, setEditValues] = useState({\r\n      defaultId: uuid(),\r\n      name: '',\r\n      description: '',\r\n      fileLocation: '',\r\n      originalFilename: '',\r\n      transcript: ''\r\n   });\r\n   const [formErrors, setFormErrors] = useState({\r\n      // nameValid: false,\r\n      // passwordValid: false,\r\n      // formValid: false\r\n      name: '',\r\n      description: '',\r\n      originalFilename: '',\r\n      transcript: '',\r\n      label: '',\r\n      original_filename: ''\r\n   });\r\n   const [inputFields, setInputFields] = useState([\r\n      {  id: '', unit_id: '', label: '', type: '', path_url: '', original_filename: '', selectedValue: 'pdf', uploadingResources: false, uploadingResourcesPercentage: 0, error: '', errorMessage: '',  db: false}\r\n   ])\r\n   const [labels, setLabels] = useState([\r\n      {  id: '', unit_id: '', label: '', type: '', path_url: '', original_filename: '', uploadingResources: false, uploadingResourcesPercentage: 0, error: '', errorMessage: '', db: false}\r\n   ])\r\n   const [processing, setProcessing] = useState(false);\r\n   const [remove, setRemove] = useState(false);\r\n   const [addNew, setAddNew] = useState(false);\r\n   const [edit, setEdit] = useState(false);\r\n   const [viewNew, setViewNew] = useState(false);\r\n   const [isSaving, setIsSaving] = useState(false);\r\n   const [uploading, setUploading] = useState(false);\r\n   const [uploadingResources, setUploadingResources] = useState(false);\r\n   const [uploadingPercentage, setUploadingPercentage] = useState(0);\r\n   const [uploadingResourcesPercentage, setUploadingResourcesPercentage] = useState(0);\r\n   const [totalFiles, setTotalFiles] = useState(0);\r\n   const [uploadedFiles, setUploadedFiles] = useState(0);\r\n   const [close, setClose] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [errorMessage, setErrorMessage] = useState(null);\r\n   const [resourcesData, setResourcesData] = useState(false);\r\n\r\n   const [unitCreateUpdate] = useMutationFHG(UNIT_CREATE_UPDATE);\r\n   const [UnitDelete] = useMutationFHG(UNIT_DELETE);\r\n   const [UnitVideoDelete] = useMutationFHG(UNIT_VIDEO_DELETE);\r\n   const [UnitSort] = useMutationFHG(UNIT_SORT);\r\n   const [ResourceDelete] = useMutationFHG(RESOURCES_DELETE);\r\n   const [ResourceEdit] = useMutationFHG(RESOURCES_EDIT);\r\n   const [modalStyle] = React.useState(getModalStyle);\r\n   const [selectedValue, setSelectedValue] = useState('pdf');\r\n   const [resourcesLength, setResourcesLength] = useState(0);\r\n   // const [resourcesData] = useQueryFHG(RESOURCES_QUERY_WHERE, {variables: {unit_id: location?.state?.id, isDeleted: false}}, 'resources.type');\r\n\r\n   const params = useParams();\r\n   const moduleId = params.moduleId;\r\n   const courseId = params.courseId;\r\n\r\n   const [unitData] = useQueryFHG(UNITS_QUERY_WHERE, {variables: {module_id: moduleId, isDeleted: false}}, 'unit.type');\r\n   usePageTitle({titleKey: 'unit.title.label'});\r\n   useEffect(() => {\r\n      setEditValues({\r\n         defaultId: uuid(),\r\n         name: '',\r\n         description: '',\r\n         fileLocation: '',\r\n         originalFilename: '',\r\n         transcript: ''\r\n      });\r\n      setClose(false)\r\n   }, [close])\r\n\r\n   const sortedUnits = useMemo(() => {\r\n      // console.log('unitData', unitData)\r\n      if (unitData?.units) {\r\n         return sortBy(unitData?.units, 'order_no');\r\n      }\r\n      return [];\r\n   }, [unitData]);\r\n\r\n   const validateField = (fieldName, value) => {\r\n      let fieldValidationErrors = this.state.formErrors;\r\n      let nameValid = this.state.nameValid;\r\n      let transcriptValid = this.state.transcriptValid;\r\n    \r\n      switch(fieldName) {\r\n        case 'name':\r\n          let name = value.trim()\r\n          nameValid = name.length > 0;\r\n          fieldValidationErrors.name = nameValid ? '' : ' is invalid';\r\n          break;\r\n        case 'password':\r\n          transcriptValid = value.length >= 6;\r\n          fieldValidationErrors.transcript = transcriptValid ? '': ' is too short';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      // this.setState({\r\n      //    formErrors: fieldValidationErrors,\r\n      //    nameValid: nameValid,\r\n      //    transcriptValid: transcriptValid\r\n      // }, this.validateForm);\r\n   }\r\n    \r\n   const validateForm = () => {\r\n      // this.setState({formValid: this.state.nameValid && this.state.transcriptValid});\r\n   }\r\n\r\n   const handleRadioChange = (event, index) => {\r\n      let data = [...inputFields];\r\n      if(data[index] !== undefined){\r\n         data[index]['id'] = ''\r\n         data[index]['unit_id'] = ''\r\n         data[index]['label'] = ''\r\n         data[index]['type'] = ''\r\n         data[index]['path_url'] = ''\r\n         data[index]['original_filename'] = ''\r\n         data[index]['selectedValue'] = event.target.value\r\n         data[index]['uploadingResources'] = false\r\n         data[index]['uploadingResourcesPercentage'] = 0\r\n         data[index]['error'] = ''\r\n         data[index]['errorMessage'] = ''\r\n         data[index]['db'] = false\r\n         setInputFields(data);\r\n      }\r\n   };\r\n   \r\n   const handleClose = async () => {\r\n      setEdit(false)\r\n      setClose(true)\r\n      setIsSaving(false)\r\n      setUploading(false)\r\n      setUploadingResources(false)\r\n      setUploadingPercentage(0)\r\n      setUploadingResourcesPercentage(0)\r\n      setUploadedFiles(0)\r\n      setTotalFiles(0)\r\n      setAddNew(false)\r\n      setViewNew(false)\r\n      setRemove(false)\r\n      setEditValues({\r\n         defaultId:  uuid(),\r\n         name: '',\r\n         description: '',\r\n         fileLocation: '',\r\n         originalFilename: '',\r\n         transcript: ''\r\n      });\r\n      setSelectedValue('pdf');\r\n      setLabels([\r\n         {  id: '', unit_id: '', label: '', type: '', path_url: '', original_filename: '', error: '', errorMessage: '', db: false}\r\n      ]);\r\n      setInputFields([\r\n         {  id: '', unit_id: '', label: '', type: '', path_url: '', original_filename: '', selectedValue: 'pdf', uploadingResources: false, uploadingResourcesPercentage: 0, error: '', errorMessage: '', db: false}\r\n      ]);\r\n      setErrorMessage(null)\r\n      setError(null)\r\n   }\r\n   function makeid(length) {\r\n      var result           = '';\r\n      var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n      var charactersLength = characters.length;\r\n      for ( var i = 0; i < length; i++ ) {\r\n         result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n      }\r\n     return result;\r\n   } \r\n   const handleRemove = async (video, unit_id) => {\r\n      const removeKey = `lms/upload/${video.originalFilename}`; \r\n      setRemove(true)\r\n      setProcessing(true)\r\n      await Storage.remove( removeKey );\r\n      setProcessing(false)\r\n      setEditValues({\r\n         ...editValues,\r\n         fileLocation: '',\r\n         originalFilename: ''\r\n      })\r\n      await UnitVideoDelete({\r\n         variables: {id: unit_id},\r\n         optimisticResponse: {introVideo: null},\r\n         update: cacheDelete(getUnitCacheQueries(moduleId, false), unit_id, 'units'),\r\n      });\r\n   };\r\n   const handleFile = async (e) => {\r\n      let upload = null;\r\n      const file = e.target.files[0]\r\n      const ext = file.name.substring(file.name.lastIndexOf('.')+1, file.name.length);\r\n      console.log('ext :::::::::',ext)\r\n      if(ext == 'mov' || ext == 'mp4' ){\r\n         try{\r\n            if(typeof file !== 'undefined' && file && typeof editValues.fileLocation !== 'undefined' && editValues.fileLocation !== '' && editValues.fileLocation !== null){\r\n               const removeKey = `lms/upload/${editValues.originalFilename}`; \r\n               setUploading(false)\r\n               setUploadingPercentage(0)\r\n               await Storage.remove( removeKey );\r\n            }\r\n            if(typeof file !== 'undefined' && file){\r\n               console.log('file', file)\r\n               const fileName = `${moment().unix() + makeid(5)}.${ext}`\r\n               console.log(fileName);\r\n\r\n               const insertKey = `lms/upload/${fileName}`; \r\n               setUploading(true)\r\n               setEditValues({\r\n                  ...editValues,\r\n                  fileLocation: `${FILE_BUCKET}/${insertKey}`,\r\n                  originalFilename: fileName\r\n               })\r\n               upload = await Storage.put(insertKey, file, {\r\n                  level: 'public', \r\n                  contentType: file.type,\r\n                  // resumable: true,\r\n                  progressCallback: (progress) => {\r\n                     setUploadingPercentage(progress.loaded / progress.total * 100)\r\n                     console.log(`Uploaded: ${progress.loaded}/${progress.total}`);\r\n                  },\r\n                  completeCallback: (event) => {\r\n                     setUploadingPercentage(100)\r\n                     console.log(`Successfully uploaded ${event.key}`);\r\n                  },\r\n                  errorCallback: (err) => {\r\n                     console.error('Unexpected error while uploading', err);\r\n                  }\r\n               })\r\n               // setUploading(false)\r\n            }\r\n         }catch(err){\r\n            setUploading(false)\r\n            setUploadingPercentage(0)\r\n            Storage.cancel(upload);\r\n            console.log(err);\r\n         }\r\n      }else{\r\n         setError('introVideo')\r\n         setErrorMessage('Only .mp4 and .mov are allowed!')\r\n      }\r\n   }\r\n   const handleResourcesLabel = async (index, e ,type = null) => {\r\n      const value = e.target.value\r\n      let trim = value.trim()\r\n      console.log('trim ::::', trim)\r\n      if(type !== null && typeof type !== 'undefined' && type !== ''){\r\n         if(trim.length > 0){\r\n            console.log('hi')\r\n            const data = [...labels]\r\n            data[index]['label'] = trim\r\n            setLabels(data);\r\n         }else{\r\n            console.log('hello')\r\n            const data = [...labels]\r\n            data[index]['label'] = ''\r\n            setLabels(data);\r\n         }\r\n      }else{\r\n         if(trim.length > 0){\r\n            console.log('hi 1')\r\n            let data = [...inputFields];\r\n            data[index]['label'] = trim;\r\n            setInputFields(data);\r\n         }else{\r\n            console.log('hi 2')\r\n            let data = [...inputFields];\r\n            data[index]['label'] = '';\r\n            setInputFields(data);\r\n         }\r\n      }\r\n   }\r\n   const handleUrl = async (index, e, selectedType , type = null ) => {\r\n      if(type !== null && typeof type !== 'undefined' && type !== ''){\r\n         let data = [...labels];\r\n         data[index]['path_url'] = e.target.value;\r\n         setLabels(data);\r\n      }else{\r\n         let data = [...inputFields];\r\n         data[index]['id'] = uuid();\r\n         data[index]['unit_id'] = typeof editValues.id !== 'undefined' && editValues.id ? editValues.id : editValues.defaultId ;\r\n         data[index]['type'] = selectedType;\r\n         data[index]['path_url'] = e.target.value;\r\n         setInputFields(data);\r\n      }\r\n   }\r\n   const handleResources = async (index, e, type, unit_id) => {\r\n      const file = e.target.files[0]\r\n      let upload = null;\r\n      let counter = 0\r\n      let ext = file.name.substring(file.name.lastIndexOf('.')+1, file.name.length);\r\n      console.log('file', file)\r\n      let fileType = file.type.split('/')[1]\r\n      console.log(type, 'fileType', ext)\r\n      let data = [...inputFields];\r\n      console.log('type :::::::::::::', type)\r\n      console.log('ext :::::::::::::', ext)\r\n      if((type === 'xlsx' && ext === 'xlsx') || (type === 'pdf' && ext === 'pdf') || (type === 'xlsx' && ext === 'xls')){\r\n         if(type === 'pdf') {\r\n            data[index]['error'] = '';                        \r\n            data[index]['errorMessage'] = '';\r\n         }else if(type === 'xlsx'){\r\n            data[index]['error'] = '';\r\n            data[index]['errorMessage'] = '';\r\n         }\r\n\r\n         data[index]['uploadingResources'] = false\r\n         data[index]['uploadingResourcesPercentage'] = 0\r\n         try{\r\n            if(typeof file !== 'undefined' && e.target.files?.length > 0 && typeof data[index]['path_url'] !== 'undefined' && data[index]['path_url'] !== '' && data[index]['path_url'] !== null){\r\n               if(data[index]['path_url'] !== null && data[index]['path_url'] !== ''){\r\n                  let path = null\r\n                  if(data[index]['type'] === 'v') path = `lms/unit/resources/videos/${data[index]['path_url']}`\r\n                  else if(data[index]['type'] === 'i')  path = `lms/unit/resources/images/${data[index]['path_url']}`\r\n                  else if(data[index]['type'] === 'pdf')  path = `lms/unit/resources/pdf/${data[index]['path_url']}`\r\n                  else if(data[index]['type'] === 'xlsx')  path = `lms/unit/resources/xlsx/${data[index]['path_url']}`\r\n         \r\n                  const removeKey = path; \r\n                  console.log('removeKey', removeKey)\r\n                  data[index]['uploadingResources'] = false\r\n                  data[index]['uploadingResourcesPercentage'] = 0\r\n                  await Storage.remove( removeKey );\r\n               }\r\n            }\r\n            let name = null\r\n            if(type === 'v') name = 'videos'\r\n            else if(type === 'i')  name = 'images'\r\n            else if(type === 'pdf')  name = 'pdf'\r\n            else if(type === 'xlsx')  name = 'xlsx'\r\n            \r\n            setTotalFiles(file?.length)\r\n            // for (const file of file) {\r\n               if(typeof file !== 'undefined' && file){\r\n                  let fileName = `${moment().unix() + makeid(5)}.${ext}`\r\n                  console.log(fileName);\r\n                  let insertKey = `lms/unit/resources/${name}/${fileName}`; \r\n                  data[index]['uploadingResources'] = true\r\n                  data[index]['id'] = uuid();\r\n                  data[index]['unit_id'] = typeof editValues.id !== 'undefined' && editValues.id ? editValues.id : editValues.defaultId ;\r\n                  // data[index]['label'] = file.name;\r\n                  data[index]['type'] = type;\r\n                  data[index]['path_url'] = `${insertKey}`;\r\n                  data[index]['original_filename'] = file.name;\r\n                  upload = await Storage.put(insertKey, file, {\r\n                     level: 'public', \r\n                     contentType: file.type,\r\n                     // resumable: true,\r\n                     progressCallback: (progress) => {\r\n                        data[index]['uploadingResourcesPercentage'] = progress.loaded / progress.total * 100\r\n                        if(progress.loaded / progress.total * 100 === 100){\r\n                           counter++\r\n                        }\r\n                     },\r\n                     completeCallback: (event) => {\r\n                        setUploadingResourcesPercentage(100)\r\n                        data[index]['uploadingResourcesPercentage'] = 100\r\n                     },\r\n                     errorCallback: (err) => {\r\n                        console.error('Unexpected error while uploading', err);\r\n                     }\r\n                  })\r\n                  setUploadedFiles(counter)\r\n               }\r\n            // }\r\n            setInputFields(data);\r\n         }catch(err){\r\n            // setUploadingResources(false)\r\n            // setUploadingResourcesPercentage(0)\r\n            data[index]['uploadingResources'] = false\r\n            data[index]['uploadingResourcesPercentage'] = 0\r\n            Storage.cancel(upload);\r\n            setInputFields(data);\r\n            console.log(err);\r\n         }\r\n      }else {\r\n         if(type === 'pdf') {\r\n            data[index]['error'] = type;                        \r\n            data[index]['errorMessage'] = 'Only pdf are allowed!';\r\n         }else if(type === 'xlsx'){\r\n            data[index]['error'] = type;\r\n            data[index]['errorMessage'] = 'Only .xlsx and .xls are allowed!';\r\n         }\r\n         setInputFields(data);\r\n      }\r\n   }\r\n   const handleEditorChange = (data) => {\r\n      setEditValues({\r\n         ...editValues,\r\n         description: data\r\n      })\r\n   }\r\n   const handleChange = (e) => {\r\n      const target = e.target.name\r\n      const value = e.target.value\r\n      let trim = value.trim()\r\n      if(trim.length > 0){\r\n         setEditValues({\r\n            ...editValues,\r\n            [target]: value\r\n         })\r\n      }else{\r\n         setEditValues({\r\n            ...editValues,\r\n            [target]: ''\r\n         })\r\n      }\r\n   }\r\n   const handleEditUnit = (event, unit) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n      const introVideo = JSON.parse(unit.introVideo)\r\n      setEditValues({\r\n         ...unit,\r\n         fileLocation: introVideo?.fileLocation,\r\n         originalFilename: introVideo?.originalFilename,\r\n      });\r\n      const resources = unit.resources\r\n      setResourcesLength(resources?.length)\r\n      let arr = []\r\n      if(resources?.length > 0) {\r\n         const data = sortBy(resources, 'label');\r\n         data.map(itm => {\r\n            const {id, unit_id, label, type, path_url, original_filename} = itm\r\n            arr.push({ id, unit_id, label, type, path_url, original_filename, selectedValue: type, uploadingResources: false, uploadingResourcesPercentage: 0, db: true })\r\n         })\r\n         setLabels(arr)\r\n         setInputFields(arr)\r\n      }\r\n      setEdit(true)\r\n      // setAddNew(addNew => !addNew)\r\n   }; \r\n   const handleViewtUnit = (event, unit) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n      setEditValues(unit);\r\n      const resources = unit.resources\r\n      setResourcesData(resources)\r\n      setViewNew(true)\r\n   }; \r\n   const handleEditSubmit = (async () => {\r\n      // const resources = [...inputFields, ...labels]\r\n      const resources = [...inputFields]\r\n      if((uploadingPercentage === 100 || uploadingResourcesPercentage === 100) || editValues.id ){\r\n         try {\r\n            const unit_id = resources[0]?.unit_id\r\n\r\n            let variables = null\r\n            setIsSaving(true);\r\n            if(typeof editValues.id !== 'undefined' ){\r\n               if(resources.length > 0 && resources[0].label !== ''){\r\n                  variables = {\r\n                     ...editValues, \r\n                     module_id: moduleId,\r\n                     resources: JSON.stringify(resources) \r\n                  };\r\n               }else{\r\n                  variables = {\r\n                     ...editValues, \r\n                     module_id: moduleId\r\n                  };\r\n               }\r\n            }\r\n            await unitCreateUpdate({\r\n               variables,\r\n               optimisticResponse: {\r\n                  __typename: 'Mutation',\r\n                  units: {\r\n                     __typename: 'Units',\r\n                     module_id: moduleId,\r\n                     isDeleted: false,\r\n                     introVideo: editValues.fileLocation,\r\n                     ...editValues,\r\n                     resources: JSON.stringify(resources) \r\n                  },\r\n               },\r\n               refetchQueries: getUnitCacheQueries(moduleId, false),\r\n               // update: cacheUpdate(getUnitCacheQueries(moduleId, false), editValues.id, 'units'),\r\n            });\r\n            \r\n            // uploading data on aws cloud search\r\n            const courseData = location?.state?.courseData\r\n            const moduleData = location?.state?.moduleData\r\n            const { id, name, description, transcript } = variables\r\n            const keywords = []\r\n            // console.log('courseData :::::::::::', courseData)\r\n            // console.log('moduleData :::::::::::', moduleData)\r\n            const keywordsData = JSON.parse(courseData?.keywords)\r\n            if(keywordsData?.length > 0 ){\r\n               await keywordsData.map(itm => {\r\n                  keywords.push(itm.text)\r\n               })\r\n            }\r\n            const des = await removeTags(description)\r\n            let deleteData = false\r\n\r\n            // delete data from aws CloudSearch\r\n            var options = {\r\n               method: 'POST',\r\n               url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n               headers:{\r\n                  'content-type': 'application/json',\r\n                  'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n               },\r\n               data: JSON.stringify([\r\n                  {\r\n                     \"id\" : id,\r\n                     \"type\" : \"delete\"\r\n                  }\r\n               ])\r\n            };\r\n            await axios(options)\r\n               .then((res) => {\r\n                  deleteData = true\r\n                  console.log('res ::::::::::::::::::',res.data)\r\n               })\r\n               .catch((err) => {\r\n                  console.log('err :::::::::::::::::: delete',err)\r\n               })\r\n            // end data deleted from aws CloudSearch\r\n            if(deleteData === true){\r\n               var options = {\r\n                  method: 'POST',\r\n                  url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n                  headers:{\r\n                     'content-type': 'application/json',\r\n                     'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n                  },\r\n                  data: JSON.stringify([\r\n                     {\r\n                        \"fields\" : {\r\n                           \"name\" : name,\r\n                           \"description\" : des,\r\n                           \"transcript\" : transcript,\r\n                           \"id\" : id,\r\n                           \"module_id\" : moduleData.id,\r\n                           \"module_name\" : moduleData.name,\r\n                           \"course_description\" : courseData.description,\r\n                           \"course_keywords\" : keywords,\r\n                           \"course_name\" : courseData.name,\r\n                           \"course_id\" : courseData.id\r\n                        },\r\n                        \"id\" : id,\r\n                        \"type\" : \"add\"\r\n                     }\r\n                  ])\r\n               };\r\n               axios(options)\r\n                  .then((res) => {\r\n                  console.log('Data update!')\r\n                  })\r\n                  .catch((err) => {\r\n                     console.log('err :::::::::::::::::: edit',err)\r\n                  })\r\n               // end aws CS\r\n            }\r\n            setIsSaving(false);\r\n            // location.state = {unit_id: unit_id};\r\n            // location.pathname = `/admin/course/${courseId}/${moduleId}`;\r\n            // history.push(location);\r\n            handleClose();\r\n         } catch (e) {\r\n            console.log(e);\r\n            setIsSaving(false);\r\n            handleClose();\r\n         }\r\n      }\r\n   });\r\n   const removeTags = (str) => {\r\n      if ((str === null) || (str === ''))\r\n          return false;\r\n      else\r\n          str = str.toString();\r\n            \r\n      return str.replace( /(<([^>]+)>)/ig, '');\r\n   }\r\n   const handleSubmit = (async () => {\r\n      setEditValues({\r\n         ...editValues,\r\n         resources: inputFields\r\n      })\r\n      if(uploadingPercentage === 100 || uploadingResourcesPercentage === 100 ){\r\n         try {\r\n            let variables = null\r\n            setIsSaving(true);\r\n            variables = {\r\n               id: editValues.defaultId, \r\n               module_id: moduleId, \r\n               ...editValues,\r\n               resources: JSON.stringify(inputFields)\r\n            };\r\n            await unitCreateUpdate({\r\n               variables,\r\n               optimisticResponse: {\r\n                  __typename: 'Mutation',\r\n                  units: {\r\n                     __typename: 'Units',\r\n                     id: editValues.defaultId, \r\n                     module_id: moduleId,\r\n                     isDeleted: false,\r\n                     introVideo: editValues.fileLocation,\r\n                     ...editValues,\r\n                     resources: inputFields\r\n                  },\r\n               },\r\n               refetchQueries: getUnitCacheQueries(moduleId, false),\r\n            });\r\n\r\n            // uploading data on aws cloud search\r\n            const courseData = location?.state?.courseData\r\n            const moduleData = location?.state?.moduleData\r\n            const { id, name, description, transcript } = variables\r\n            const keywords = []\r\n\r\n            const keywordsData = JSON.parse(courseData?.keywords)\r\n            if(keywordsData?.length > 0 ){\r\n               await JSON.parse(courseData?.keywords).map(itm => {\r\n                  keywords.push(itm.name)\r\n               })\r\n            }\r\n            console.log('keywords :::::::::::', keywords)\r\n            const des = await removeTags(description)\r\n\r\n            const data = JSON.stringify([\r\n               {\r\n                  \"fields\" : {\r\n                     \"name\" : name,\r\n                     \"description\" : des,\r\n                     \"transcript\" : transcript,\r\n                     \"id\" : id,\r\n                     \"module_id\" : moduleData.id,\r\n                     \"module_name\" : moduleData.name,\r\n                     \"course_description\" : courseData.description,\r\n                     \"course_keywords\" : keywords,\r\n                     \"course_name\" : courseData.name,\r\n                     \"course_id\" : courseData.id\r\n                  },\r\n                  \"id\" : id,\r\n                  \"type\" : \"add\"\r\n               }\r\n            ])\r\n            var options = {\r\n               method: 'POST',\r\n               url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n               headers:{\r\n                  'content-type': 'application/json',\r\n                  'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n               },\r\n               data\r\n            };\r\n            axios(options)\r\n               .then((res) => {\r\n                 console.log('res ::::::::::::::::::',res.data)\r\n               })\r\n               .catch((err) => {\r\n                  console.log('err :::::::::::::::::: add',err)\r\n               })\r\n            // end aws CS\r\n            setIsSaving(false);\r\n            handleClose();\r\n         } catch (e) {\r\n            console.log(e);\r\n            setIsSaving(false);\r\n            handleClose();\r\n         }\r\n      }\r\n   });\r\n   const handleDeleteUnit = async (event, unit) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n      await UnitDelete({\r\n         variables: {id: unit?.id},\r\n         optimisticResponse: {\r\n            __typename: 'Mutation',\r\n            units_Delete: {\r\n               __typename: 'units_Delete',\r\n               isDeleted: true,\r\n            },\r\n         },\r\n         update: cacheDelete(getUnitCacheQueries(moduleId, false),  unit?.id, 'units'),\r\n      });\r\n      // delete data from aws CloudSearch\r\n      var options = {\r\n         method: 'POST',\r\n         url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n         headers:{\r\n            'content-type': 'application/json',\r\n            'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n         },\r\n         data: JSON.stringify([\r\n            {\r\n               \"id\" : unit?.id,\r\n               \"type\" : \"delete\"\r\n            }\r\n         ])\r\n      };\r\n      axios(options)\r\n         .then((res) => {\r\n           console.log('res ::::::::::::::::::',res.data)\r\n         })\r\n         .catch((err) => {\r\n            console.log('err :::::::::::::::::: delete',err)\r\n         })\r\n      // end data deleted from aws CloudSearch\r\n      // history.push(`/admin/course/${courseId}/${moduleId}`);\r\n   };\r\n   const addFields = () => {\r\n      let newfield = {  id: '', unit_id: '', label: '', type: '', path_url: '', original_filename: '', selectedValue: 'pdf', uploadingResources: false, uploadingResourcesPercentage: 0, error: '', errorMessage: '', db: false}\r\n  \r\n      setInputFields([...inputFields, newfield])\r\n      // setTypes([...type, 0])\r\n   }\r\n   const removeFields = async (index) => {\r\n      let data = [...inputFields];\r\n      if(data[index]['path_url'] !== null && data[index]['path_url'] !== '' && data[index]['type'] !== 'url'){\r\n         const removeKey = data[index]['path_url']; \r\n         console.log('removeKey', removeKey)\r\n         await Storage.remove( removeKey );\r\n      }\r\n      data.splice(index, 1)\r\n      setInputFields(data)\r\n   }\r\n   const removeFieldData = async (index) => {\r\n      let data = [...inputFields];\r\n      if(data[index]['path_url'] !== null && data[index]['path_url'] !== '' && data[index]['type'] !== 'url'){\r\n         const removeKey = data[index]['path_url']; \r\n         console.log('removeKey', removeKey)\r\n         await Storage.remove( removeKey );\r\n      }\r\n      data.splice(index, 1)\r\n      let newfield = {  id: '', unit_id: '', label: '', type: '', path_url: '', original_filename: '', selectedValue: 'pdf', uploadingResources: false, uploadingResourcesPercentage: 0, error: '', errorMessage: '', db: false}\r\n      setInputFields([...data, newfield])\r\n   }\r\n   const handleRemoveResources = async (itm, index) => {\r\n      let data = [...inputFields];\r\n      if(itm.type !== 'url'){\r\n         const removeKey = itm.path_url; \r\n         await Storage.remove( removeKey );\r\n      }\r\n      await ResourceDelete({\r\n         variables: {id: itm.id},\r\n         optimisticResponse: {introVideo: null},\r\n         update: cacheDelete(getResourcesCacheQueries(itm.unit_id, false), itm.id, 'units'),\r\n      });\r\n      data.splice(index, 1)\r\n      setInputFields(data)\r\n   };\r\n\r\n   const handleSortUnit = async (event, unit, index, type) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n      let nearestId = ''\r\n      if(type === 'add') nearestId = sortedUnits[index - 1].id\r\n      else nearestId = sortedUnits[index + 1].id\r\n\r\n      console.log('nearestId ::::', nearestId)\r\n      await UnitSort({\r\n         variables: { id: unit.id, type, nearestId },\r\n         optimisticResponse: {\r\n            __typename: 'Mutation',\r\n            units: {\r\n               __typename: 'Units',\r\n               id: unit.id,\r\n               type,\r\n               nearestId\r\n            },\r\n         },\r\n         refetchQueries: getUnitCacheQueries(moduleId, false),\r\n      });\r\n   };\r\n   \r\n   return (\r\n      <>\r\n         <ViewUnitModal \r\n            viewNew={viewNew} \r\n            classes={classes} \r\n            editValues={editValues}\r\n            resourcesData={resourcesData}\r\n            handleClose={handleClose}\r\n         />\r\n         {addNew ?\r\n            <AddEditUnitModal \r\n               addNew={addNew} \r\n               formErrors={formErrors}\r\n               remove={remove} \r\n               handleSubmit={handleSubmit} \r\n               processing={processing}\r\n               handleRemove={handleRemove}\r\n               classes={classes} \r\n               isSaving={isSaving}\r\n               uploading={uploading}\r\n               uploadingPercentage={uploadingPercentage}\r\n               editValues={editValues}\r\n               totalFiles={totalFiles}\r\n               uploadedFiles={uploadedFiles}\r\n               uploadingResources={uploadingResources}\r\n               uploadingResourcesPercentage={uploadingResourcesPercentage}\r\n               handleChange={handleChange} \r\n               handleEditorChange={handleEditorChange}\r\n               handleClose={handleClose}\r\n               handleFile={handleFile}\r\n               handleResources={handleResources}\r\n               handleResourcesLabel={handleResourcesLabel}\r\n               handleUrl={handleUrl}\r\n               LinearProgressWithLabel={LinearProgressWithLabel}\r\n               inputFields={inputFields}\r\n               addFields={addFields}\r\n               removeFields={removeFields}\r\n               handleRadioChange={handleRadioChange}\r\n               selectedValue={selectedValue}\r\n               removeFieldData={removeFieldData}\r\n               error={error}\r\n               errorMessage={errorMessage}\r\n            />\r\n            :\r\n            null\r\n         }\r\n         {edit ?\r\n            <EditUnitModal \r\n               edit={edit} \r\n               remove={remove} \r\n               handleRadioChange={handleRadioChange}\r\n               selectedValue={selectedValue}\r\n               handleEditSubmit={handleEditSubmit} \r\n               processing={processing}\r\n               handleRemove={handleRemove}\r\n               classes={classes} \r\n               isSaving={isSaving}\r\n               uploading={uploading}\r\n               uploadingPercentage={uploadingPercentage}\r\n               editValues={editValues}\r\n               totalFiles={totalFiles}\r\n               uploadedFiles={uploadedFiles}\r\n               uploadingResources={uploadingResources}\r\n               uploadingResourcesPercentage={uploadingResourcesPercentage}\r\n               handleChange={handleChange} \r\n               handleEditorChange={handleEditorChange}\r\n               handleClose={handleClose}\r\n               handleFile={handleFile}\r\n               handleResources={handleResources}\r\n               LinearProgressWithLabel={LinearProgressWithLabel}\r\n               inputFields={inputFields}\r\n               addFields={addFields}\r\n               removeFields={removeFields}\r\n               removeFieldData={removeFieldData}\r\n               handleRemoveResources={handleRemoveResources}\r\n               // setResourcesLength={setResourcesLength}\r\n               resourcesLength={resourcesLength}\r\n               handleResourcesLabel={handleResourcesLabel}\r\n               // setLabels={setLabels}\r\n               // labels={labels}\r\n               handleUrl={handleUrl}\r\n               setInputFields={setInputFields}\r\n\r\n            />\r\n            :\r\n            null\r\n         }\r\n         <Grid container fullWidth fullHeight direction={'column'} overflow={'visible'} wrap={'nowrap'} >\r\n            {!isAdmin && (\r\n               <Grid item resizable={false} className={classes.infoInnerStyle}>\r\n                  <TypographyFHG variant={'h5'} id={'lms.title.label'} color={'textSecondary'} gutterBottom />\r\n               </Grid>\r\n            )}\r\n            <Grid item container resizable >\r\n                  <Grid name={'Unit Edit Root'} item fullWidth className={classes.infoRootStyle}>\r\n                     <Grid name={'Unit Edit Inner'} container item fullWidth className={classes.infoInnerStyle}>\r\n                        <div className={classes.addButton}>\r\n                           <TypographyFHG\r\n                              variant='h5'\r\n                              color={'textPrimary'}\r\n                              className={classes.moduleHeading}\r\n                              button\r\n                              component={Link}\r\n                           >\r\n                              Units\r\n                           </TypographyFHG>\r\n                           <ButtonFHG \r\n                              startIcon={(<Add/>)} \r\n                              onClick={async () => {\r\n                                    await handleClose()\r\n                                    setAddNew(addNew => !addNew)\r\n                                 } \r\n                              }\r\n                              labelKey={'unit.new.button'}\r\n                              className={classes.btnRight}\r\n                           />\r\n                        </div>\r\n                        <div className={classes.main}>\r\n                           <TableContainer className={classes.tableMain} component={Paper}>\r\n                              <Table className={classes.table} aria-label=\"simple table\">\r\n                                 <TableHead className={classes.tableHeading}>\r\n                                    <TableRow>\r\n                                       <TableCell className={classes.tableCell} >#</TableCell>\r\n                                       <TableCell className={classes.tableCell} align=\"left\">Name</TableCell>\r\n                                       <TableCell className={`${classes.tableCell} ${classes.tableWidth}`}  align=\"left\">Action</TableCell>\r\n                                    </TableRow>\r\n                                 </TableHead>\r\n                                 <TableBody>\r\n                                    {typeof sortedUnits !== 'undefined' && sortedUnits !== null && sortedUnits !== '' && sortedUnits && sortedUnits.length > 0 ?\r\n                                       sortedUnits.map((unit, idx) => (\r\n                                          <TableRow key={idx}\r\n                                             className={clsx(classes.treeLabelStyle, classes.trHover, moduleId === module.id && classes.selectedTrBox )}\r\n                                             selected={moduleId === module.id}\r\n                                             onClick={(e) => handleViewtUnit(e, unit)}\r\n                                             align=\"left\" \r\n                                          >                                             \r\n                                             <TableCell align=\"left\">\r\n                                                <TypographyFHG\r\n                                                   variant='subtitle1'\r\n                                                   color={'textPrimary'}\r\n                                                >\r\n                                                   {idx + 1}\r\n                                                </TypographyFHG>\r\n                                             </TableCell>\r\n                                             {/* {idx === 0 ?\r\n                                                <TableCell align=\"left\">\r\n                                                   <TypographyFHG\r\n                                                      variant='subtitle1'\r\n                                                      color={'textPrimary'}\r\n                                                   >\r\n                                                      <ArrowDropDownIcon onClick={(e) => handleSortUnit(e, unit, idx, 'add')} />\r\n                                                   </TypographyFHG>\r\n                                                </TableCell>\r\n                                                :\r\n                                                <TableCell align=\"left\">\r\n                                                   <TypographyFHG\r\n                                                      variant='subtitle1'\r\n                                                      color={'textPrimary'}\r\n                                                   >\r\n                                                      <ArrowDropDownIcon onClick={(e) => handleSortUnit(e, unit, idx, 'add')}/>\r\n                                                      <ArrowDropUpIcon onClick={(e) => handleSortUnit(e, unit, idx, 'minus')}/>\r\n                                                   </TypographyFHG>\r\n                                                </TableCell>\r\n                                             } */}\r\n                                            \r\n                                             <TableCell align=\"left\">\r\n                                                <TypographyFHG\r\n                                                   variant='subtitle1'\r\n                                                   color={'textPrimary'}\r\n                                                >\r\n                                                   {unit.name}\r\n                                                </TypographyFHG>\r\n                                             </TableCell>\r\n                                             <TableCell align=\"left\">\r\n                                                <IconButton\r\n                                                   size={'small'}\r\n                                                   onClick={(e) => handleEditUnit(e, unit)}\r\n                                                   className={classes.fadeIn}\r\n                                                >\r\n                                                   <Edit fontSize={'small'} />\r\n                                                </IconButton>\r\n                                                <ConfirmIconButton\r\n                                                   className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                   onConfirm={(e) => handleDeleteUnit(e, unit)}\r\n                                                   values={{type: 'unit', name: unit.name}}\r\n                                                   messageKey={'confirmRemoveValue.message'}\r\n                                                   buttonLabelKey={'delete.button'}\r\n                                                   size={'small'}\r\n                                                   submitStyle={classes.deleteColorStyle}\r\n                                                   buttonTypographyProps={{\r\n                                                      float: 'right',\r\n                                                      color: theme.palette.error.dark,\r\n                                                      style: {textDecoration: 'underline'},\r\n                                                   }}\r\n                                                >\r\n                                                   <Delete fontSize={'small'} />\r\n                                                </ConfirmIconButton>\r\n                                             </TableCell>\r\n                                          </TableRow>\r\n                                       ))\r\n                                    :\r\n                                       <TableCell colSpan={4} className={classes.textCenter} >No unit are Found</TableCell>\r\n                                    }\r\n                                 </TableBody>\r\n                              </Table>\r\n                           </TableContainer>\r\n                        </div>\r\n                     </Grid>\r\n                  </Grid>\r\n            </Grid>\r\n         </Grid>\r\n      </>\r\n   );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from \"file-saver\";\r\nimport useQueryFHG from '../../hooks/data/useQueryFHG';\r\n\r\nimport { RESOURCES_QUERY_WHERE } from '../../../data/QueriesGL';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nconst ViewUnitModal = ({resourcesData, editValues, viewNew, classes, handleClose}) => {\r\n      // const [resourcesData] = useQueryFHG(RESOURCES_QUERY_WHERE, {variables: {unit_id: editValues.id, isDeleted: false}}, 'resources.type');\r\n      // console.log('resourcesData :::::::::::', resourcesData)\r\n\r\n      const saveFile = (url, filename) => {\r\n            saveAs( `https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/${url}`, filename );\r\n      };\r\n     \r\n      const redirect = (url) => {\r\n            window.open(url, '_blank')\r\n      };\r\n     \r\n      return (\r\n            <>\r\n                  <Dialog\r\n                        open={viewNew}\r\n                        onClose={handleClose}\r\n                        scroll={'paper'}\r\n                        fullWidth={true}\r\n                        maxWidth={'md'}\r\n                        aria-labelledby=\"scroll-dialog-title\"\r\n                        aria-describedby=\"scroll-dialog-description\"\r\n                  >\r\n                        <DialogTitle id=\"scroll-dialog-title\">View Unit</DialogTitle>\r\n                        <DialogContent dividers={true}>\r\n                        <DialogContentText\r\n                              id=\"scroll-dialog-description\"\r\n                              tabIndex={-1}\r\n                              className={classes.dialogBody}\r\n                        >\r\n                              {editValues.introVideo ?\r\n                                    <video width=\"100%\" height=\"400\" controls>\r\n                                          {/* <source src={`https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/lms/upload/${JSON.parse(editValues.introVideo).originalFilename}`} type=\"video/mov\"/> */}\r\n                                          <source src={`https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/lms/upload/${JSON.parse(editValues.introVideo).originalFilename}`} />\r\n                                    </video>\r\n                                    :\r\n                                    null\r\n                              }\r\n                              {/* <p className={classes.modules}>{editValues.name}</p> */}\r\n                              <h3 className={classes.viewHeading}>{editValues.name}</h3>\r\n                              <h4>Description </h4>\r\n                              <div className={classes.viewDescription} >\r\n                                    <p dangerouslySetInnerHTML={{__html: editValues.description}}/>\r\n                              </div>\r\n                              <div>\r\n                                    <h4>Resources </h4>\r\n                                    <div >\r\n                                          <table className={classes.resourcesViewTable}>\r\n                                                {resourcesData?.length > 0 && \r\n                                                      resourcesData.map((itm, idx) => {\r\n                                                      return (\r\n                                                            <>   \r\n                                                                  {itm.type === 'v' &&\r\n                                                                        <tr>\r\n                                                                              <td>\r\n                                                                                    <video width=\"100%\" height=\"250\" controls>\r\n                                                                                          <source src={`https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/${itm.path_url}`} />\r\n                                                                                    </video>\r\n                                                                              </td>\r\n                                                                        </tr>\r\n                                                                  }\r\n                                                                  {itm.type === 'i' &&\r\n                                                                        <tr>\r\n                                                                              <td>\r\n                                                                                    <img src={`https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/${itm.path_url}`} height=\"150\" alt={'image'}/>\r\n                                                                              </td>\r\n                                                                        </tr>\r\n                                                                  }\r\n                                                                  {itm.type === 'pdf' &&\r\n                                                                        <tr>\r\n                                                                              <td>\r\n                                                                                    <svg height=\"100%\" width=\"40px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                                                                                                viewBox=\"0 0 303.188 303.188\" style={{ enableBackground:'new 0 0 303.188 303.188' }} xmlSpace=\"preserve\">\r\n                                                                                          <g>\r\n                                                                                          <polygon style={{ fill: '#E8E8E8' }} points=\"219.821,0 32.842,0 32.842,303.188 270.346,303.188 270.346,50.525 \t\"/> \t\r\n                                                                                          <path style={{ fill: '#FB3449'}} d=\"M230.013,149.935c-3.643-6.493-16.231-8.533-22.006-9.451c-4.552-0.724-9.199-0.94-13.803-0.936\r\n                                                                                                c-3.615-0.024-7.177,0.154-10.693,0.354c-1.296,0.087-2.579,0.199-3.861,0.31c-1.314-1.36-2.584-2.765-3.813-4.202\r\n                                                                                                c-7.82-9.257-14.134-19.755-19.279-30.664c1.366-5.271,2.459-10.772,3.119-16.485c1.205-10.427,1.619-22.31-2.288-32.251\r\n                                                                                                c-1.349-3.431-4.946-7.608-9.096-5.528c-4.771,2.392-6.113,9.169-6.502,13.973c-0.313,3.883-0.094,7.776,0.558,11.594\r\n                                                                                                c0.664,3.844,1.733,7.494,2.897,11.139c1.086,3.342,2.283,6.658,3.588,9.943c-0.828,2.586-1.707,5.127-2.63,7.603\r\n                                                                                                c-2.152,5.643-4.479,11.004-6.717,16.161c-1.18,2.557-2.335,5.06-3.465,7.507c-3.576,7.855-7.458,15.566-11.815,23.02\r\n                                                                                                c-10.163,3.585-19.283,7.741-26.857,12.625c-4.063,2.625-7.652,5.476-10.641,8.603c-2.822,2.952-5.69,6.783-5.941,11.024\r\n                                                                                                c-0.141,2.394,0.807,4.717,2.768,6.137c2.697,2.015,6.271,1.881,9.4,1.225c10.25-2.15,18.121-10.961,24.824-18.387\r\n                                                                                                c4.617-5.115,9.872-11.61,15.369-19.465c0.012-0.018,0.024-0.036,0.037-0.054c9.428-2.923,19.689-5.391,30.579-7.205\r\n                                                                                                c4.975-0.825,10.082-1.5,15.291-1.974c3.663,3.431,7.621,6.555,11.939,9.164c3.363,2.069,6.94,3.816,10.684,5.119\r\n                                                                                                c3.786,1.237,7.595,2.247,11.528,2.886c1.986,0.284,4.017,0.413,6.092,0.335c4.631-0.175,11.278-1.951,11.714-7.57\r\n                                                                                                C231.127,152.765,230.756,151.257,230.013,149.935z M119.144,160.245c-2.169,3.36-4.261,6.382-6.232,9.041\r\n                                                                                                c-4.827,6.568-10.34,14.369-18.322,17.286c-1.516,0.554-3.512,1.126-5.616,1.002c-1.874-0.11-3.722-0.937-3.637-3.065\r\n                                                                                                c0.042-1.114,0.587-2.535,1.423-3.931c0.915-1.531,2.048-2.935,3.275-4.226c2.629-2.762,5.953-5.439,9.777-7.918\r\n                                                                                                c5.865-3.805,12.867-7.23,20.672-10.286C120.035,158.858,119.587,159.564,119.144,160.245z M146.366,75.985\r\n                                                                                                c-0.602-3.514-0.693-7.077-0.323-10.503c0.184-1.713,0.533-3.385,1.038-4.952c0.428-1.33,1.352-4.576,2.826-4.993\r\n                                                                                                c2.43-0.688,3.177,4.529,3.452,6.005c1.566,8.396,0.186,17.733-1.693,25.969c-0.299,1.31-0.632,2.599-0.973,3.883\r\n                                                                                                c-0.582-1.601-1.137-3.207-1.648-4.821C147.945,83.048,146.939,79.482,146.366,75.985z M163.049,142.265\r\n                                                                                                c-9.13,1.48-17.815,3.419-25.979,5.708c0.983-0.275,5.475-8.788,6.477-10.555c4.721-8.315,8.583-17.042,11.358-26.197\r\n                                                                                                c4.9,9.691,10.847,18.962,18.153,27.214c0.673,0.749,1.357,1.489,2.053,2.22C171.017,141.096,166.988,141.633,163.049,142.265z\r\n                                                                                                      M224.793,153.959c-0.334,1.805-4.189,2.837-5.988,3.121c-5.316,0.836-10.94,0.167-16.028-1.542\r\n                                                                                                c-3.491-1.172-6.858-2.768-10.057-4.688c-3.18-1.921-6.155-4.181-8.936-6.673c3.429-0.206,6.9-0.341,10.388-0.275\r\n                                                                                                c3.488,0.035,7.003,0.211,10.475,0.664c6.511,0.726,13.807,2.961,18.932,7.186C224.588,152.585,224.91,153.321,224.793,153.959z\"/>\r\n                                                                                          <polygon style={{fill: '#FB3449'}} points=\"227.64,25.263 32.842,25.263 32.842,0 219.821,0 \t\"/>\r\n                                                                                          <g> <path style={{fill: '#A4A9AD'}} d=\"M126.841,241.152c0,5.361-1.58,9.501-4.742,12.421c-3.162,2.921-7.652,4.381-13.472,4.381h-3.643 v15.917H92.022v-47.979h16.606c6.06,0,10.611,1.324,13.652,3.971C125.321,232.51,126.841,236.273,126.841,241.152z M104.985,247.387h2.363c1.947,0,3.495-0.546,4.644-1.641c1.149-1.094,1.723-2.604,1.723-4.529c0-3.238-1.794-4.857-5.382-4.857 h-3.348C104.985,236.36,104.985,247.387,104.985,247.387z\"/> <path style={{ fill: '#A4A9AD' }} d=\"M175.215,248.864c0,8.007-2.205,14.177-6.613,18.509s-10.606,6.498-18.591,6.498h-15.523v-47.979 h16.606c7.701,0,13.646,1.969,17.836,5.907C173.119,235.737,175.215,241.426,175.215,248.864z M161.76,249.324 c0-4.398-0.87-7.657-2.609-9.78c-1.739-2.122-4.381-3.183-7.926-3.183h-3.773v26.877h2.888c3.939,0,6.826-1.143,8.664-3.43 C160.841,257.523,161.76,254.028,161.76,249.324z\"/> <path style={{fill:'#A4A9AD'}} d=\"M196.579,273.871h-12.766v-47.979h28.355v10.403h-15.589v9.156h14.374v10.403h-14.374 L196.579,273.871L196.579,273.871z\"/> </g>\r\n                                                                                          <polygon style={{fill: '#D1D3D3'}} points=\"219.821,50.525 270.346,50.525 219.821,0 \t\"/>\r\n                                                                                          </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g>\r\n                                                                                    </svg>\r\n                                                                              </td>\r\n                                                                              <td className={classes.pdfCursor}>\r\n                                                                                    <span onClick={() => saveFile(itm.path_url, itm.label) }>{itm.label}</span>\r\n                                                                              </td>\r\n                                                                        </tr>\r\n                                                                  }\r\n                                                                  {itm.type === 'xlsx' &&\r\n                                                                        <tr>\r\n                                                                              <td>\r\n                                                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100%\" width=\"40px\"  viewBox=\"0 0 96 96\" fill=\"#FFF\" strokeMiterlimit=\"10\" strokeWidth=\"2\">\r\n                                                                                          <path stroke=\"#979593\" d=\"M67.1716,7H27c-1.1046,0-2,0.8954-2,2v78 c0,1.1046,0.8954,2,2,2h58c1.1046,0,2-0.8954,2-2V26.8284c0-0.5304-0.2107-1.0391-0.5858-1.4142L68.5858,7.5858 C68.2107,7.2107,67.702,7,67.1716,7z\"/>\r\n                                                                                          <path fill=\"none\" stroke=\"#979593\" d=\"M67,7v18c0,1.1046,0.8954,2,2,2h18\"/>\r\n                                                                                          <path fill=\"#C8C6C4\" d=\"M51 61H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 60.5523 51.5523 61 51 61zM51 55H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 54.5523 51.5523 55 51 55zM51 49H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 48.5523 51.5523 49 51 49zM51 43H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 42.5523 51.5523 43 51 43zM51 67H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 66.5523 51.5523 67 51 67zM79 61H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 60.5523 79.5523 61 79 61zM79 67H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 66.5523 79.5523 67 79 67zM79 55H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 54.5523 79.5523 55 79 55zM79 49H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 48.5523 79.5523 49 79 49zM79 43H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 42.5523 79.5523 43 79 43zM65 61H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 60.5523 65.5523 61 65 61zM65 67H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 66.5523 65.5523 67 65 67zM65 55H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 54.5523 65.5523 55 65 55zM65 49H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 48.5523 65.5523 49 65 49zM65 43H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 42.5523 65.5523 43 65 43z\"/>\r\n                                                                                          <path fill=\"#107C41\" d=\"M12,74h32c2.2091,0,4-1.7909,4-4V38c0-2.2091-1.7909-4-4-4H12c-2.2091,0-4,1.7909-4,4v32 C8,72.2091,9.7909,74,12,74z\"/>\r\n                                                                                          <path d=\"M16.9492,66l7.8848-12.0337L17.6123,42h5.8115l3.9424,7.6486c0.3623,0.7252,0.6113,1.2668,0.7471,1.6236 h0.0508c0.2617-0.58,0.5332-1.1436,0.8164-1.69L33.1943,42h5.335l-7.4082,11.9L38.7168,66H33.041l-4.5537-8.4017 c-0.1924-0.3116-0.374-0.6858-0.5439-1.1215H27.876c-0.0791,0.2684-0.2549,0.631-0.5264,1.0878L22.6592,66H16.9492z\"/>\r\n                                                                                    </svg>\r\n                                                                              </td>\r\n                                                                              <td className={classes.pdfCursor}>\r\n                                                                                    <span onClick={() => saveFile(itm.path_url, itm.label) }>{itm.label}</span>\r\n                                                                              </td>\r\n                                                                        </tr>\r\n                                                                  }\r\n                                                                  {itm.type === 'url' &&\r\n                                                                        <tr>\r\n                                                                              <td>\r\n                                                                                    <svg class=\"svg-icon\" height=\"100%\" width=\"34px\" style={{verticalAlign: 'middle', fill: 'black', overflow: 'hidden'}} viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                                          <path d=\"M657.664 170.666667l-158.165333 158.165333a42.666667 42.666667 0 0 1-60.330667-60.330667l170.666667-170.666666A42.666667 42.666667 0 0 1 640 85.333333h170.666667a42.666667 42.666667 0 0 1 30.165333 12.501334l85.333333 85.333333A42.666667 42.666667 0 0 1 938.666667 213.333333v170.666667a42.666667 42.666667 0 0 1-12.501334 30.165333l-170.666666 170.666667a42.666667 42.666667 0 0 1-60.330667-60.330667L853.333333 366.336V230.997333L793.002667 170.666667h-135.338667z m-133.162667 524.501333a42.666667 42.666667 0 0 1 60.330667 60.330667l-170.666667 170.666666A42.666667 42.666667 0 0 1 384 938.666667H213.333333a42.666667 42.666667 0 0 1-30.165333-12.501334l-85.333333-85.333333A42.666667 42.666667 0 0 1 85.333333 810.666667v-170.666667a42.666667 42.666667 0 0 1 12.501334-30.165333l170.666666-170.666667a42.666667 42.666667 0 0 1 60.330667 60.330667L170.666667 657.664v135.338667L230.997333 853.333333h135.338667l158.165333-158.165333z m128-384a42.666667 42.666667 0 0 1 60.330667 60.330667l-341.333333 341.333333a42.666667 42.666667 0 1 1-60.330667-60.330667l341.333333-341.333333z\"  />\r\n                                                                                    </svg>\r\n                                                                              </td>\r\n                                                                              <td className={classes.pdfCursor} >\r\n                                                                                    <p onClick={() => redirect(itm.path_url)}>{itm.path_url}</p>\r\n                                                                              </td>\r\n                                                                        </tr>\r\n                                                                  }\r\n                                                            </>\r\n                                                      )\r\n                                                      })\r\n                                                }\r\n                                          </table>\r\n                                    </div>\r\n                                    <h4>Transcript </h4>\r\n                                    <p className={classes.viewTranscript}>{editValues.transcript}</p>\r\n                              </div>\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        </DialogActions>\r\n                  </Dialog>\r\n            </>\r\n      );\r\n};\r\n\r\nexport default ViewUnitModal;","import React, { useState } from 'react';\r\nimport Grid from '../../components/Grid';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ConfirmIconButton from '../../components/ConfirmIconButton';\r\nimport {Add} from '@material-ui/icons';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport TextFieldLF from '../../../components/TextFieldLF';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nfunction ChooseFile({handleUrl, handleRadioChange, handleResourcesLabel, removeFieldData, LinearProgressWithLabel, classes, theme, inputFields, accept, addFields, uploadingResources, totalFiles, handleResources, uploadedFiles, uploadingResourcesPercentage, removeFields}) {\r\n      return (\r\n            <>\r\n                  {inputFields.map((input, index) => {\r\n                        return (  \r\n                        <div className={classes.resourcesdiv}>\r\n                              <RadioGroup className={classes.radioButton} name=\"Resourse\" value={input.selectedValue} onChange={(e) => handleRadioChange(e, index)}>\r\n                                    <FormControlLabel value=\"pdf\" control={<Radio />} label=\"Pdf\" />\r\n                                    <FormControlLabel value=\"xlsx\" control={<Radio />} label=\"xlsx\" />\r\n                                    <FormControlLabel value=\"url\" control={<Radio />} label=\"url\" />\r\n                              </RadioGroup>\r\n                              <div style={{textAlign: 'center'}}>\r\n                                <div className={classes.resources}>\r\n                                    <table className={classes.resourcesTable}>\r\n                                          <tr>\r\n                                                <td className={classes.labelTd}>\r\n                                                      {/* <input \r\n                                                            required \r\n                                                            id='resources' \r\n                                                            type='text' \r\n                                                            placeholder='Enter Label'\r\n                                                            value={input?.label}\r\n                                                            onChange={(e) => handleResourcesLabel(index, e)} \r\n                                                            accept={accept}\r\n                                                      /> */}\r\n                                                      <TextFieldLF\r\n                                                            key={'label'}\r\n                                                            name={'label'}\r\n                                                            // autoFocus\r\n                                                            labelTemplate={'lms.{name}.label'}\r\n                                                            value={input?.label}\r\n                                                            onChange={(e) => handleResourcesLabel(index, e)} \r\n                                                            required\r\n                                                      />\r\n                                                </td>\r\n                                                <td className={classes.fileTd}>\r\n                                                      {input?.type !== '' && input?.original_filename !== '' ? \r\n                                                            <>\r\n                                                                  <span>{input?.original_filename}</span>\r\n                                                            </>\r\n                                                            :\r\n                                                            <>\r\n                                                                  {input.selectedValue === 'pdf' &&\r\n                                                                        <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                                                                              <AddIcon /> Upload a file\r\n                                                                              <input type=\"file\" hidden accept='.pdf' required onChange={(e) => handleResources(index, e, input.selectedValue)}/>\r\n                                                                        </Button>\r\n                                                                  }\r\n                                                                  {input.selectedValue === 'xlsx' &&\r\n                                                                        <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                                                                              <AddIcon /> Upload a file\r\n                                                                              <input type=\"file\" hidden accept='.xlsx,.xls' required onChange={(e) => handleResources(index, e, input.selectedValue)}/>\r\n                                                                        </Button>\r\n                                                                  }\r\n                                                                  {input.selectedValue === 'url' &&\r\n                                                                        <>\r\n                                                                              {/* <input \r\n                                                                                    required \r\n                                                                                    id='resources' \r\n                                                                                    type='text' \r\n                                                                                    placeholder='Enter Url'\r\n                                                                                    value={input?.path_url}\r\n                                                                                    onChange={(e) => handleUrl(index, e, input.selectedValue)} \r\n                                                                              /> */}\r\n                                                                              <TextFieldLF\r\n                                                                                    key={'url'}\r\n                                                                                    name={'url'}\r\n                                                                                    type=\"url\"\r\n                                                                                    // autoFocus\r\n                                                                                    labelTemplate={'lms.{name}.label'}\r\n                                                                                    value={input?.path_url}\r\n                                                                                    onChange={(e) => handleUrl(index, e, input.selectedValue)} \r\n                                                                                    required\r\n                                                                              />\r\n                                                                        </>\r\n                                                                  }\r\n                                                            </>\r\n                                                      }\r\n                                                </td>\r\n                                                <td>\r\n                                                      {index > 0 ?\r\n                                                            <ConfirmIconButton\r\n                                                                  className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                                  onConfirm={() => removeFields(index)}\r\n                                                                  values={{type: 'unit resource', name: input['label'] !== '' ?  input['label'] : 'this field' }}\r\n                                                                  messageKey={'confirmRemoveValue.message'}\r\n                                                                  buttonLabelKey={'delete.button'}\r\n                                                                  size={'small'}\r\n                                                                  submitStyle={classes.deleteColorStyle}\r\n                                                                  buttonTypographyProps={{\r\n                                                                        float: 'right',\r\n                                                                        color: theme.palette.error.dark,\r\n                                                                        style: {textDecoration: 'underline'},\r\n                                                                  }}\r\n                                                                  >\r\n                                                                  <DeleteIcon />\r\n                                                            </ConfirmIconButton>\r\n                                                            :\r\n                                                            input?.label !== '' ?\r\n                                                                  <ConfirmIconButton\r\n                                                                        className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                                        onConfirm={() => removeFieldData(index)}\r\n                                                                        values={{type: 'unit resource', name: input['label'] !== '' ?  input['label'] : 'this field' }}\r\n                                                                        messageKey={'confirmRemoveValue.message'}\r\n                                                                        buttonLabelKey={'delete.button'}\r\n                                                                        size={'small'}\r\n                                                                        submitStyle={classes.deleteColorStyle}\r\n                                                                        buttonTypographyProps={{\r\n                                                                              float: 'right',\r\n                                                                              color: theme.palette.error.dark,\r\n                                                                              style: {textDecoration: 'underline'},\r\n                                                                        }}\r\n                                                                        >\r\n                                                                        <DeleteIcon />\r\n                                                                  </ConfirmIconButton>\r\n                                                                  :\r\n                                                                  <ConfirmIconButton\r\n                                                                        className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                                        onConfirm={() => removeFields(index)}\r\n                                                                        values={{type: 'unit resource', name: input['label'] !== '' ?  input['label'] : 'field' }}\r\n                                                                        messageKey={'confirmRemoveValue.message'}\r\n                                                                        buttonLabelKey={'delete.button'}\r\n                                                                        size={'small'}\r\n                                                                        disabled\r\n                                                                        submitStyle={classes.deleteColorStyle}\r\n                                                                        buttonTypographyProps={{\r\n                                                                              float: 'right',\r\n                                                                              color: theme.palette.error.dark,\r\n                                                                              style: {textDecoration: 'underline'},\r\n                                                                        }}\r\n                                                                  >\r\n                                                                        <DeleteIcon />\r\n                                                                  </ConfirmIconButton>\r\n                                                      }\r\n                                                </td>\r\n                                          </tr>\r\n                                          {input?.error !== null &&  input?.error !== 'null' &&\r\n                                                <tr>\r\n                                                      <td colSpan='3' className={classes.errorMessage}>{input?.errorMessage}</td>\r\n                                                </tr>\r\n                                          }\r\n                                    </table>\r\n                                    </div>\r\n                                    {input.uploadingResources ?\r\n                                          <div className={classes.processingRoot}>\r\n                                                <p>{`${ input.uploadingResourcesPercentage === 100 ? 'Completed' : 'Processing...' }`}</p>\r\n                                                <LinearProgressWithLabel value={input?.uploadingResourcesPercentage} />\r\n                                          </div>\r\n                                          : null\r\n                                    }\r\n                              </div>\r\n                        </div>\r\n                        )\r\n                  })}\r\n                  \r\n            </>\r\n      );\r\n}\r\n\r\nexport default ChooseFile;","import React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Form from '../../components/edit/Form';\r\nimport Grid from '../../components/Grid';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport TextAreaField from '../../../components/TextAreaField';\r\nimport TextFieldLF from '../../../components/TextFieldLF';\r\nimport clsx from 'clsx';\r\nimport ProgressButton from '../../components/ProgressButton';\r\nimport ButtonFHG from '../../components/ButtonFHG';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Storage} from 'aws-amplify';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport ConfirmIconButton from '../../components/ConfirmIconButton';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport {Add} from '@material-ui/icons';\r\nimport ChooseFile from './ChooseFile';\r\n\r\nconst AddModal = ({errorMessage, error, handleUrl, handleResourcesLabel, removeFieldData, handleRadioChange, removeFields, addFields, inputFields, uploadingResources, uploadingResourcesPercentage, totalFiles, uploadedFiles, handleResources, processing, handleRemove, remove, handleFile, uploading, uploadingPercentage, isSaving,  editValues, LinearProgressWithLabel, addNew, handleSubmit, classes, handleChange, handleEditorChange, handleClose}) => {\r\n      const theme = useTheme();\r\n\r\n      const handleClick = async (video, unit_id) => {\r\n            handleRemove(video, unit_id)\r\n      };\r\n\r\n      return (\r\n            <>\r\n                  <Dialog\r\n                        open={addNew}\r\n                        onClose={(_, reason) => {\r\n                              if (reason !== \"backdropClick\") {\r\n                                    handleClose();\r\n                              }\r\n                        }}\r\n                        scroll={'paper'}\r\n                        fullWidth={true}\r\n                        maxWidth={'md'}\r\n                        aria-labelledby=\"scroll-dialog-title\"\r\n                        aria-describedby=\"scroll-dialog-description\"\r\n                  >\r\n                        <DialogTitle id=\"scroll-dialog-title\">Add Unit</DialogTitle>\r\n                        <Form onSubmit={handleSubmit} className={classes.formStyle}>\r\n                              <DialogContent dividers={true}>\r\n                                    <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1} className={classes.dialogBody} >\r\n                                    <TextFieldLF\r\n                                          key={'name'}\r\n                                          name={'name'}\r\n                                          autoFocus\r\n                                          labelTemplate={'lms.{name}.label'}\r\n                                          onChange={(e) => handleChange(e)}\r\n                                          value={editValues.name}\r\n                                          required\r\n                                    />\r\n                                    <fieldset aria-hidden=\"true\" className={clsx(classes.textAreaEditor, classes.maxWidthEditor)} >\r\n                                          <legend className={classes.legendColor}><span>Description&nbsp;*</span></legend>\r\n                                          <input required type='text' className={classes.textFieldHidden} value={editValues.description} />\r\n                                          <CKEditor\r\n                                                editor={ ClassicEditor }\r\n                                                data={editValues.description}\r\n                                                className={classes.ckEditorEdit}\r\n                                                onChange={ ( event, editor ) => {\r\n                                                      const data = editor.getData();\r\n                                                      // console.log( { event, editor, data } );\r\n                                                      handleEditorChange(data)\r\n                                                }}\r\n                                                config={{\r\n                                                      // plugins: [ 'Paragraph', 'Bold', 'Italic', 'Essentials' ],\r\n                                                      toolbar: [\r\n                                                            'heading', '|',\r\n                                                            'fontfamily', 'fontsize', '|',\r\n                                                            'bold', 'italic', 'Link', '|',\r\n                                                            'bulletedList', 'numberedList', 'TodoList', '|', \r\n                                                            'outdent', 'indent', '|', \r\n                                                            'BlockQuote', 'InsertTable', 'Undo', 'Redo' \r\n                                                      ]\r\n                                                }}\r\n                                          />\r\n                                    </fieldset>\r\n                                    <fieldset aria-hidden=\"true\" className={classes.textAreaEditor} ><legend  className={classes.legendColor}><span>Intro Video&nbsp;*</span></legend>\r\n                                          <input type='file' required name={'file'} accept='.mp4,.mov' onChange={(e) => handleFile(e)}/>\r\n                                          {uploading ?\r\n                                                <div className={classes.processingRoot}>\r\n                                                      <LinearProgressWithLabel value={uploadingPercentage} />\r\n                                                </div>\r\n                                                : null\r\n                                          }\r\n                                    </fieldset>\r\n                                    {error === 'introVideo' &&\r\n                                          <p className={classes.errorMessage}>{errorMessage}</p>\r\n                                    }\r\n                                    <TextAreaField\r\n                                          key={'transcript'}\r\n                                          name={'transcript'}\r\n                                          labelTemplate={'lms.{name}.label'}\r\n                                          onChange={(e) => handleChange(e)}\r\n                                          value={editValues.transcript}\r\n                                          required\r\n                                          rows={5}\r\n                                    />\r\n                                    <div >\r\n                                          <fieldset aria-hidden=\"true\" className={classes.textAreaEditor} >\r\n                                            <legend className={classes.legendColor}><span>Resourse Type&nbsp;*</span></legend>\r\n                                            <>\r\n                                                <ChooseFile\r\n                                                      theme={theme}\r\n                                                      LinearProgressWithLabel={LinearProgressWithLabel}\r\n                                                      classes={classes}\r\n                                                      inputFields={inputFields}\r\n                                                      handleRadioChange={handleRadioChange}\r\n                                                      addFields={addFields}\r\n                                                      uploadingResources={uploadingResources}\r\n                                                      totalFiles={totalFiles}\r\n                                                      handleResources={handleResources}\r\n                                                      uploadedFiles={uploadedFiles}\r\n                                                      uploadingResourcesPercentage={uploadingResourcesPercentage}\r\n                                                      removeFields={removeFields}\r\n                                                      removeFieldData={removeFieldData}\r\n                                                      handleUrl={handleUrl}\r\n                                                      handleResourcesLabel={handleResourcesLabel}                                                            \r\n                                                /> \r\n                                                <Button\r\n                                                      variant=\"contained\"\r\n                                                      color=\"default\"\r\n                                                      className={classes.button}\r\n                                                      onClick={addFields}\r\n                                                >\r\n                                                      <Add />\r\n                                                </Button>\r\n                                            </>\r\n                                          </fieldset>\r\n                                    </div>\r\n                                    </DialogContentText>\r\n                                    {/* <div className='formErrors'>\r\n                                          {Object.keys(formErrors).map((fieldName, i) => {\r\n                                                if(formErrors[fieldName].length > 0){\r\n                                                      return (\r\n                                                            <p key={i}>{fieldName} {formErrors[fieldName]}</p>\r\n                                                      )        \r\n                                                } else {\r\n                                                      return '';\r\n                                                }\r\n                                          })}\r\n                                    </div> */}\r\n                              </DialogContent>\r\n                              <DialogActions>\r\n                                    <Grid container item direction={'row'} fullWidth className={classes.buttonPanelStyle} justify={'space-between'} overflow={'visible'} resizable={false} alignItems={'center'} >\r\n                                          <Grid item>\r\n                                                <ProgressButton\r\n                                                      isProgress={isSaving}\r\n                                                      variant='text'\r\n                                                      color='primary'\r\n                                                      type={'submit'}\r\n                                                      size='large'\r\n                                                      labelKey='save.label'\r\n                                                      disabled={isSaving || uploadingPercentage !== 100 ||  (uploadingResources === true && uploadingResourcesPercentage !== 100)}\r\n                                                />\r\n                                                <ButtonFHG\r\n                                                      variant='text'\r\n                                                      size={'large'}\r\n                                                      labelKey={'cancel.button'}\r\n                                                      disabled={isSaving || remove}\r\n                                                      onClick={handleClose}\r\n                                                />\r\n                                          </Grid>\r\n                                    </Grid>\r\n                              </DialogActions>\r\n                        </Form>\r\n                  </Dialog> \r\n            </>\r\n      );\r\n};\r\n\r\nexport default AddModal;","import React, { useState } from 'react';\r\nimport Grid from '../../components/Grid';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ConfirmIconButton from '../../components/ConfirmIconButton';\r\nimport {Add} from '@material-ui/icons';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport TextFieldLF from '../../../components/TextFieldLF';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nfunction ChooseFile({handleRemoveResources, handleUrl, handleRadioChange, handleResourcesLabel, type, length, removeFieldData, LinearProgressWithLabel, saveFile, classes, theme, inputFields, accept, addFields, uploadingResources, totalFiles, handleResources, uploadedFiles, uploadingResourcesPercentage, removeFields}) {\r\n      return (\r\n            <>\r\n                  {inputFields.map((input, index) => {\r\n                        return (  \r\n                        <div className={classes.resourcesdiv}>\r\n                              <RadioGroup className={classes.radioButton} name=\"Resourse\" value={input.selectedValue} onChange={(e) => handleRadioChange(e, index)}>\r\n                                    <FormControlLabel value=\"pdf\" control={<Radio />} label=\"Pdf\" />\r\n                                    <FormControlLabel value=\"xlsx\" control={<Radio />} label=\"xlsx\" />\r\n                                    <FormControlLabel value=\"url\" control={<Radio />} label=\"url\" />\r\n                              </RadioGroup>\r\n                              <div style={{textAlign: 'left'}}>\r\n                                <div className={classes.resources}>\r\n                                    <table className={classes.resourcesTable}>\r\n                                          <tr>\r\n                                                <td className={classes.labelTd} >\r\n                                                      <TextFieldLF\r\n                                                            key={'label'}\r\n                                                            name={'label'}\r\n                                                            // autoFocus\r\n                                                            labelTemplate={'lms.{name}.label'}\r\n                                                            value={input?.label}\r\n                                                            onChange={(e) => handleResourcesLabel(index, e)} \r\n                                                            required\r\n                                                      />\r\n                                                </td>\r\n                                                <td className={classes.fileTd}>\r\n                                                      {input?.type !== '' && input?.original_filename !== ''  ? \r\n                                                            <>\r\n                                                                  {input?.type === 'v' &&\r\n                                                                        <video width=\"100%\" height=\"150\" controls>\r\n                                                                              <source src={`https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/${input.path_url}`} />\r\n                                                                        </video>\r\n                                                                  }\r\n                                                                  {input?.type === 'i' &&\r\n                                                                        <img src={`https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/${input.path_url}`} height=\"150\" alt={'image'}/>\r\n                                                                  }\r\n                                                                  {input?.type === 'pdf'  &&\r\n                                                                        <span className={classes.pdfCursor} onClick={() => saveFile(input?.path_url, input?.original_filename) }>{input?.original_filename}</span>\r\n                                                                  }\r\n                                                                  {input?.type === 'xlsx' &&\r\n                                                                        <span className={classes.pdfCursor} onClick={() => saveFile(input?.path_url, input?.original_filename) }>{input?.original_filename}</span>\r\n                                                                  }\r\n                                                                  {input?.type === 'url' &&\r\n                                                                        <TextFieldLF\r\n                                                                              key={'url'}\r\n                                                                              name={'url'}\r\n                                                                              // autoFocus\r\n                                                                              labelTemplate={'lms.{name}.label'}\r\n                                                                              value={input?.path_url}\r\n                                                                              onChange={(e) => handleUrl(index, e, input.selectedValue)} \r\n                                                                              required\r\n                                                                        />\r\n                                                                  }\r\n                                                            </>\r\n                                                            :\r\n                                                            <>\r\n                                                                  {input.selectedValue === 'pdf' &&\r\n                                                                        <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                                                                              {\" \"}\r\n                                                                              <AddIcon /> Upload a file\r\n                                                                              <input type=\"file\" hidden accept='.pdf' required onChange={(e) => handleResources(index, e, input.selectedValue)}/>\r\n                                                                        </Button>\r\n                                                                  }\r\n                                                                  {input.selectedValue === 'xlsx' &&\r\n                                                                        <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                                                                              {\" \"}\r\n                                                                              <AddIcon /> Upload a file\r\n                                                                              <input type=\"file\" hidden required accept='.xlsx,.xls' onChange={(e) => handleResources(index, e, input.selectedValue)}/>\r\n                                                                        </Button>\r\n                                                                  }\r\n                                                                  {input.selectedValue === 'url' &&\r\n                                                                        <TextFieldLF\r\n                                                                              key={'url'}\r\n                                                                              name={'url'}\r\n                                                                              autoFocus\r\n                                                                              type=\"url\"\r\n                                                                              labelTemplate={'lms.{name}.label'}\r\n                                                                              value={input?.path_url}\r\n                                                                              onChange={(e) => handleUrl(index, e, input.selectedValue)} \r\n                                                                              required\r\n                                                                        />\r\n                                                                  }\r\n                                                            </>\r\n                                                      }\r\n                                                </td>\r\n                                                <td>\r\n                                                  {length > 0  && input?.type !== '' && input?.original_filename !== '' && input?.db === true ? \r\n                                                      <ConfirmIconButton\r\n                                                            className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                            onConfirm={() => handleRemoveResources(input, index)}\r\n                                                            values={{type: 'unit resource', name: index.original_filename !== '' ?  index.original_filename : 'this field' }}\r\n                                                            messageKey={'confirmRemoveValue.message'}\r\n                                                            buttonLabelKey={'delete.button'}\r\n                                                            size={'small'}\r\n                                                            submitStyle={classes.deleteColorStyle}\r\n                                                            buttonTypographyProps={{\r\n                                                                  float: 'right',\r\n                                                                  color: theme.palette.error.dark,\r\n                                                                  style: {textDecoration: 'underline'},\r\n                                                            }}\r\n                                                      >\r\n                                                            <DeleteIcon />\r\n                                                      </ConfirmIconButton>\r\n                                                      :\r\n                                                      input?.type === 'url' ?\r\n                                                            <ConfirmIconButton\r\n                                                                  className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                                  onConfirm={() => input?.db === false ? removeFields(index) : handleRemoveResources(input, index)}\r\n                                                                  values={{type: 'unit resource', name: input?.db === true && index.path_url !== '' ?  index.path_url : 'this field' }}\r\n                                                                  messageKey={'confirmRemoveValue.message'}\r\n                                                                  buttonLabelKey={'delete.button'}\r\n                                                                  size={'small'}\r\n                                                                  submitStyle={classes.deleteColorStyle}\r\n                                                                  buttonTypographyProps={{\r\n                                                                        float: 'right',\r\n                                                                        color: theme.palette.error.dark,\r\n                                                                        style: {textDecoration: 'underline'},\r\n                                                                  }}\r\n                                                            >\r\n                                                                  <DeleteIcon />\r\n                                                            </ConfirmIconButton>\r\n                                                            :\r\n                                                            length > 0 || index > 0 ?\r\n                                                                  <ConfirmIconButton\r\n                                                                        className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                                        onConfirm={() => removeFields(index)}\r\n                                                                        values={{type: 'unit resource', name: input['original_filename'] !== '' ?  input['original_filename'] : 'this field' }}\r\n                                                                        messageKey={'confirmRemoveValue.message'}\r\n                                                                        buttonLabelKey={'delete.button'}\r\n                                                                        size={'small'}\r\n                                                                        submitStyle={classes.deleteColorStyle}\r\n                                                                        buttonTypographyProps={{\r\n                                                                              float: 'right',\r\n                                                                              color: theme.palette.error.dark,\r\n                                                                              style: {textDecoration: 'underline'},\r\n                                                                        }}\r\n                                                                        >\r\n                                                                        <DeleteIcon />\r\n                                                                  </ConfirmIconButton>\r\n                                                                  :\r\n                                                                  input?.label !== '' ?\r\n                                                                        <ConfirmIconButton\r\n                                                                              className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                                              onConfirm={() => removeFieldData(index)}\r\n                                                                              values={{type: 'unit resource', name: input['original_filename'] !== '' ?  input['original_filename'] : 'this field' }}\r\n                                                                              messageKey={'confirmRemoveValue.message'}\r\n                                                                              buttonLabelKey={'delete.button'}\r\n                                                                              size={'small'}\r\n                                                                              submitStyle={classes.deleteColorStyle}\r\n                                                                              buttonTypographyProps={{\r\n                                                                                    float: 'right',\r\n                                                                                    color: theme.palette.error.dark,\r\n                                                                                    style: {textDecoration: 'underline'},\r\n                                                                              }}\r\n                                                                              >\r\n                                                                              <DeleteIcon />\r\n                                                                        </ConfirmIconButton>\r\n                                                                        :\r\n                                                                        <ConfirmIconButton\r\n                                                                              className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                                              onConfirm={() => removeFields(index)}\r\n                                                                              values={{type: 'unit resource', name: input['original_filename'] !== '' ?  input['original_filename'] : 'field' }}\r\n                                                                              messageKey={'confirmRemoveValue.message'}\r\n                                                                              buttonLabelKey={'delete.button'}\r\n                                                                              size={'small'}\r\n                                                                              disabled\r\n                                                                              submitStyle={classes.deleteColorStyle}\r\n                                                                              buttonTypographyProps={{\r\n                                                                                    float: 'right',\r\n                                                                                    color: theme.palette.error.dark,\r\n                                                                                    style: {textDecoration: 'underline'},\r\n                                                                              }}\r\n                                                                        >\r\n                                                                              <DeleteIcon />\r\n                                                                        </ConfirmIconButton>\r\n                                                  }\r\n                                                </td>\r\n                                          </tr>\r\n                                          {input?.error !== null &&  input?.error !== 'null' &&\r\n                                                <tr>\r\n                                                      <td colSpan='3' className={classes.errorMessage}>{input?.errorMessage}</td>\r\n                                                </tr>\r\n                                          }\r\n                                    </table>\r\n                                </div>\r\n                              {input.uploadingResources ?\r\n                                    <div className={classes.processingRoot}>\r\n                                          <p>{`${ input.uploadingResourcesPercentage === 100 ? 'Completed' : 'Processing...' }`}</p>\r\n                                          <LinearProgressWithLabel value={input?.uploadingResourcesPercentage} />\r\n                                    </div>\r\n                                    : null\r\n                              }\r\n                              </div>\r\n                        </div>\r\n                        )\r\n                  })}\r\n                  \r\n            </>\r\n      );\r\n}\r\n\r\nexport default ChooseFile;","import React, { useEffect, useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Form from '../../components/edit/Form';\r\nimport Grid from '../../components/Grid';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport TextAreaField from '../../../components/TextAreaField';\r\nimport TextFieldLF from '../../../components/TextFieldLF';\r\nimport clsx from 'clsx';\r\nimport ProgressButton from '../../components/ProgressButton';\r\nimport ButtonFHG from '../../components/ButtonFHG';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Storage} from 'aws-amplify';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport ConfirmIconButton from '../../components/ConfirmIconButton';\r\nimport {Delete} from '@material-ui/icons';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport useQueryFHG from '../../hooks/data/useQueryFHG';\r\nimport { RESOURCES_QUERY_WHERE } from '../../../data/QueriesGL';\r\nimport ChooseFileEdit from './ChooseFileEdit';\r\nimport {Add} from '@material-ui/icons';\r\nimport { saveAs } from \"file-saver\";\r\nimport { sortBy, defer } from 'lodash';\r\n\r\nconst EditModal = ({\r\n      setInputFields,  handleUrl, labels, setLabels,handleRadioChange, \r\n      selectedValue, handleResourcesLabel, removeFieldData, setResourcesLength, resourcesLength,\r\n      handleRemoveResources, removeFields, addFields, inputFields,handleEditSubmit, \r\n      uploadingResources, uploadingResourcesPercentage, totalFiles, uploadedFiles, \r\n      handleResources, processing, handleRemove, remove, handleFile, uploading, \r\n      uploadingPercentage, isSaving,  editValues, LinearProgressWithLabel, handleSubmit, \r\n      classes, edit, handleChange, handleEditorChange, handleClose\r\n}) => {\r\n      // const [resourcesData] = useQueryFHG(RESOURCES_QUERY_WHERE, {variables: {unit_id: editValues.id, isDeleted: false}}, 'resources.type');\r\n      // console.log('resourcesData :::::::::::', resourcesData)\r\n\r\n      // if(resourcesData && labels[0]?.label === ''){\r\n      //       setResourcesLength(resourcesData?.resources?.length)\r\n      //       let arr = []\r\n      //       if (resourcesData?.resources?.length > 0) {\r\n      //             const data = sortBy(resourcesData?.resources, 'label');\r\n      //             data.map(itm => {\r\n      //                   const {id, unit_id, label, type, path_url, original_filename} = itm\r\n      //                   arr.push({ id, unit_id, label, type, path_url, original_filename, selectedValue: type, uploadingResources: false, uploadingResourcesPercentage: 0 })\r\n      //             })\r\n      //             // data.map(itm => {\r\n      //             //       const {id, unit_id, label, type, path_url, originalFilename} = itm\r\n      //             //       arr.push({ id, unit_id, label, type, path_url, originalFilename })\r\n      //             // })\r\n      //             setLabels(arr)\r\n      //             setInputFields(arr)\r\n      //       }\r\n           \r\n      // }\r\n      \r\n      // console.log('labels :::::::::::', labels)\r\n      // const [selectedValue, setSelectedValue] = useState('v');\r\n      const theme = useTheme();\r\n\r\n      const handleClick = async (video, unit_id) => {\r\n            handleRemove(video, unit_id)\r\n      };\r\n\r\n      // const handleRadioChange = (event) => {\r\n      //       setSelectedValue(event.target.value);\r\n      // };\r\n\r\n      const saveFile = (url, filename) => {\r\n            saveAs( `https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/${url}`, filename );\r\n      };\r\n\r\n      return (\r\n            <>\r\n                  <Dialog open={edit} onClose={(_, reason) => { if (reason !== \"backdropClick\") { handleClose(); } }} scroll={'paper'} fullWidth={true} maxWidth={'md'} aria-labelledby=\"scroll-dialog-title\" aria-describedby=\"scroll-dialog-description\" >\r\n                        <DialogTitle id=\"scroll-dialog-title\">Edit Unit</DialogTitle>\r\n                        <Form onSubmit={handleEditSubmit} className={classes.formStyle}>\r\n                              <DialogContent dividers={true}>\r\n                                    <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1} className={classes.dialogBody} >\r\n                                    <TextFieldLF\r\n                                          key={'name'}\r\n                                          name={'name'}\r\n                                          autoFocus\r\n                                          labelTemplate={'lms.{name}.label'}\r\n                                          onChange={(e) => handleChange(e)}\r\n                                          value={editValues.name}\r\n                                          required\r\n                                    />\r\n                                    <fieldset aria-hidden=\"true\" className={clsx(classes.textAreaEditor, classes.maxWidthEditor)} >\r\n                                          <legend className={classes.legendColor}><span>Description&nbsp;*</span></legend>\r\n                                          <input required type='text' className={classes.textFieldHidden} value={editValues.description} />\r\n                                          <CKEditor\r\n                                          editor={ ClassicEditor }\r\n                                                data={editValues.description}\r\n                                                className={classes.ckEditorEdit}\r\n                                                onChange={ ( event, editor ) => {\r\n                                                      const data = editor.getData();\r\n                                                      // console.log( { event, editor, data } );\r\n                                                      handleEditorChange(data)\r\n                                                } }\r\n                                          />\r\n                                    </fieldset>\r\n                                    <fieldset aria-hidden=\"true\" className={classes.textAreaEditor} ><legend  className={classes.legendColor}><span>Intro Video&nbsp;*</span></legend>\r\n                                          {!remove && editValues.introVideo ?\r\n                                                <>\r\n                                                      <video width=\"100%\" height=\"400\" controls>\r\n                                                            <source src={`https://legacy-farmer-test-temp-public.s3.us-east-2.amazonaws.com/lms/upload/${JSON.parse(editValues.introVideo).originalFilename}`} />\r\n                                                      </video>\r\n                                                      <ConfirmIconButton\r\n                                                            className={`${classes.fadeIn} ${classes.deleteButtonStyle} ${classes.floatRight}`}\r\n                                                            onConfirm={() => handleClick(JSON.parse(editValues.introVideo), editValues.id)}\r\n                                                            values={{type: 'unit', name: 'intro video'}}\r\n                                                            messageKey={'confirmRemoveValue.message'}\r\n                                                            buttonLabelKey={'delete.button'}\r\n                                                            size={'small'}\r\n                                                            submitStyle={classes.deleteColorStyle}\r\n                                                            buttonTypographyProps={{\r\n                                                                  float: 'right',\r\n                                                                  color: theme.palette.error.dark,\r\n                                                                  style: {textDecoration: 'underline'},\r\n                                                            }}\r\n\r\n                                                      >\r\n                                                            <DeleteIcon />\r\n                                                      </ConfirmIconButton>\r\n                                                </>\r\n                                                :\r\n                                                null\r\n                                          }\r\n                                          {remove || !editValues.introVideo?\r\n                                                <>\r\n                                                      <input type='file' required name={'file'} accept='.mp4,.mov' onChange={(e) => handleFile(e)}/>\r\n                                                      {uploading ?\r\n                                                            <div className={classes.processingRoot}>\r\n                                                                  <LinearProgressWithLabel value={uploadingPercentage} />\r\n                                                            </div>\r\n                                                            : null\r\n                                                      }\r\n                                                </>\r\n                                                :\r\n                                                null\r\n                                          }\r\n                                    </fieldset>\r\n                                    <TextAreaField\r\n                                          key={'transcript'}\r\n                                          name={'transcript'}\r\n                                          labelTemplate={'lms.{name}.label'}\r\n                                          onChange={(e) => handleChange(e)}\r\n                                          value={editValues.transcript}\r\n                                          required\r\n                                          rows={5}\r\n                                    />\r\n                                    \r\n                                    <div>\r\n                                          <fieldset aria-hidden=\"true\" className={classes.textAreaEditor} ><legend  className={classes.legendColor}><span>Resourse Type&nbsp;*</span></legend>\r\n                                                <>\r\n                                                <ChooseFileEdit\r\n                                                      theme={theme}\r\n                                                      LinearProgressWithLabel={LinearProgressWithLabel}\r\n                                                      classes={classes}\r\n                                                      inputFields={inputFields}\r\n                                                      handleRadioChange={handleRadioChange}\r\n                                                      addFields={addFields}\r\n                                                      uploadingResources={uploadingResources}\r\n                                                      totalFiles={totalFiles}\r\n                                                      handleResources={handleResources}\r\n                                                      uploadedFiles={uploadedFiles}\r\n                                                      uploadingResourcesPercentage={uploadingResourcesPercentage}\r\n                                                      removeFields={removeFields}\r\n                                                      removeFieldData={removeFieldData}\r\n                                                      handleUrl={handleUrl}\r\n                                                      saveFile={saveFile}\r\n                                                      length={resourcesLength}\r\n                                                      handleResourcesLabel={handleResourcesLabel}                                                            \r\n                                                      handleRemoveResources={handleRemoveResources}                                                            \r\n                                                /> \r\n                                                <Button\r\n                                                      variant=\"contained\"\r\n                                                      color=\"default\"\r\n                                                      className={classes.button}\r\n                                                      onClick={addFields}\r\n                                                >\r\n                                                      <Add />\r\n                                                </Button>\r\n                                                </>\r\n                                                     \r\n                                          </fieldset>\r\n                                    </div>\r\n                                    </DialogContentText>\r\n                              </DialogContent>\r\n                              <DialogActions>\r\n                                    <Grid container item direction={'row'} fullWidth className={classes.buttonPanelStyle} justify={'space-between'} overflow={'visible'} resizable={false} alignItems={'center'} >\r\n                                          <Grid item>\r\n                                                <ProgressButton\r\n                                                      isProgress={isSaving}\r\n                                                      variant='text'\r\n                                                      color='primary'\r\n                                                      type={'submit'}\r\n                                                      size='large'\r\n                                                      labelKey='save.label'\r\n                                                      disabled={isSaving || ( uploading && uploadingPercentage !== 100 ) ||  (uploadingResources && uploadingResourcesPercentage !== 100) || (resourcesLength === 0 && inputFields.length === 0)}\r\n                                                />\r\n                                                <ButtonFHG\r\n                                                      variant='text'\r\n                                                      size={'large'}\r\n                                                      labelKey={'cancel.button'}\r\n                                                      disabled={isSaving || remove}\r\n                                                      onClick={handleClose}\r\n                                                />\r\n                                          </Grid>\r\n                                    </Grid>\r\n                              </DialogActions>\r\n                        </Form>\r\n                  </Dialog> \r\n            </>\r\n      );\r\n};\r\n\r\nexport default EditModal;","import makeStyles from '@material-ui/core/styles/makeStyles';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport * as PropTypes from 'prop-types';\nimport Grid from '../../fhg/components/Grid';\nimport TypographyFHG from '../../fhg/components/Typography';\n\nconst useTreeItemStyles = makeStyles((theme) => ({\n   root: {\n      color: theme.palette.text.secondary,\n      // '&:hover $actionStyle': {\n      //    pointerEvents: 'none'\n      // },\n      '&:hover > $content': {\n         // backgroundColor: theme.palette.action.hover,\n      },\n      '&:focus > $content, &$selected > $content': {\n         // backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\n         // color: 'var(--tree-view-color)',\n      },\n      '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\n         // backgroundColor: 'transparent',\n      },\n      // '&:focus $actionStyle, &:hover $actionStyle, &$selected $actionStyle': {\n      //    backgroundColor: 'transparent',\n      // },\n   },\n   content: {\n      // color: theme.palette.text.secondary,\n      // borderTopRightRadius: theme.spacing(2),\n      // borderBottomRightRadius: theme.spacing(2),\n      // paddingRight: theme.spacing(1),\n      fontWeight: theme.typography.fontWeightMedium,\n      '$expanded > &': {\n         fontWeight: theme.typography.fontWeightRegular,\n      },\n      '& .labelRoot': {\n         fontWeight: theme.typography.fontWeightRegular,\n      },\n   },\n   group: {\n      marginLeft: 0,\n      '& $labelText': {\n         fontWeight: theme.typography.fontWeightRegular,\n         color: theme.palette.text.primary,\n         ...theme.typography.body1,\n      }\n   },\n   expanded: {},\n   selected: {},\n   label: {\n      fontWeight: 'inherit',\n      color: 'inherit',\n      '&:hover': {\n         backgroundColor: 'inherit',\n      },\n   },\n   labelRoot: {\n      padding: theme.spacing(0.5, 0),\n      ...theme.typography.h6,\n   },\n   labelIcon: {\n      marginRight: theme.spacing(1),\n   },\n   labelText: {\n      fontWeight: 'inherit',\n      flexGrow: 1,\n   },\n   actionStyle: {\n      backgroundColor: theme.palette.background.default,\n      // marginTop: -13,\n      // marginBottom: -13,\n      // float: 'right',\n      position: 'absolute',\n      right: 0,\n   }\n}));\n\nexport default function StyledTreeItem(props) {\n   const classes = useTreeItemStyles(props);\n   const {nodeId, labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, action, children, ...other} = props;\n\n   return (\n      <TreeItem\n         nodeId={nodeId}\n         label={\n            <Grid container justify={'space-between'} alignItems={'center'} style={{position: 'relative'}}>\n               <Grid item className={classes.labelRoot}>\n                  {/*<LabelIcon color='inherit' className={classes.labelIcon}/>*/}\n                  <TypographyFHG variant='subtitle1' className={classes.labelText}>\n                     {labelText}\n                  </TypographyFHG>\n                  <TypographyFHG variant='caption' color='inherit'>\n                     {labelInfo}\n                  </TypographyFHG>\n               </Grid>\n               {action && (\n                  <Grid item className={classes.actionStyle}>\n                     {action}\n                  </Grid>\n               )}\n            </Grid>\n         }\n         style={{\n            '--tree-view-color': color,\n            '--tree-view-bg-color': bgColor,\n         }}\n         classes={{\n            root: classes.root,\n            content: classes.content,\n            expanded: classes.expanded,\n            selected: classes.selected,\n            group: classes.group,\n            label: classes.label,\n         }}\n         {...other}\n      >\n         {children}\n      </TreeItem>\n   );\n}\n\nStyledTreeItem.propTypes = {\n   bgColor: PropTypes.string,\n   color: PropTypes.string,\n   labelInfo: PropTypes.string,\n   labelText: PropTypes.string.isRequired,\n};\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport {Add} from '@material-ui/icons';\r\nimport {sortBy, defer} from 'lodash';\r\nimport React, {useMemo, useState} from 'react';\r\nimport {Link, useHistory, useParams, useLocation} from 'react-router-dom';\r\nimport {ADMIN_COURSES_PATH, COURSE_EDIT, MODULE_EDIT, ADMIN_COURSE_PATH, APPBAR_SMALL_HEIGHT, ADMIN_DRAWER} from '../../Constants';\r\nimport {lighten} from '@material-ui/core/styles';\r\nimport {COURSE_QUERY_WHERE, COURSE_DELETE, COURSE_CREATE_UPDATE} from '../../data/QueriesGL';\r\nimport ButtonFHG from '../../fhg/components/ButtonFHG';\r\nimport Grid from '../../fhg/components/Grid';\r\nimport ResponsiveMobileDrawer from '../../fhg/components/ResponsiveMobileDrawer';\r\nimport TypographyFHG from '../../fhg/components/Typography';\r\nimport useQueryFHG from '../../fhg/hooks/data/useQueryFHG';\r\nimport usePageTitle from '../../fhg/hooks/usePageTitle';\r\nimport Modules from './Modules';\r\nimport ModulesEdit from './ModulesEdit';\r\nimport Unit from './Unit';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport StyledTreeItem from './StyledTreeItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Edit} from '@material-ui/icons';\r\nimport {Delete} from '@material-ui/icons';\r\nimport ConfirmIconButton from '../../fhg/components/ConfirmIconButton';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport { cacheDelete, cacheUpdate } from '../../fhg/utils/DataUtil';\r\nimport {getCourseCacheQueries} from '../../data/QueriesGL';\r\nimport useMutationFHG from '../../fhg/hooks/data/useMutationFHG';\r\nimport clsx from 'clsx';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {v4 as uuid} from 'uuid';\r\nimport TextFieldLF from '../../components/TextFieldLF';\r\nimport TextAreaField from '../../components/TextAreaField';\r\nimport Form from '../../fhg/components/edit/Form';\r\nimport ProgressButton from '../../fhg/components/ProgressButton';\r\n// import { WithContext as ReactTags } from 'react-tag-input';\r\nimport ReactTags from 'react-tag-autocomplete'\r\n\r\nimport \"./ReactTagsAutoComplete.scss\";\r\nimport axios from 'axios'\r\nconst DEFAULT_EXPANDED = ['course'];\r\n\r\nconst useStyles = makeStyles(\r\n   (theme) => ({\r\n      root: {\r\n         margin: theme.spacing(0, 2),\r\n      },\r\n      textRight: {\r\n         textAlign: 'right'\r\n      },\r\n      tags: {\r\n         padding: '10px 0',\r\n      },\r\n      floatRight:{\r\n         float: 'right'\r\n      },\r\n      tagInput: {\r\n         padding: '10px 0',\r\n      },\r\n      remove: {\r\n         border: 'none',\r\n         color: 'red',\r\n         margin: '0px 0 0 5px;',\r\n      },\r\n      tag: {\r\n         background: '#527928',\r\n         color: 'white',\r\n         width: '50px', \r\n         padding: '5px',\r\n         margin: '0 2px',\r\n         borderRadius: '6px',\r\n      },\r\n      tagInputField:{\r\n         // width: '100%',\r\n         paddingTop: '10.5px',\r\n         paddingBottom: '10.5px',\r\n         border: 'none',\r\n         borderBottom: '2px solid green',\r\n         color: '#527928',\r\n         // '&:focus': {\r\n         //    border: 'none',\r\n         //    borderBottom: '2px solid green',\r\n         // },\r\n      },\r\n      textAreaEditor:{\r\n         borderColor: 'rgba(0, 0, 0, 0.23)',\r\n         border: '0.5px solid',\r\n         borderRadius: '6px',\r\n         width: '100%'\r\n      },\r\n      legendColor:{\r\n         color: '#527928',\r\n         fontSize: '13px'\r\n      },\r\n      textDander:{\r\n         color: 'red'\r\n      },\r\n      innerGridStyle: {\r\n         overflowY: 'none !important' \r\n      },\r\n      drawerStyle: {\r\n         padding: theme.spacing(0, 2),\r\n      },\r\n      inputStyle: {\r\n         backgroundColor: theme.palette.background.default,\r\n      },\r\n      frameStyle: {\r\n         padding: theme.spacing(4, 0, 3, 2),\r\n      },\r\n      expand: {\r\n         transform: 'rotate(0deg)',\r\n         marginLeft: 'auto',\r\n         transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n         }),\r\n      },\r\n      expandOpen: {\r\n         transform: 'rotate(180deg)',\r\n      },\r\n      titleStyle: {\r\n         paddingTop: theme.spacing(3),\r\n      },\r\n      fadeArea: {\r\n         marginTop: theme.spacing(1),\r\n         padding: '5px 0px 0px 6px',\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n      fadeIn: {\r\n         opacity: 0,\r\n      },\r\n      labelRoot: {\r\n         '&:hover $fadeIn': {\r\n            opacity: 1,\r\n         },\r\n      },\r\n      deleteColorStyle: {\r\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\r\n         '&:hover': {\r\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\r\n         },\r\n      },\r\n      deleteButtonStyle: {\r\n         '&:hover': {\r\n            color: theme.palette.error.main,\r\n         },\r\n      },\r\n      buttonStyle: {\r\n         height: 42,\r\n         backgroundColor: '#F4F4F4',\r\n         position: 'absolute',\r\n         right: 0,\r\n         top: 16,\r\n         zIndex: 1000,\r\n      },\r\n      treeLabelStyle: {\r\n         textDecoration: 'none',\r\n         cursor: 'pointer',\r\n         '&:hover': {\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n      selectedBox: {\r\n         background: 'rgba(0, 0, 0, 0.04)'\r\n      },\r\n      clearAll: {\r\n         cursor: 'pointer',\r\n         padding: '4px 10px',\r\n         margin: '5px',\r\n         background: '#f88d8d',\r\n         color: '#fff',\r\n         border: 'none',\r\n         float: 'right',\r\n         '&:hover': {\r\n            background: '#f3adad',\r\n         },\r\n      },\r\n      scroller: {\r\n         height: '100%',\r\n         overflow: 'auto'\r\n      },\r\n      paper: {\r\n         position: 'absolute',\r\n         width: 800,\r\n         backgroundColor: theme.palette.background.paper,\r\n         border: '2px solid #000',\r\n         boxShadow: theme.shadows[5],\r\n         padding: theme.spacing(2, 4, 3),\r\n      },\r\n      textDanger: {\r\n         color: 'red'\r\n      }\r\n   }),\r\n   {name: 'UsersStyles'}\r\n);\r\nconst TREE_CONTENT_WIDTH = 250;\r\nfunction getModalStyle() {\r\n   const top = 50;\r\n   const left = 50;\r\n   return {\r\n     top: `${top}%`,\r\n     left: `${left}%`,\r\n     transform: `translate(-${top}%, -${left}%)`,\r\n   };\r\n}\r\nexport default function Users() {\r\n   const classes = useStyles();\r\n   const history = useHistory();\r\n   const theme = useTheme();\r\n   const {courseId, moduleId} = useParams();\r\n   const location = useLocation();\r\n\r\n   const [isChanged, setIsChanged] = useState(false);\r\n   const [editValues, setEditValues] = useState({\r\n      name: '',\r\n      description: '',\r\n   });\r\n   const [course_id, setCourseId] = useState('');\r\n   const [isSaving, setIsSaving] = useState(false);\r\n   const [courseCreateUpdate] = useMutationFHG(COURSE_CREATE_UPDATE);\r\n   const [expanded, setExpanded] = useState(DEFAULT_EXPANDED);\r\n   const [modalStyle] = React.useState(getModalStyle);\r\n   const [addNew, setAddNew] = useState(false);\r\n   const [CourseDelete] = useMutationFHG(COURSE_DELETE);\r\n   const [courseData] = useQueryFHG(COURSE_QUERY_WHERE, {variables: {active: true}}, 'lms.type');\r\n   const [tags, setTags] = React.useState([]);\r\n   const [error, setError] = useState(false);\r\n   const [errorMessage, setErrorMessage] = useState(null);\r\n   usePageTitle({titleKey: 'lms.admintitle.label'});\r\n\r\n   const sortedCourses = useMemo(() => {\r\n      console.log('courseData', courseData);\r\n      if (courseData?.courses) {\r\n         return sortBy(courseData?.courses, 'name');\r\n      }\r\n      return [];\r\n   }, [courseData]);\r\n\r\n   const suggestions = []\r\n   const KeyCodes = {\r\n      comma: 188,\r\n      enter: 13\r\n   }\r\n\r\n   const delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\n   const handleDelete = i => {\r\n      setTags(tags.filter((tag, index) => index !== i));\r\n   };\r\n\r\n   const handleAddition = tag => {\r\n      console.log('tag', tag)\r\n      setTags([...tags, tag]);\r\n   };\r\n\r\n   const handleDrag = (tag, currPos, newPos) => {\r\n      const newTags = tags.slice();\r\n      newTags.splice(currPos, 1);\r\n      newTags.splice(newPos, 0, tag);\r\n\r\n      // re-render\r\n      setTags(newTags);\r\n   };\r\n  \r\n    const handleTagClick = index => {\r\n      console.log('The tag at index ' + index + ' was clicked');\r\n    };\r\n\r\n   const handleNodeToggle = (event, expandedNodeIds) => {\r\n      setExpanded(expandedNodeIds);\r\n   }\r\n\r\n   const handleEditCourse = (event, course) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n\r\n      if(course?.keywords?.length > 0){\r\n         setTags(JSON.parse(course?.keywords))\r\n         // delete data?.keywords\r\n      }\r\n\r\n      setCourseId(course?.id);\r\n      setEditValues(course);\r\n      setAddNew(addNew => !addNew)\r\n   };\r\n\r\n   const handleDeleteCourse = async (event, course) => {\r\n      if (event) {\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n      await CourseDelete({\r\n         variables: {id: course?.id},\r\n         optimisticResponse: {\r\n            __typename: 'Mutation',\r\n            course_Delete: {\r\n               __typename: 'course_Delete',\r\n               active: false\r\n            },\r\n         },\r\n         update: cacheDelete(getCourseCacheQueries(), course?.id, 'courses'),\r\n      });\r\n      // edit data in aws CloudSearch\r\n      var options = {\r\n         method: 'GET',\r\n         // url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n         url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/search?q=${course?.id}&q.options=%7Bfields:%5B'course_id'%5D%7D`,\r\n         headers:{\r\n            'content-type': 'application/json',\r\n            'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n         },\r\n      };\r\n      axios(options)\r\n         .then((res) => res.data?.hits)\r\n         .then((hits) => hits?.hit)\r\n         .then((dataFound) => {\r\n            console.log('Data Found ::::::::::::::::::', dataFound.length)\r\n            dataFound.map(async(itm) => {\r\n               var options = {\r\n                  method: 'POST',\r\n                  url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n                  headers:{\r\n                     'content-type': 'application/json',\r\n                     'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n                  },\r\n                  data: JSON.stringify([\r\n                     {\r\n                        \"id\" : itm?.id,\r\n                        \"type\" : \"delete\"\r\n                     }\r\n                  ])\r\n               };\r\n               axios(options)\r\n                  .then((res) => res.data)\r\n                  .then((res) => {\r\n                     if(res.status !==  'error') console.log('Data delete Successfully ::::::::::::::::::')\r\n                     else console.log('error ::::::::::::::::::', res?.message)\r\n                  })\r\n                  .catch((err) => {\r\n                     console.log('error while deleting data::::::::::::::::::',err)\r\n                  })\r\n            })\r\n         })\r\n         .catch((err) => {\r\n            console.log('err ::::::::::::::::::',err)\r\n         })\r\n      // end :- data updated in aws CloudSearch\r\n      history.push(ADMIN_COURSES_PATH);\r\n   };\r\n\r\n   const handleClose = () => {\r\n      setEditValues({\r\n         name: '',\r\n         order_no: null,\r\n      });\r\n      setTags([])\r\n      setError(null)\r\n      setCourseId('')\r\n      setErrorMessage(null)\r\n      setAddNew(false)\r\n   }\r\n\r\n   const handleChange = (e) => {\r\n      const target = e.target.name\r\n      const value = e.target.value\r\n      let trim = value.trim()\r\n      if(trim.length > 0){\r\n         setEditValues({\r\n            ...editValues,\r\n            [target]: value\r\n         })\r\n      }else{\r\n         setEditValues({\r\n            ...editValues,\r\n            [target]: ''\r\n         })\r\n      }\r\n   }\r\n   const handleSubmit = (async (type = null) => {\r\n      if(tags.length > 0){\r\n         try {\r\n            if(typeof editValues.keywords !== 'undefined' && editValues?.keywords && editValues?.keywords?.length > 0){\r\n               delete editValues.keywords\r\n            }\r\n            setIsSaving(true);\r\n            var variables = null\r\n            if(typeof editValues.id !== 'undefined' ){\r\n               variables = {...editValues, keywords: JSON.stringify(tags)};\r\n            }else{\r\n               variables = {id: uuid(), ...editValues, keywords: JSON.stringify(tags)};\r\n            }\r\n            await courseCreateUpdate({\r\n               variables,\r\n               optimisticResponse: {\r\n                  __typename: 'Mutation',\r\n                  courses: {\r\n                     __typename: 'Courses',\r\n                     ...editValues,\r\n                     active: false,\r\n                     keywords: JSON.stringify(tags)\r\n                  },\r\n               },\r\n               update: cacheUpdate(getCourseCacheQueries(), editValues.id, 'courses'),\r\n            });\r\n            if(type === 'edit'){\r\n               // edit data in aws CloudSearch\r\n               var options = {\r\n                  method: 'GET',\r\n                  // url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n                  url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/search?q=${course_id}&q.options=%7Bfields:%5B'course_id'%5D%7D`,\r\n                  headers:{\r\n                     'content-type': 'application/json',\r\n                     'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n                  },\r\n               };\r\n               axios(options)\r\n                  .then((res) => res.data?.hits)\r\n                  .then((hits) => hits?.hit)\r\n                  .then((dataFound) => {\r\n                     console.log('found ::::::::::::::::::', dataFound.length)\r\n                     dataFound.map(async(itm) => {\r\n                        console.log('dataFound ::::::::::::::::::', itm.fields)\r\n                        const keywords = []\r\n                        if(tags?.length > 0 ){\r\n                           await tags.map(itm => {\r\n                              keywords.push(itm.text)\r\n                           })\r\n                        }\r\n                        var options = {\r\n                           method: 'POST',\r\n                           url: `https://no3iyr7cae.execute-api.us-east-1.amazonaws.com/beta/document`,\r\n                           headers:{\r\n                              'content-type': 'application/json',\r\n                              'x-api-key': \"LhOZvNGn1D7FzkzYXvSDz4taXtKaEM393BURjH9M\",\r\n                           },\r\n                           data: JSON.stringify([\r\n                              {\r\n                                 \"fields\" : {\r\n                                    ...itm.fields, \r\n                                    course_name : variables.name,\r\n                                    course_description : variables.description,\r\n                                    course_keywords : keywords,\r\n                                 },\r\n                                 \"id\" : itm.id,\r\n                                 \"type\" : \"add\"\r\n                              }\r\n                           ])\r\n                        };\r\n                        axios(options)\r\n                           .then((res) => res.data)\r\n                           .then((res) => {\r\n                              if(res.status !==  'error') console.log('Data update Successfully ::::::::::::::::::')\r\n                              else console.log('error ::::::::::::::::::', res?.message)\r\n                           })\r\n                           .catch((err) => {\r\n                              console.log('error while uploading data::::::::::::::::::',err)\r\n                           })\r\n                     })\r\n                  })\r\n                  .catch((err) => {\r\n                     console.log('err ::::::::::::::::::',err)\r\n                  })\r\n               // end :- data updated in aws CloudSearch\r\n            }\r\n            setIsSaving(false);\r\n            // setIsChanged(false);\r\n            handleClose();\r\n         } catch (e) {\r\n            setIsSaving(false);\r\n         }\r\n      }else{\r\n         setError(true)\r\n         setErrorMessage('Atleast one Keyword is required')\r\n      }\r\n\r\n   });\r\n\r\n   const onClearAll = () => {\r\n      setTags([]);\r\n   };\r\n  \r\n   const onTagUpdate = (i, newTag) => {\r\n      const updatedTags = tags.slice();\r\n      updatedTags.splice(i, 1, newTag);\r\n      setTags(updatedTags);\r\n   };\r\n\r\n   const handleClickLink = (link, course) => {\r\n      location.state = {courseData: course};\r\n      location.pathname = link;\r\n      history.push(location);\r\n   };\r\n   return (\r\n      <>\r\n         <Modal\r\n            open={addNew}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n         >\r\n            <div style={modalStyle} className={classes.paper} >\r\n               <Form onSubmit={() =>  handleSubmit(editValues.id ? 'edit' : null) } className={classes.formStyle} encType={'multipart/form-data'}>\r\n                  <h2> { editValues.id ? 'Edit Course' : 'Add Course' } </h2>\r\n                  <Grid name={'Course Edit Root'} item fullWidth className={classes.infoRootStyle}>\r\n                     <Grid name={'Course Edit Inner'} container item fullWidth className={classes.infoInnerStyle}>\r\n                        <TypographyFHG variant={'h5'} id={'lms.title.label'} color={'textSecondary'} gutterBottom />\r\n                        <TextFieldLF\r\n                           key={'name'}\r\n                           name={'name'}\r\n                           autoFocus={true}\r\n                           labelTemplate={'lms.{name}.label'}\r\n                           onChange={(e) => handleChange(e)}\r\n                           value={editValues.name}\r\n                           required\r\n                        />\r\n                        <TextAreaField\r\n                           key={'description'}\r\n                           name={'description'}\r\n                           labelTemplate={'lms.{name}.label'}\r\n                           onChange={(e) => handleChange(e)}\r\n                           value={editValues.description}\r\n                           required\r\n                        />\r\n                        <fieldset aria-hidden=\"true\" className={classes.textAreaEditor} ><legend  className={classes.legendColor}><span>Keywords&nbsp;*</span></legend>\r\n                           <div >\r\n                              {/* <ReactTags\r\n                                 handleDelete={handleDelete}\r\n                                 handleAddition={handleAddition}\r\n                                 handleDrag={handleDrag}\r\n                                 handleTagClick={handleTagClick}\r\n                                 delimiters={delimiters}\r\n                                 onClearAll={onClearAll}\r\n                                 suggestions={suggestions}\r\n                                 onTagUpdate={onTagUpdate}\r\n                                 placeholder=\"Add Keywords...\"\r\n                                 // minQueryLength={2}\r\n                                 // maxLength={5}\r\n                                 autofocus={false}\r\n                                 allowDeleteFromEmptyInput={true}\r\n                                 autocomplete={true}\r\n                                 readOnly={false}\r\n                                 allowUnique={true}\r\n                                 allowDragDrop={true}\r\n                                 inline={true}\r\n                                 allowAdditionFromPaste={true}\r\n                                 editable={true}\r\n                                 clearAll={true}\r\n                                 tags={tags}\r\n                              /> */}\r\n                              <ReactTags\r\n                                 tags={tags}\r\n                                 suggestions={suggestions}\r\n                                 onDelete={handleDelete}\r\n                                 onAddition={handleAddition}\r\n                                 allowNew\r\n                                 allowBackspace={false}\r\n                                 removeButtonText=\"Click to remove keyword\"\r\n                                 placeholder=\"Add Keywords...\"\r\n                                 minQueryLength={1}\r\n                              />\r\n                              <ButtonFHG\r\n                                 variant='text'\r\n                                 size={'large'}\r\n                                 className={classes.clearAll}\r\n                                 labelKey={'clear.all'}\r\n                                 onClick={() => onClearAll()}\r\n                              />\r\n                           </div>\r\n                           {error &&\r\n                              <p className={classes.textDanger}>{errorMessage}</p>\r\n                           }\r\n                        </fieldset>\r\n                        <p className={classes.textDanger}> Note:Use Tab or Enter to separate tags. </p>\r\n                     </Grid>\r\n                  </Grid>\r\n                  <Grid container item direction={'row'} fullWidth className={classes.buttonPanelStyle} justify={'space-between'} overflow={'visible'} resizable={false} alignItems={'center'} >\r\n                     <Grid item>\r\n                        <ProgressButton\r\n                           isProgress={isSaving}\r\n                           variant='text'\r\n                           color='primary'\r\n                           type={'submit'}\r\n                           size='large'\r\n                           labelKey='save.label'\r\n                           disabled={isSaving}\r\n                        />\r\n                        <ButtonFHG\r\n                           variant='text'\r\n                           size={'large'}\r\n                           labelKey={'cancel.button'}\r\n                           disabled={isSaving}\r\n                           onClick={() => handleClose()}\r\n                        />\r\n                     </Grid>\r\n                  </Grid>\r\n               </Form>\r\n            </div>\r\n         </Modal>\r\n         <Grid container fullWidth fullHeight className={classes.frameStyle} direction={'row'} overflow={'visible'} wrap={'nowrap'} >\r\n            <Grid item fullHeight resizable={false}>\r\n               <ResponsiveMobileDrawer\r\n                  backgroundColor={theme.palette.background.default}\r\n                  width={ADMIN_DRAWER}\r\n                  ModalProps={{BackdropProps: {style: {height: '100%', marginTop: APPBAR_SMALL_HEIGHT}}}}\r\n               >\r\n                  <Grid item fullWidth className={classes.drawerStyle}>\r\n                     {/* <Grid container item resizable={false} direction={'row'}>\r\n                        <Grid item resizable={false} className={classes.infoInnerStyle}>\r\n                           <TypographyFHG variant={'h5'} id={'lms.course'} color={'textSecondary'} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                           <ButtonFHG labelKey='lms.course.button' startIcon={<Add />} onClick={handleNewUser} />\r\n                        </Grid>\r\n                     </Grid> */}\r\n                     {/* <Grid isScrollable className={classes.root}> */}\r\n                     <Grid isScrollable container direction={'row'} justify={'flex-start'} fullHeight className={classes.innerGridStyle}>\r\n                        <TreeView\r\n                           className={classes.treeStyle}\r\n                           expanded={expanded}\r\n                           disableSelection\r\n                           defaultCollapseIcon={<ArrowDropDownIcon style={{fontSize: 28}} />}\r\n                           defaultExpandIcon={<ArrowRightIcon style={{fontSize: 28}} />}\r\n                           defaultEndIcon={<div style={{width: 24}} />}\r\n                           onNodeToggle={handleNodeToggle}\r\n                        >\r\n                           <div style={{position: 'relative', width: TREE_CONTENT_WIDTH}}>\r\n                              <ButtonFHG\r\n                                 startIcon={<Add />}\r\n                                 // onClick={handleNewUser}\r\n                                 onClick={() => setAddNew(addNew => !addNew) }\r\n                                 labelKey={'lms.course.button'}\r\n                                 className={classes.buttonStyle}\r\n                              />\r\n                              <StyledTreeItem nodeId='course' labelText={'Course'} className={classes.titleStyle}>\r\n                                 {sortedCourses.map((course) => (\r\n                                    <>\r\n                                       <Grid container direction={'row'} justify={'space-between'} className={classes.fadeArea}>\r\n                                          <Grid xs={9} item>\r\n                                             <TypographyFHG \r\n                                                variant='subtitle1' \r\n                                                color={'textPrimary'} \r\n                                                // component={Link}\r\n                                                // button\r\n                                                onClick={() => handleClickLink(`/admin/course/${course.id}`, course)}\r\n                                                // to={`/admin/course/${course.id}`}\r\n                                                selected={courseId === course.id}\r\n                                                className={classes.treeLabelStyle}\r\n                                             >\r\n                                                {course.name}\r\n                                             </TypographyFHG>\r\n                                          </Grid>\r\n                                          <Grid  xs={3} className={classes.textRight} item>\r\n                                             <ConfirmIconButton\r\n                                                className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\r\n                                                onConfirm={(e) => handleDeleteCourse(e, course)}\r\n                                                values={{type: 'course', name: course.name}}\r\n                                                messageKey={'confirmRemoveValue.message'}\r\n                                                buttonLabelKey={'delete.button'}\r\n                                                size={'small'}\r\n                                                submitStyle={classes.deleteColorStyle}\r\n                                                style={{float: 'right'}}\r\n                                                buttonTypographyProps={{\r\n                                                   // float: 'right',\r\n                                                   color: theme.palette.error.dark,\r\n                                                   style: {textDecoration: 'underline'},\r\n                                                }}\r\n                                             >\r\n                                                <Delete fontSize={'small'} />\r\n                                             </ConfirmIconButton>\r\n                                             <IconButton\r\n                                                size={'small'}\r\n                                                // style={{float: 'right'}}\r\n                                                onClick={(e) => handleEditCourse(e, course)}\r\n                                                className={classes.fadeIn}\r\n                                             >\r\n                                                <Edit fontSize={'small'} />\r\n                                             </IconButton>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                    </>\r\n                                 ))}\r\n                              </StyledTreeItem>\r\n                           </div>\r\n                        </TreeView>\r\n                     </Grid>\r\n                  </Grid>\r\n               </ResponsiveMobileDrawer>\r\n            </Grid>\r\n            {/* {location?.state?.edit === COURSE_EDIT && (\r\n               <Grid item container direction={'column'} overflow={'visible'} style={{maxWidth: 480}}>\r\n                  <CourseEdit isAdmin />\r\n               </Grid>\r\n            )} */}\r\n            {location?.state?.id !== courseId && courseId && (\r\n               <Grid item container direction={'column'} overflow={'visible'} style={{maxWidth: 500}}>\r\n                  <Modules isAdmin/>\r\n               </Grid>\r\n            )}\r\n            {/* {location?.state?.edit === MODULE_EDIT &&  (\r\n               <Grid item container direction={'column'} overflow={'visible'} style={{maxWidth: 500}}>\r\n                  <ModulesEdit isAdmin moduleId={location?.state?.id} />\r\n               </Grid>\r\n            )} */}\r\n            {moduleId && (\r\n               <Grid item container direction={'column'} overflow={'visible'} style={{maxWidth: 500}}>\r\n                  <Unit isAdmin moduleId={moduleId} />\r\n               </Grid>\r\n            )}\r\n         </Grid>\r\n      </>\r\n   );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport TextField from '@material-ui/core/TextField';\nimport get from 'lodash/get';\nimport React from 'react';\nimport NumberFormatCustom from '../fhg/components/NumberFormat';\nimport useMessage from '../fhg/hooks/useMessage';\nimport CustomInputTextField from './CustomInputTextField';\nimport ThemeProvider from './ThemeProvider';\n\nconst theme = createMuiTheme({\n   palette: {\n      text: {\n         secondary: '#707070',\n         primary: '#527928',\n      },\n   },\n});\n\n/**\n * The TextField with preset formats.\n\n * @param className\n * @param name\n * @param labelKey\n * @param placeholderKey\n * @param helpKey\n * @param helperText\n * @param defaultValue\n * @param value\n * @param onChange\n * @param margin\n * @param InputLabelProps\n * @param InputProps\n * @param label\n * @param fullWidth\n * @param isFormattedNumber\n * @param variant\n * @param size\n * @param labelTemplate\n * @param editData\n * @param classesProp\n * @param internalKey\n * @param textFieldProps\n * @param placeholder The placeholder for the text component.\n * @return {JSX.Element}\n * @constructor\n */\nexport default function TextFieldLF({\n   className,\n   name,\n   labelKey,\n   placeholderKey,\n   helpKey,\n   helperText,\n   defaultValue,\n   value,\n   onChange,\n   margin = 'normal',\n   InputLabelProps,\n   InputProps,\n   label,\n   fullWidth = true,\n   isFormattedNumber,\n   variant = 'outlined',\n   size = 'small',\n   labelTemplate,\n   editData,\n   classes: classesProp,\n   internalKey,\n   placeholder,\n   ...textFieldProps\n}) {\n   const classes = {...classesProp};\n   const useLabelKey = labelTemplate?.format({name}) || labelKey;\n   const currentLabel = useMessage(useLabelKey, label);\n   const currentPlaceholder = useMessage(placeholderKey) || placeholder;\n   const helpText = useMessage(helpKey, helperText) || helperText;\n\n   const useInputProps = {\n      ...InputProps,\n   };\n\n   if (isFormattedNumber) {\n      if (get(InputProps, 'inputComponent') || get(InputProps, 'inputProps.component')) {\n         console.log('isFormattedNumber cannot have a different input component.', InputProps);\n      }\n      useInputProps.inputComponent = CustomInputTextField;\n      useInputProps.inputProps =\n         {...get(InputProps, 'inputProps', {}), ...(textFieldProps.inputProps || {}), component: NumberFormatCustom};\n   }\n\n   return (\n      <ThemeProvider theme={theme}>\n         <TextField\n            {...textFieldProps}\n            key={'internal' + internalKey}\n            name={name}\n            className={`${classes.textFieldStyle} ${className}`}\n            label={currentLabel}\n            placeholder={currentPlaceholder}\n            helperText={helpText}\n            defaultValue={defaultValue}\n            value={value}\n            onChange={onChange}\n            InputProps={useInputProps}\n            InputLabelProps={{\n               ...InputLabelProps,\n               shrink: true,\n            }}\n            variant={variant}\n            size={size}\n            margin={margin}\n            fullWidth={fullWidth}\n         />\n      </ThemeProvider>\n   );\n}\n","// eslint-disable-next-line\nimport Button, {ButtonProps} from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from './Typography';\n\nconst useStyles = makeStyles(theme => ({\n   spinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: 'white',\n   },\n   darkSpinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: theme.palette.primary.main,\n   },\n}), {name: 'ProgressButtonStyles'});\n\n/**\n * Button Component to show progress.\n *\n * Reviewed:\n */\nProgressButton.propTypes = {\n   isProgress: PropTypes.bool.isRequired, //Indicates if the progress should be showing.\n   labelKey: PropTypes.string,            // Localization key for the button label.\n   typographyProps: PropTypes.any,        // The properties for the typography component.\n   ...Button.propTypes,\n};\n\n/**\n *\n * @param isProgress\n * @param labelKey\n * @param isSpinnerDark Indicates if the spinner should be dark.\n * @param children\n * @param typographyProps\n * @param buttonProperties {ButtonProps}\n * @return {JSX.Element}\n * @constructor\n */\nexport default function ProgressButton({isProgress = false, labelKey, isSpinnerLight = false, children, typographyProps, ...buttonProperties}) {\n   const classes = useStyles();\n\n   return (\n      <Button {...buttonProperties}>\n         {labelKey && (\n            <Typography variant={'inherit'} id={labelKey} {...typographyProps}/>\n         )}\n         {children}\n         {isProgress && <CircularProgress className={buttonProperties?.classes?.spinnerMargin || (!isSpinnerLight ? classes.darkSpinnerMargin : classes.spinnerMargin)} size={15} thickness={2.5}/>}\n      </Button>\n   );\n}\n\n","import PropTypes from 'prop-types';\nimport React, {useRef, useEffect, forwardRef} from 'react';\n\n/**\n * Form component that handles custom validation and removing prevents default for the submit event.\n *\n * Reviewed: 3/26/20\n */\nconst Form = forwardRef(\nfunction Form({onSubmit, onValid, validate, customValidity, reportInvalid, children, ...props}, ref) {\n   const useFormEl = useRef();\n   const formEl = ref || useFormEl;\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    */\n   useEffect(() => {\n      /**\n       * Validate the form data. Calls customValidity if the rest of the form is valid.\n       *\n       * @param isReport True if the validity should be reported.\n       * @return {boolean} True if the form is valid and the custom validity is valid.\n       */\n      const checkValidity = (isReport = true) => {\n         let isValid;\n         let form = formEl.current;\n         if (form) {\n            // noinspection JSUnresolvedFunction\n            isValid = form.checkValidity();\n            if (isValid && customValidity) {\n               isValid = customValidity();\n            }\n            if (!isValid && isReport) {\n               // noinspection JSUnresolvedFunction\n               return form.reportValidity();\n            }\n            return isValid\n         }\n         return true;\n      };\n\n      if (validate && checkValidity(reportInvalid)) {\n         onValid && onValid()\n      }\n   }, [validate, reportInvalid, customValidity, onValid, formEl]);\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    *\n    * @param prevProps\n    * @param prevState\n    * @param snapshot\n    */\n\n   /**\n    * Submits the form data and prevents the default for the submit event.\n    * @param event The submit event.\n    */\n   const submitHandler = (event) => {\n      event && event.preventDefault();\n      event && event.stopPropagation();\n      let form = formEl.current;\n      let isValid = true;\n\n      if (customValidity) {\n         isValid = customValidity();\n      }\n      if (!isValid && reportInvalid) {\n         // noinspection JSUnresolvedFunction\n         return form.reportValidity();\n      }\n\n      if (isValid) {\n         onSubmit && onSubmit(event);\n      }\n   };\n\n   return (\n      <form ref={formEl} onSubmit={submitHandler} {...props} className={props.className}>\n         {children}\n      </form>\n   );\n});\n\nForm.propTypes = {\n   validate: PropTypes.bool,           // True to force validation.\n   reportInvalid: PropTypes.bool,      // True to report when invalid. Can prevent reporting if needed.\n   onValid: PropTypes.func,            // Callback when the form is valid.\n   onSubmit: PropTypes.func,           // Submit callback to submit the form inputs.\n   customValidity: PropTypes.func,     // A validity check from the parent component.\n};\n\nForm.defaultProps = {\n   validate: false,\n   reportInvalid: true,\n};\n\nexport default Form;"],"sourceRoot":""}