{"version":3,"sources":["pages/admin/EntityCard.js","pages/client/ClientEntityTree.js","components/ClientTreeContent.js","components/EstatePlanTreeContent.js","components/StyledTreeItem.js","components/TaskTreeContent.js","components/UserTreeContent.js","components/AdminDrawer.js","pages/admin/ClientSetup.js","pages/admin/AdminMain.js","fhg/utils/DataUtil.js","fhg/hooks/data/useQueryFHG.js","fhg/components/ButtonFHG.js","fhg/hooks/usePageTitle.js","components/ButtonLF.js","fhg/components/ConfirmIconButton.js","components/TextField.js","fhg/components/dialog/ModalDialog.js","fhg/components/NumberFormat.js","components/CustomInputTextField.js","fhg/components/ResponsiveMobileDrawer.js","fhg/components/WebAppBar.js","fhg/hooks/useWidthRule.js","fhg/components/edit/AutocompleteFHG.js","fhg/components/ConfirmMenuItem.js","fhg/components/tree/TreeViewFHG.js","fhg/components/transitions/Collapse.js","fhg/components/tree/TreeGroupFHG.js","fhg/components/tree/TreeItemFHG.js","components/EditDrawer.js"],"names":["useStyles","makeStyles","theme","root","width","dividerStyle","marginBottom","spacing","marginTop","subtitleStyle","position","top","backgroundColor","palette","background","paper","color","fontSize","listItemStyle","name","EntityCard","item","classes","useQueryFHG","FILE_ENTITY_QUERY","variables","clientId","entityId","id","skip","validate","fileData","useMemo","files","useTheme","Grid","fullHeight","style","display","flexDirection","overflow","description","Typography","className","marginRight","ein","Box","alignItems","mb","STATIC_NODE_HEIGHT","padding","headerStyle","cursor","cardStyle","minWidth","minHeight","borderRadius","margin","ClientEntityTree","allowDelete","useParams","history","useHistory","location","useLocation","ENTITY_CLIENT_QUERY","entitiesData","useMutationFHG","ENTITY_DELETE","entityDelete","ENTITY_CREATE_UPDATE","entityCreateUpdate","useState","ROOT_ID","isEditable","hasAdd","height","entities","ACTIVE_ROOT_ID","isActive","PASSIVE_ROOT_ID","rootEntity","setRootEntity","useEffect","length","cloneDeep","entitiesGroupBy","groupBy","Object","entries","childEntities","entitiesGroupByElement","find","console","log","topGroupBy","true","false","handleDelete","entity","a","optimisticResponse","entity_Delete","update","cacheDelete","getEntityCacheQueries","handleMove","droppedItem","parentItem","__typename","isDeleted","usePageTitle","titleKey","TreeViewFHG","treeStyle","expandAll","ContentComponent","labelKey","itemsKey","parentKey","onEdit","state","edit","ENTITY_EDIT","replace","onAdd","parentEntityId","undefined","newEntity","push","onMove","onDelete","ClientTreeContent","client","CLIENT_DELETE","clientDelete","CITY_STATE_QUERY","cityStateData","selectedState","states","stateId","selectedCity","cities","cityId","handleEditClient","event","stopPropagation","preventDefault","CLIENT_EDIT","handleDeleteClient","client_Delete","getClientCacheQueries","ADMIN_PATH","fadeArea","ConfirmIconButton","fadeIn","deleteButtonStyle","onConfirm","values","type","messageKey","buttonLabelKey","size","submitStyle","deleteColorStyle","float","buttonTypographyProps","error","dark","textDecoration","Delete","IconButton","onClick","Edit","variant","treeLabelStyle","addressLineOne","addressLineTwo","gutterBottom","abbreviation","zipCode","phone","email","EstatePlanTreeContent","file","FILE_DELETE","fileDelete","handleDeleteEstatePlan","fileUpload_Delete","getFileCacheQueries","HUSBAND_TAG","WIFE_TAG","container","direction","justify","wrap","Link","href","convertImageToWrapper","rel","target","fileFilename","resizable","useTreeItemStyles","text","secondary","content","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","marginLeft","primary","body1","expanded","selected","label","labelRoot","h6","labelIcon","labelText","flexGrow","actionStyle","default","right","StyledTreeItem","props","nodeId","labelInfo","bgColor","action","children","other","TreeItem","TaskTreeContent","task","TASK_DELETE","taskDelete","handleDeleteTask","task_Delete","getTaskCacheQueries","handleEditTask","TASK_EDIT","subject","UserTreeContent","user","USER_DELETE","userDelete","handleEditUser","USER_EDIT","handleDeleteUser","user_Delete","getUserCacheQueries","contactName","username","HUSBAND_PLAN_NODE","WIFE_PLAN_NODE","USER_NODE","CLIENT_NODE","DEFAULT_EXPANDED","estatePlanState","atom","key","inputStyle","frameStyle","expand","transform","transition","transitions","create","duration","shortest","expandOpen","titleStyle","paddingTop","opacity","lighten","light","main","buttonStyle","zIndex","progressStyle","TREE_CONTENT_WIDTH","AdminDrawer","nodeIdOpen","CLIENT_ALL_QUERY","data","clients","clientIdState","setClientIdState","selectedClient","setSelectedClient","USER_CLIENT_QUERY","userData","TASK_CLIENT_QUERY","taskData","tag","fileUploading","setFileUploading","FILE_CREATE","fileCreate","users","filter","tasks","useRecoilState","hasEstatePlan","setHasEstatePlan","husbandFiles","wifeFiles","setExpanded","uniq","handleNewClient","handleFileChange","filesToAdd","imageKey","Storage","put","level","bucket","FILE_BUCKET","contentType","uuid","fileLocation","BUCKET_NAME","originalFilename","fileS3","cacheAdd","ResponsiveMobileDrawer","ADMIN_DRAWER","ModalProps","BackdropProps","APPBAR_SMALL_HEIGHT","isScrollable","fullWidth","AutocompleteFHG","options","autoFocus","disableClearable","onChange","value","reason","newValue","ADMIN_SETUP_PATH","noOptionsText","inputProps","TreeView","defaultExpanded","disableSelection","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","onNodeToggle","expandedNodeIds","ButtonFHG","startIcon","Add","map","multiple","accept","FILE_MIME_TYPES","htmlFor","Loading","thickness","component","CloudUpload","contentStyle","breakpoints","up","ClientSetup","ClientEdit","lazy","EntityEdit","TaskEdit","UserEdit","Users","LMS","AdminMain","exact","path","ADMIN_USERS_PATH","ADMIN_USER_PATH","ADMIN_COURSES_PATH","ADMIN_COURSE_PATH","EditDrawer","open","onClose","defer","selectEntityId","cacheUpdate","queryList","mutationPathProp","useQueryList","castArray","proxy","queryItem","query","queryPath","mutationPath","resultData","get","cachedData","readQuery","itemIndex","findIndex","arr","writeQuery","e","process","newArray","newData","modifiedList","removeOne","createTable","worksheet","columns","rows","properties","isAccessor","totalsRow","hasGetAccessor","modifiedItem","column","accessor","getAccessor","pick","addTable","ref","headerRow","showRowStripes","createTableLx","tableProps","useColumns","PMT","interestRate","numberOfPeriods","presentValue","futureValue","paymentType","pvif","Math","pow","payment","round","x","isRounding","assign","result","items","forEach","forOwn","typeKey","showGlobalProgress","showLoading","theUniqueId","useRef","uniqueId","current","useProgress","setProgress","useMessage","setErrorState","useSetRecoilState","errorState","useQuery","loading","setProgressGlobal","progressGlobal","stackTrace","errorKey","message","buttonProps","title","intl","useIntl","setTitleStatus","titleStatus","titleValues","document","appTitle","formatMessage","titleLabel","status","propTypes","appTitleKey","PropTypes","string","any","ButtonLF","onCancel","confirmProps","submitColor","buttonProperties","isProgress","isModalOpen","setIsModalOpen","submitKey","onSubmit","hideBackdrop","submitColorStyle","messageValues","TextFieldFHG","placeholderKey","helpKey","helperText","defaultValue","InputLabelProps","InputProps","isFormattedNumber","textFieldProps","currentLabel","currentPlaceholder","helpText","useInputProps","inputComponent","CustomInputTextField","NumberFormatCustom","placeholder","flex","contentStyleNoScroll","paddingLeft","paddingRight","paddingBottom","spinnerMargin","fatButtonStyle","borderBottom","textTransform","innerStyle","noScroll","formStyle","ModalDialog","titleVariant","messageVariant","cancelKey","maxWidth","cancelColorStyle","disableBackdropClick","buttons","contentsScroll","fullScreen","isForm","isSaving","isEnabled","TransitionComponent","handleSubmit","useCallback","handleKey","defaultPrevented","addEventListener","removeEventListener","onKeyDown","disableTypography","titleTypography","hasBold","disabled","isDefaultPrevented","defaultProps","submitLabel","cancelLabel","useCaptureKeydown","inputRef","getInputRef","onValueChange","source","valueAsNumber","floatValue","set","thousandSeparator","Component","React","useImperativeHandle","focus","drawerIsOpenStatus","drawer","DRAWER_WIDTH","flexShrink","drawerPaper","APPBAR_HEIGHT","down","noBorder","borderRight","closeButtonStyle","isDrawerOpen","setIsDrawerOpen","aria-label","mdUp","implementation","anchor","onOpen","PaperProps","paperAnchorDockedLeft","keepMounted","smDown","elevation","titleUrl","subtitleKey","subtitleValues","showTitles","videoId","showSelect","appBar","toolBarStyle","imageStyle","maxHeight","iconStyle","WebAppBar","isSmallWidth","mode","useMediaQuery","useWidthRule","useRecoilValue","userStatus","isAccountMenuOpen","setIsAccountMenuOpen","LinkComponent","Fragment","toProp","to","AppBar","Toolbar","Hidden","edge","alt","src","LOGO","DEFAULT_PATH","xsDown","titleGridStyle","align","noWrap","FormControl","formControl","Select","selectStyle","renderValue","mdDown","disableUnderline","displayEmpty","Auth","signOut","MenuItem","editName","autoComplete","isOptionObjects","optionKey","valueKey","autoHighlight","selectOnFocus","required","onClear","innerValue","setValue","isSet","setIsSet","predicate","isObjectLike","hasValue","freeSolo","onHighlightChange","newValueObject","getOptionLabel","option","renderOption","renderOptionsKey","getOptionSelected","onInputChange","useValue","toLowerCase","found","renderInput","params","messageStyle","snackbarMessageStyle","ConfirmMenuItem","forwardRef","onUndo","menuItemProperties","showUndelete","setShowUndelete","useTitleValues","StartIcon","handleUndoClose","autoHideDuration","UNDO_DURATION","ContentProps","EditComponent","onMoveX","Collapse","useSpring","from","in","div","itemStyle","left","borderTop","TreeGroupFHG","isTopLevel","itemRef","childCount","Children","count","useDrop","ITEM_DRAG_TYPE","drop","render","child","cloneElement","index","alignContent","Divider","orientation","flexItem","PRIMARY_COLOR","moveState","ExpandMore","styled","contentRoot","divider","moveStyle","maskStyle","moveTypeStyle","willChange","userSelect","TreeItemFHG","parent","onHoverX","onUpdateMoveX","groupRef","myRef","isMoveHorizontal","setIsMoveHorizontal","refChild","childItems","setChildItems","array","i","order","handleUpdateMoveX","dragItem","monitor","didDrop","useMove","updatedItems","seat","revertMoveX","useDrag","end","canDrag","collect","isDragging","drag","dragPreview","aDrop","setRefresh","Date","canDrop","dropItem","hover","hoverItem","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverForths","hoverThreeForths","hoverClientX","getClientOffset","isOver","getItem","showExpanded","setShowExpanded","now","refresh","anchorEl","setAnchorEl","foundIndex","indexOf","handleExpand","useLayoutEffect","setTimeout","scrollIntoView","behavior","block","inline","handleHoverX","test","$splice","handleClose","Card","CardHeader","titleTypographyProps","currentTarget","MoreVert","Menu","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","CardContent","CardActions","AddCircle","EDIT_DRAWER_WIDTH","backdropStyle","styleProps","disableEscapeKeyDown"],"mappings":"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","file":"static/js/11.a6af491b.chunk.js","sourcesContent":["import Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {useMemo} from 'react';\nimport React from 'react';\nimport {validate} from 'uuid';\nimport {FILE_ENTITY_QUERY} from '../../data/QueriesGL';\nimport Grid from '../../fhg/components/Grid';\nimport Typography from '../../fhg/components/Typography';\nimport useQueryFHG from '../../fhg/hooks/data/useQueryFHG';\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      root: {\n         width: 300,\n      },\n      dividerStyle: {\n         marginBottom: theme.spacing(0.5),\n         marginTop: theme.spacing(0.5),\n      },\n      subtitleStyle: {\n         position: 'sticky',\n         top: 0,\n         backgroundColor: theme.palette.background.paper,\n         color: 'rgba(0, 0, 0, 0.54)',\n         fontSize: 14,\n      },\n      listItemStyle: {\n         color: 'rgba(0, 0, 0, 0.87)',\n         fontSize: 14,\n      },\n   }),\n   {name: 'EntityCardStyles'}\n);\n\nexport default function EntityCard({item}) {\n   const classes = useStyles();\n   const [fileData] = useQueryFHG(\n      FILE_ENTITY_QUERY,\n      {\n         variables: {clientId: item?.clientId, entityId: item?.id},\n         skip: !validate(item?.clientId) || !validate(item?.id),\n      },\n      'entity.type'\n   );\n   const existingFiles = useMemo(() => fileData?.files, [fileData]);\n   const theme = useTheme();\n\n   return (\n      // <Grid item fullHeight style={{display: 'flex', flexDirection: 'column', height: 'fit-content'}}>\n      <Grid item fullHeight style={{display: 'flex', flexDirection: 'column'}} overflow={'auto'}>\n         {item?.description && (\n            <>\n               <Typography\n                  id={'entity.description.label'}\n                  className={classes.subtitleStyle}\n                  style={{marginRight: theme.spacing(1)}}\n               />\n               <Typography className={classes.listItemStyle}>{item?.description}</Typography>\n            </>\n         )}\n         {item?.ein && (\n            <Box\n               display={'flex'}\n               flexDirection={'row'}\n               alignItems='center'\n               mb={1}\n               style={{backgroundColor: theme.palette.background.paper, position: 'sticky', top: 0}}\n            >\n               {' '}\n               <Typography\n                  id={'entity.ein.label'}\n                  className={classes.subtitleStyle}\n                  style={{marginRight: theme.spacing(1)}}\n               />\n               <Typography className={classes.listItemStyle}>{item?.ein}</Typography>\n            </Box>\n         )}\n      </Grid>\n   );\n}\n","import makeStyles from '@material-ui/core/styles/makeStyles';\nimport cloneDeep from 'lodash/cloneDeep';\nimport find from 'lodash/find';\nimport groupBy from 'lodash/groupBy';\nimport {useState} from 'react';\nimport {useEffect} from 'react';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {useLocation} from 'react-router-dom';\nimport {validate} from 'uuid';\nimport {PASSIVE_ROOT_ID} from '../../Constants';\nimport {ACTIVE_ROOT_ID} from '../../Constants';\nimport {ROOT_ID} from '../../Constants';\nimport {ENTITY_EDIT} from '../../Constants';\nimport {ENTITY_CREATE_UPDATE} from '../../data/QueriesGL';\nimport {ENTITY_DELETE} from '../../data/QueriesGL';\nimport {getEntityCacheQueries} from '../../data/QueriesGL';\nimport {ENTITY_CLIENT_QUERY} from '../../data/QueriesGL';\nimport TreeViewFHG from '../../fhg/components/tree/TreeViewFHG';\nimport useMutationFHG from '../../fhg/hooks/data/useMutationFHG';\nimport useQueryFHG from '../../fhg/hooks/data/useQueryFHG';\nimport usePageTitle from '../../fhg/hooks/usePageTitle';\nimport {cacheDelete} from '../../fhg/utils/DataUtil';\nimport EntityCard from '../admin/EntityCard';\n\nconst STATIC_NODE_HEIGHT = 120;\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      root: {\n         padding: theme.spacing(4, 3),\n      },\n      headerStyle: {\n         padding: theme.spacing(1, 1, 0.5, 1),\n         cursor: 'pointer',\n      },\n      cardStyle: {\n         cursor: 'pointer',\n         marginTop: 12,\n         fontSize: 20,\n         backgroundColor: '#F0F6EA',\n         minWidth: 280,\n         minHeight: 80,\n         borderRadius: 8,\n         margin: 12,\n      },\n   }),\n   {name: 'DashboardStyles'}\n);\n\n/**\n * ClientEntityTree component for the clients. Displays two levels at the client level and at the entity level.\n *\n * Reviewed: 5/28/21\n */\nexport default function ClientEntityTree({allowDelete}) {\n   const {clientId} = useParams();\n   const classes = useStyles();\n   const history = useHistory();\n   const location = useLocation();\n\n   const [entitiesData] = useQueryFHG(ENTITY_CLIENT_QUERY, {variables: {clientId}, skip: !validate(clientId)});\n   const [entityDelete] = useMutationFHG(ENTITY_DELETE);\n   const [entityCreateUpdate] = useMutationFHG(ENTITY_CREATE_UPDATE);\n\n   const [rootEntity, setRootEntity] = useState({\n      id: ROOT_ID,\n      name: 'Legacy Game Plan',\n      isEditable: false,\n      hasAdd: false,\n      height: 220,\n      entities: [\n         {\n            id: ACTIVE_ROOT_ID,\n            name: 'Active',\n            height: STATIC_NODE_HEIGHT,\n            isActive: true,\n            isEditable: false,\n            entities: [],\n         },\n         {\n            id: PASSIVE_ROOT_ID,\n            name: 'Passive Income',\n            height: STATIC_NODE_HEIGHT,\n            isActive: false,\n            isEditable: false,\n            entities: [],\n         },\n      ],\n   });\n\n   useEffect(() => {\n      if (entitiesData?.entities?.length > 0) {\n         const entities = cloneDeep(entitiesData.entities);\n         const entitiesGroupBy = groupBy(entities, 'entityId');\n\n         for (const [id, childEntities] of Object.entries(entitiesGroupBy)) {\n            if (id !== null && id !== 'null') {\n               const entitiesGroupByElement = find(entities, {id});\n\n               if (entitiesGroupByElement) {\n                  entitiesGroupByElement.entities = childEntities;\n               } else {\n                  console.log('Could not find element.', id);\n               }\n            }\n         }\n\n         const topGroupBy = groupBy(entitiesGroupBy['null'], 'isActive');\n         setRootEntity({\n            id: ROOT_ID,\n            name: 'Legacy Game Plan',\n            isEditable: false,\n            hasAdd: false,\n            height: STATIC_NODE_HEIGHT,\n            entities: [\n               {\n                  id: ACTIVE_ROOT_ID,\n                  name: 'Active',\n                  isActive: true,\n                  height: STATIC_NODE_HEIGHT,\n                  isEditable: false,\n                  entities: topGroupBy.true,\n               },\n               {\n                  id: PASSIVE_ROOT_ID,\n                  name: 'Passive Income',\n                  isActive: false,\n                  height: STATIC_NODE_HEIGHT,\n                  isEditable: false,\n                  entities: topGroupBy.false,\n               },\n            ],\n         });\n      }\n   }, [entitiesData?.entities]);\n\n   const handleAdd = (entity) => {\n      const parentEntityId = entity?.id !== ACTIVE_ROOT_ID && entity?.id !== PASSIVE_ROOT_ID ? entity?.id : undefined;\n      const newEntity = {\n         clientId,\n         ein: '',\n         entityId: parentEntityId,\n         isActive: entity?.isActive,\n         isDeleted: false,\n         name: 'Untitled',\n         files: [],\n      };\n\n      if (!entity.entities) {\n         entity.entities = [newEntity];\n      } else {\n         entity.entities.push(newEntity);\n      }\n\n      location.state = {edit: ENTITY_EDIT, parentEntityId, id: undefined, isActive: entity?.isActive};\n      // setDefaultExpanded([entity?.id]);\n      history.replace(location);\n   };\n\n   const handleEdit = (entity) => {\n      location.state = {edit: ENTITY_EDIT, id: entity?.id};\n      history.replace(location);\n   };\n\n   const handleDelete = async (entity) => {\n      if (entity?.id) {\n         await entityDelete({\n            variables: {id: entity?.id},\n            optimisticResponse: {entity_Delete: 1},\n            update: cacheDelete(getEntityCacheQueries(clientId), entity.id),\n         });\n      }\n   };\n\n   const handleMove = async (droppedItem, parentItem) => {\n      if (droppedItem?.id !== parentItem?.id) {\n         try {\n            const entityId =\n               parentItem?.id !== ACTIVE_ROOT_ID && parentItem?.id !== PASSIVE_ROOT_ID ? parentItem?.id : null;\n            let variables = {\n               id: droppedItem?.id,\n               entityId,\n               isActive: parentItem?.isActive,\n            };\n\n            await entityCreateUpdate({\n               variables,\n               optimisticResponse: {\n                  __typename: 'Mutation',\n                  entity: {\n                     __typename: 'Entity',\n                     ...droppedItem,\n                     ...variables,\n                     isDeleted: false,\n                  },\n               },\n            });\n         } catch (e) {\n            //Intentionally left blank\n         }\n      }\n   };\n\n   usePageTitle({titleKey: 'balance.entities.label'});\n\n   return (\n      <TreeViewFHG\n         key={'TreeView' + clientId}\n         className={classes.treeStyle}\n         expandAll={true}\n         ContentComponent={EntityCard}\n         item={rootEntity}\n         labelKey={'name'}\n         itemsKey={'entities'}\n         parentKey={'entityId'}\n         onEdit={handleEdit}\n         onAdd={handleAdd}\n         onMove={handleMove}\n         onDelete={allowDelete ? handleDelete : undefined}\n         height={220}\n         width={260}\n      />\n   );\n}\n","import IconButton from '@material-ui/core/IconButton';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {Edit} from '@material-ui/icons';\nimport {Delete} from '@material-ui/icons';\nimport find from 'lodash/find';\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {CLIENT_EDIT} from '../Constants';\nimport {ADMIN_PATH} from '../Constants';\nimport {CITY_STATE_QUERY} from '../data/QueriesGL';\nimport {CLIENT_DELETE} from '../data/QueriesGL';\nimport {getClientCacheQueries} from '../data/QueriesGL';\nimport ConfirmIconButton from '../fhg/components/ConfirmIconButton';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport useQueryFHG from '../fhg/hooks/data/useQueryFHG';\nimport {cacheDelete} from '../fhg/utils/DataUtil';\nimport {useLocation} from 'react-router-dom';\n\nClientTreeContent.propTypes = {\n   classes: PropTypes.any,\n   client: PropTypes.any,\n};\n\nexport function ClientTreeContent({client, classes}) {\n   const history = useHistory();\n   const location = useLocation();\n   const theme = useTheme();\n\n   const [clientDelete] = useMutationFHG(CLIENT_DELETE);\n   const [cityStateData] = useQueryFHG(CITY_STATE_QUERY, undefined, 'options.type');\n   const selectedState = find(cityStateData?.states, {id: client?.stateId});\n   const selectedCity = find(cityStateData?.cities, {id: client?.cityId});\n\n   const handleEditClient = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      location.state = {edit: CLIENT_EDIT, id: client?.id};\n      history.replace(location);\n   };\n\n   const handleDeleteClient = async (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      await clientDelete({\n         variables: {id: client?.id},\n         optimisticResponse: {client_Delete: 1},\n         update: cacheDelete(getClientCacheQueries(), client?.id),\n      });\n      history.push(ADMIN_PATH);\n   };\n\n   return <>\n      <div className={classes.fadeArea}>\n         <ConfirmIconButton\n            className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\n            onConfirm={handleDeleteClient}\n            values={{type: 'client', name: client.name}}\n            messageKey={'confirmRemoveValue.message'}\n            buttonLabelKey={'delete.button'}\n            size={'small'}\n            submitStyle={classes.deleteColorStyle}\n            style={{float: 'right'}}\n            buttonTypographyProps={{\n               float: 'right',\n               color: theme.palette.error.dark,\n               style: {textDecoration: 'underline'}\n            }}\n         >\n            <Delete fontSize={'small'}/>\n         </ConfirmIconButton>\n         <IconButton size={'small'} style={{float: 'right'}} onClick={handleEditClient}\n                     className={classes.fadeIn}>\n            <Edit fontSize={'small'}/>\n         </IconButton>\n         <TypographyFHG variant='subtitle1' color={'textPrimary'} className={classes.treeLabelStyle}\n                        onClick={handleEditClient}>\n            {client?.name}\n         </TypographyFHG>\n      </div>\n      <TypographyFHG variant='body2' color={'textPrimary'}>\n         {client?.addressLineOne || ''}\n      </TypographyFHG>\n      <TypographyFHG variant='body2' color={'textPrimary'}>\n         {client?.addressLineTwo || ''}\n      </TypographyFHG>\n      {(selectedCity || selectedState) && (\n         <TypographyFHG variant='body2' color={'textPrimary'} gutterBottom>\n            {`${selectedCity?.name || ''}, ${selectedState?.abbreviation ||\n            ''} ${client?.zipCode || ''}`}\n         </TypographyFHG>\n      )}\n      <TypographyFHG variant='body2' color={'textPrimary'}>\n         {client?.phone || ''}\n      </TypographyFHG>\n      <TypographyFHG variant='body2' color={'textPrimary'}>\n         {client?.email || ''}\n      </TypographyFHG>\n   </>;\n}\n","import LinkMUI from '@material-ui/core/Link';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {Delete} from '@material-ui/icons';\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport {useParams} from 'react-router-dom';\nimport {getFileCacheQueries} from '../data/QueriesGL';\nimport {FILE_DELETE} from '../data/QueriesGL';\nimport ConfirmIconButton from '../fhg/components/ConfirmIconButton';\nimport Grid from '../fhg/components/Grid';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport {cacheDelete} from '../fhg/utils/DataUtil';\nimport {convertImageToWrapper} from '../fhg/utils/Utils';\nimport {HUSBAND_TAG, WIFE_TAG} from './AdminDrawer';\n\nEstatePlanTreeContent.propTypes = {\n   classes: PropTypes.any,\n   estatePlan: PropTypes.any,\n};\n\nexport default function EstatePlanTreeContent({file, classes}) {\n   const {clientId} = useParams();\n   const theme = useTheme();\n\n   const [fileDelete] = useMutationFHG(FILE_DELETE);\n\n   const handleDeleteEstatePlan = async (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      if (file.id) {\n         await fileDelete({\n            variables: {id: file.id},\n            optimisticResponse: {fileUpload_Delete: 1},\n            update: cacheDelete(getFileCacheQueries(clientId, undefined, [HUSBAND_TAG, WIFE_TAG]), file.id),\n         });\n      }\n   };\n\n   return <Grid container direction={'row'} justify={'space-between'} className={classes.fadeArea} wrap={'nowrap'}>\n      <Grid item>\n         <LinkMUI href={convertImageToWrapper(file)} rel='noreferrer' target='_blank'>\n            <TypographyFHG variant={'subtitle1'} color={'textPrimary'}>\n               {file?.fileData?.fileFilename}\n            </TypographyFHG>\n         </LinkMUI>\n      </Grid>\n      <Grid item resizable={false}>\n         <ConfirmIconButton\n            className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\n            onConfirm={handleDeleteEstatePlan}\n            values={{type: 'estatePlan', name: file?.fileData?.fileFilename}}\n            messageKey={'confirmRemoveValue.message'}\n            buttonLabelKey={'delete.button'}\n            size={'small'}\n            submitStyle={classes.deleteColorStyle}\n            style={{float: 'right'}}\n            buttonTypographyProps={{\n               color: theme.palette.error.dark,\n               style: {textDecoration: 'underline'}\n            }}\n         >\n            <Delete fontSize={'small'}/>\n         </ConfirmIconButton>\n      </Grid>\n   </Grid>;\n}\n","import makeStyles from '@material-ui/core/styles/makeStyles';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport * as PropTypes from 'prop-types';\nimport Grid from '../fhg/components/Grid';\nimport TypographyFHG from '../fhg/components/Typography';\n\nconst useTreeItemStyles = makeStyles((theme) => ({\n   root: {\n      color: theme.palette.text.secondary,\n      // '&:hover $actionStyle': {\n      //    pointerEvents: 'none'\n      // },\n      '&:hover > $content': {\n         // backgroundColor: theme.palette.action.hover,\n      },\n      '&:focus > $content, &$selected > $content': {\n         // backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\n         // color: 'var(--tree-view-color)',\n      },\n      '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\n         // backgroundColor: 'transparent',\n      },\n      // '&:focus $actionStyle, &:hover $actionStyle, &$selected $actionStyle': {\n      //    backgroundColor: 'transparent',\n      // },\n   },\n   content: {\n      // color: theme.palette.text.secondary,\n      // borderTopRightRadius: theme.spacing(2),\n      // borderBottomRightRadius: theme.spacing(2),\n      // paddingRight: theme.spacing(1),\n      fontWeight: theme.typography.fontWeightMedium,\n      '$expanded > &': {\n         fontWeight: theme.typography.fontWeightRegular,\n      },\n      '& .labelRoot': {\n         fontWeight: theme.typography.fontWeightRegular,\n      },\n   },\n   group: {\n      marginLeft: 0,\n      '& $labelText': {\n         fontWeight: theme.typography.fontWeightRegular,\n         color: theme.palette.text.primary,\n         ...theme.typography.body1,\n      }\n   },\n   expanded: {},\n   selected: {},\n   label: {\n      fontWeight: 'inherit',\n      color: 'inherit',\n      '&:hover': {\n         backgroundColor: 'inherit',\n      },\n   },\n   labelRoot: {\n      padding: theme.spacing(0.5, 0),\n      ...theme.typography.h6,\n   },\n   labelIcon: {\n      marginRight: theme.spacing(1),\n   },\n   labelText: {\n      fontWeight: 'inherit',\n      flexGrow: 1,\n   },\n   actionStyle: {\n      backgroundColor: theme.palette.background.default,\n      // marginTop: -13,\n      // marginBottom: -13,\n      // float: 'right',\n      position: 'absolute',\n      right: 0,\n   }\n}));\n\nexport default function StyledTreeItem(props) {\n   const classes = useTreeItemStyles(props);\n   const {nodeId, labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, action, children, ...other} = props;\n\n   return (\n      <TreeItem\n         nodeId={nodeId}\n         label={\n            <Grid container justify={'space-between'} alignItems={'center'} style={{position: 'relative'}}>\n               <Grid item className={classes.labelRoot}>\n                  {/*<LabelIcon color='inherit' className={classes.labelIcon}/>*/}\n                  <TypographyFHG variant='subtitle1' className={classes.labelText}>\n                     {labelText}\n                  </TypographyFHG>\n                  <TypographyFHG variant='caption' color='inherit'>\n                     {labelInfo}\n                  </TypographyFHG>\n               </Grid>\n               {action && (\n                  <Grid item className={classes.actionStyle}>\n                     {action}\n                  </Grid>\n               )}\n            </Grid>\n         }\n         style={{\n            '--tree-view-color': color,\n            '--tree-view-bg-color': bgColor,\n         }}\n         classes={{\n            root: classes.root,\n            content: classes.content,\n            expanded: classes.expanded,\n            selected: classes.selected,\n            group: classes.group,\n            label: classes.label,\n         }}\n         {...other}\n      >\n         {children}\n      </TreeItem>\n   );\n}\n\nStyledTreeItem.propTypes = {\n   bgColor: PropTypes.string,\n   color: PropTypes.string,\n   labelInfo: PropTypes.string,\n   labelText: PropTypes.string.isRequired,\n};\n","import IconButton from '@material-ui/core/IconButton';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {Edit} from '@material-ui/icons';\nimport {Delete} from '@material-ui/icons';\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport {TASK_EDIT} from '../Constants';\nimport {TASK_DELETE} from '../data/QueriesGL';\nimport {getTaskCacheQueries} from '../data/QueriesGL';\nimport ConfirmIconButton from '../fhg/components/ConfirmIconButton';\nimport Grid from '../fhg/components/Grid';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport {cacheDelete} from '../fhg/utils/DataUtil';\n\nTaskTreeContent.propTypes = {\n   classes: PropTypes.any,\n   task: PropTypes.any,\n};\n\nexport default function TaskTreeContent({task, classes}) {\n   const {clientId} = useParams();\n   const history = useHistory();\n   const location = useLocation();\n   const theme = useTheme();\n\n   const [taskDelete] = useMutationFHG(TASK_DELETE);\n\n   const handleDeleteTask = async (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      await taskDelete({\n         variables: {id: task.id},\n         optimisticResponse: {task_Delete: 1},\n         update: cacheDelete(getTaskCacheQueries(clientId), task.id),\n      });\n   };\n\n   const handleEditTask = event => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n\n      location.state = {edit: TASK_EDIT, id: task.id};\n      history.replace(location);\n   };\n\n   return <Grid container direction={'row'} justify={'space-between'} className={classes.fadeArea} wrap={'nowrap'}>\n      <Grid item>\n         <TypographyFHG variant='subtitle1' color={'textPrimary'} className={classes.treeLabelStyle} onClick={handleEditTask}>\n            {task?.subject}\n         </TypographyFHG>\n      </Grid>\n      <Grid item resizable={false}>\n         <ConfirmIconButton\n            className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\n            onConfirm={handleDeleteTask}\n            values={{type: 'task', name: task?.subject}}\n            messageKey={'confirmRemoveValue.message'}\n            buttonLabelKey={'delete.button'}\n            size={'small'}\n            submitStyle={classes.deleteColorStyle}\n            style={{float: 'right'}}\n            buttonTypographyProps={{\n               color: theme.palette.error.dark,\n               style: {textDecoration: 'underline'}\n            }}\n         >\n            <Delete fontSize={'small'}/>\n         </ConfirmIconButton>\n         <IconButton size={'small'} onClick={handleEditTask} className={classes.fadeIn}>\n            <Edit fontSize={'small'}/>\n         </IconButton>\n      </Grid>\n   </Grid>;\n}\n","import IconButton from '@material-ui/core/IconButton';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {Edit} from '@material-ui/icons';\nimport {Delete} from '@material-ui/icons';\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {USER_EDIT} from '../Constants';\nimport {USER_DELETE} from '../data/QueriesGL';\nimport {getUserCacheQueries} from '../data/QueriesGL';\nimport ConfirmIconButton from '../fhg/components/ConfirmIconButton';\nimport Grid from '../fhg/components/Grid';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport {cacheDelete} from '../fhg/utils/DataUtil';\n\nUserTreeContent.propTypes = {\n   classes: PropTypes.any,\n   onClick: PropTypes.func,\n   user: PropTypes.any,\n   onConfirm: PropTypes.func,\n   theme: PropTypes.any\n};\n\nexport default function UserTreeContent({user, classes}) {\n   const {clientId} = useParams();\n   const history = useHistory();\n   const theme = useTheme();\n   const location = useLocation();\n\n   const [userDelete] = useMutationFHG(USER_DELETE);\n\n   const handleEditUser = event => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      location.state = {edit: USER_EDIT, id: user.id};\n      history.replace(location);\n   };\n\n   const handleDeleteUser = async (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      await userDelete({\n         variables: {id: user.id},\n         optimisticResponse: {user_Delete: 1},\n         update: cacheDelete(getUserCacheQueries(clientId), user.id),\n      });\n   };\n\n   return <Grid container direction={'row'} justify={'space-between'} className={classes.fadeArea}>\n      <Grid item>\n         <TypographyFHG variant='subtitle1' color={'textPrimary'} className={classes.treeLabelStyle}\n                        onClick={handleEditUser}>\n            {user?.contactName || user?.username}\n         </TypographyFHG>\n      </Grid>\n      <Grid item>\n         <ConfirmIconButton\n            className={`${classes.fadeIn} ${classes.deleteButtonStyle}`}\n            onConfirm={handleDeleteUser}\n            values={{type: 'user', name: user.contactName}}\n            messageKey={'confirmRemoveValue.message'}\n            buttonLabelKey={'delete.button'}\n            size={'small'}\n            submitStyle={classes.deleteColorStyle}\n            style={{float: 'right'}}\n            buttonTypographyProps={{\n               color: theme.palette.error.dark,\n               style: {textDecoration: 'underline'}\n            }}\n         >\n            <Delete fontSize={'small'}/>\n         </ConfirmIconButton>\n         <IconButton size={'small'}\n                     onClick={handleEditUser}\n                     className={classes.fadeIn}>\n            <Edit fontSize={'small'}/>\n         </IconButton>\n      </Grid>\n   </Grid>;\n}\n","import {IconButton} from '@material-ui/core';\nimport {lighten} from '@material-ui/core/styles';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {CloudUpload} from '@material-ui/icons';\nimport {Add} from '@material-ui/icons';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport TreeView from '@material-ui/lab/TreeView';\nimport {Storage} from 'aws-amplify';\nimport find from 'lodash/find';\nimport uniq from 'lodash/uniq';\nimport * as PropTypes from 'prop-types';\nimport {useMemo} from 'react';\nimport {useState} from 'react';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {useLocation} from 'react-router-dom';\nimport {useRecoilState} from 'recoil';\nimport {atom} from 'recoil';\nimport {FILE_BUCKET} from '../Constants';\nimport {CLIENT_EDIT} from '../Constants';\nimport {USER_EDIT} from '../Constants';\nimport {TASK_EDIT} from '../Constants';\nimport {BUCKET_NAME} from '../Constants';\nimport {FILE_MIME_TYPES} from '../Constants';\nimport {ADMIN_SETUP_PATH} from '../Constants';\nimport {APPBAR_SMALL_HEIGHT} from '../Constants';\nimport {ADMIN_DRAWER} from '../Constants';\nimport {FILE_ENTITY_QUERY} from '../data/QueriesGL';\nimport {FILE_CREATE} from '../data/QueriesGL';\nimport {getFileCacheQueries} from '../data/QueriesGL';\nimport {TASK_CLIENT_QUERY} from '../data/QueriesGL';\nimport {USER_CLIENT_QUERY} from '../data/QueriesGL';\nimport {CLIENT_ALL_QUERY} from '../data/QueriesGL';\nimport ButtonFHG from '../fhg/components/ButtonFHG';\nimport AutocompleteFHG from '../fhg/components/edit/AutocompleteFHG';\nimport Grid from '../fhg/components/Grid';\nimport Loading from '../fhg/components/Loading';\nimport ResponsiveMobileDrawer from '../fhg/components/ResponsiveMobileDrawer';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport useQueryFHG from '../fhg/hooks/data/useQueryFHG';\nimport {useEffect} from 'react';\nimport {cacheAdd} from '../fhg/utils/DataUtil';\nimport {ClientTreeContent} from './ClientTreeContent';\nimport EstatePlanTreeContent from './EstatePlanTreeContent';\nimport StyledTreeItem from './StyledTreeItem';\nimport TaskTreeContent from './TaskTreeContent';\nimport UserTreeContent from './UserTreeContent';\nimport filter from 'lodash/filter';\nimport {v4 as uuid, validate} from 'uuid';\n\nexport const ESTATE_PLAN_NODE = 'estatePlan';\nexport const HUSBAND_PLAN_NODE = 'husbandPlan';\nexport const WIFE_PLAN_NODE = 'wifePlan';\nexport const TASK_NODE = 'tasks';\nexport const USER_NODE = 'users';\nexport const CLIENT_NODE = 'client';\nconst DEFAULT_EXPANDED = [CLIENT_NODE, USER_NODE];\n\nexport const estatePlanState = atom({\n   key: 'estatePlanState',\n   default: false,\n});\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      inputStyle: {\n         backgroundColor: theme.palette.background.default,\n      },\n      frameStyle: {\n         padding: theme.spacing(4, 2),\n      },\n      expand: {\n         transform: 'rotate(0deg)',\n         marginLeft: 'auto',\n         transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n         }),\n      },\n      expandOpen: {\n         transform: 'rotate(180deg)',\n      },\n      titleStyle: {\n         paddingTop: theme.spacing(2),\n         // position: 'relative',\n      },\n      fadeArea: {\n         '&:hover $fadeIn': {\n            opacity: 1,\n         },\n      },\n      fadeIn: {\n         opacity: 0,\n      },\n      labelRoot: {\n         '&:hover $fadeIn': {\n            opacity: 1,\n         },\n      },\n      deleteColorStyle: {\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\n         '&:hover': {\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\n         },\n      },\n      deleteButtonStyle: {\n         '&:hover': {\n            color: theme.palette.error.main,\n         },\n      },\n      buttonStyle: {\n         height: 42,\n         backgroundColor: '#F4F4F4',\n         position: 'absolute',\n         right: 0,\n         top: 16,\n         zIndex: 1000,\n      },\n      treeLabelStyle: {\n         cursor: 'pointer',\n         '&:hover': {\n            textDecoration: 'underline',\n         },\n      },\n      progressStyle: {},\n   }),\n   {name: 'AdminDrawerStyles'}\n);\n\nexport const WIFE_TAG = 'wife';\nexport const HUSBAND_TAG = 'husband';\n\nconst TREE_CONTENT_WIDTH = 260;\n\nexport default function AdminDrawer() {\n   const {clientId} = useParams();\n   const classes = useStyles();\n   const history = useHistory();\n   const theme = useTheme();\n\n   const location = useLocation();\n   const nodeIdOpen = location?.state?.nodeIdOpen;\n\n   const [data] = useQueryFHG(CLIENT_ALL_QUERY, undefined, 'client.type');\n\n   const clients = useMemo(() => data?.clients || [], [data]);\n   const [clientIdState, setClientIdState] = useState(clientId);\n   const [selectedClient, setSelectedClient] = useState();\n\n   const [userData] = useQueryFHG(\n      USER_CLIENT_QUERY,\n      {variables: {clientId: clientIdState}, skip: !validate(clientIdState)},\n      'user.type'\n   );\n   const [taskData] = useQueryFHG(\n      TASK_CLIENT_QUERY,\n      {variables: {clientId: clientIdState}, skip: !validate(clientIdState)},\n      'task.type'\n   );\n   const [fileData] = useQueryFHG(\n      FILE_ENTITY_QUERY,\n      {variables: {clientId, tag: [HUSBAND_TAG, WIFE_TAG]}, skip: !validate(clientId)},\n      'entity.type'\n   );\n   const [fileUploading, setFileUploading] = useState();\n\n   const [fileCreate] = useMutationFHG(FILE_CREATE);\n\n   const users = useMemo(() => filter(userData?.users || [], (user) => !!user?.username), [userData?.users]);\n   const tasks = useMemo(() => taskData?.tasks || [], [taskData?.tasks]);\n\n   const [hasEstatePlan, setHasEstatePlan] = useRecoilState(estatePlanState);\n   const husbandFiles = useMemo(() => filter(fileData?.files, {tag: HUSBAND_TAG}), [fileData]);\n   const wifeFiles = useMemo(() => filter(fileData?.files, {tag: WIFE_TAG}), [fileData]);\n\n   const [expanded, setExpanded] = useState(DEFAULT_EXPANDED);\n\n   useEffect(() => {\n      if (!hasEstatePlan && (husbandFiles?.length > 0 || wifeFiles?.length > 0)) {\n         setHasEstatePlan(true);\n      }\n   }, [husbandFiles, wifeFiles, hasEstatePlan, setHasEstatePlan]);\n\n   useEffect(() => {\n      if (nodeIdOpen) {\n         setExpanded((expanded) => uniq([...expanded, nodeIdOpen]));\n         location.state = undefined;\n         history.replace(location);\n      }\n   }, [nodeIdOpen, setExpanded, location, history]);\n\n   useEffect(() => {\n      setClientIdState(clientId);\n      setSelectedClient(clientId ? find(clients, {id: clientId}) : undefined);\n   }, [clientId, clients]);\n\n   const handleChange = (event, value, reason, newValue, name) => {\n      setClientIdState(newValue[name]);\n      history.push(ADMIN_SETUP_PATH.replace(':clientId?', newValue[name]));\n   };\n\n   const handleNewClient = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      location.state = {edit: CLIENT_EDIT};\n      history.replace(location);\n   };\n\n   const handleNewUser = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      location.state = {edit: USER_EDIT};\n      history.replace(location);\n   };\n\n   const handleNewTask = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      location.state = {edit: TASK_EDIT};\n      history.replace(location);\n   };\n\n   const handleNodeToggle = (event, expandedNodeIds) => {\n      setExpanded(expandedNodeIds);\n   };\n\n   /**\n    * When the list of files is changed, add the files to be uploaded.\n    * @param tag The tag for the file.\n    */\n   const handleFileChange = (tag) => async (event) => {\n      const filesToAdd = event.target.files;\n      // setNewFiles([...newFiles, ...filesToAdd]);\n\n      if (filesToAdd?.length > 0) {\n         setFileUploading(tag);\n         setExpanded((expanded) => uniq([...expanded, tag === HUSBAND_TAG ? HUSBAND_PLAN_NODE : WIFE_PLAN_NODE]));\n\n         try {\n            for (const file of filesToAdd) {\n               const imageKey = `upload/${file.name}`;\n               await Storage.put(imageKey, file, {level: 'public', bucket: FILE_BUCKET, contentType: file.type});\n               const variables = {\n                  id: uuid(),\n                  tag,\n                  clientId,\n                  fileLocation: `${BUCKET_NAME}/${imageKey}`,\n                  originalFilename: file.name,\n               };\n\n               await fileCreate({\n                  variables,\n                  optimisticResponse: {\n                     __typename: 'Mutation',\n                     file: {\n                        __typename: 'FileUpload',\n                        id: variables.id,\n                        clientId,\n                        entityId: '',\n                        tag,\n                        fileData: {\n                           id: uuid(),\n                           fileFilename: file.name,\n                           fileS3: '',\n                           __typename: 'FileData',\n                        },\n                     },\n                  },\n                  update: cacheAdd(getFileCacheQueries(clientId, undefined, [HUSBAND_TAG, WIFE_TAG]), 'file'),\n               });\n            }\n         } finally {\n            setFileUploading(undefined);\n         }\n         location.state = {nodeIdOpen: tag === HUSBAND_TAG ? HUSBAND_PLAN_NODE : WIFE_PLAN_NODE};\n         history.replace(location);\n      }\n   };\n\n   return (\n      <ResponsiveMobileDrawer\n         backgroundColor={theme.palette.background.default}\n         width={ADMIN_DRAWER}\n         ModalProps={{BackdropProps: {style: {marginTop: APPBAR_SMALL_HEIGHT}}}}\n      >\n         <Grid container isScrollable fullWidth className={classes.frameStyle}>\n            <Grid item fullWidth>\n               <AutocompleteFHG\n                  name={'clientId'}\n                  labelKey={'setup.client.label'}\n                  options={clients}\n                  autoFocus={false}\n                  disableClearable\n                  onChange={handleChange}\n                  value={clientIdState}\n                  variant='standard'\n                  noOptionsText={\n                     <div>\n                        <div>No Clients.</div>\n                        <div>Create a new client.</div>\n                     </div>\n                  }\n                  inputProps={{style: {backgroundColor: theme.palette.background.default}}}\n               />\n               {selectedClient ? (\n                  <Grid container direction={'row'} justify={'flex-start'} fullHeight>\n                     <TreeView\n                        className={classes.treeStyle}\n                        defaultExpanded={DEFAULT_EXPANDED}\n                        expanded={expanded}\n                        disableSelection\n                        defaultCollapseIcon={<ArrowDropDownIcon style={{fontSize: 28}} />}\n                        defaultExpandIcon={<ArrowRightIcon style={{fontSize: 28}} />}\n                        defaultEndIcon={<div style={{width: 24}} />}\n                        onNodeToggle={handleNodeToggle}\n                     >\n                        <div style={{position: 'relative', width: TREE_CONTENT_WIDTH}}>\n                           <ButtonFHG\n                              startIcon={<Add />}\n                              onClick={handleNewClient}\n                              labelKey={'client.new.button'}\n                              className={classes.buttonStyle}\n                           />\n                           <StyledTreeItem nodeId={CLIENT_NODE} labelText={'Client'} className={classes.titleStyle}>\n                              <ClientTreeContent classes={classes} client={selectedClient} />\n                           </StyledTreeItem>\n                        </div>\n                        <div style={{position: 'relative', width: TREE_CONTENT_WIDTH}}>\n                           <ButtonFHG\n                              labelKey='user.new.button'\n                              startIcon={<Add />}\n                              className={classes.buttonStyle}\n                              onClick={handleNewUser}\n                           />\n                           <StyledTreeItem nodeId={USER_NODE} labelText='Users' className={classes.titleStyle}>\n                              {users.map((user) => (\n                                 <UserTreeContent key={'User ' + user?.id} classes={classes} user={user} />\n                              ))}\n                           </StyledTreeItem>\n                        </div>\n                        <div style={{position: 'relative', width: TREE_CONTENT_WIDTH}}>\n                           <ButtonFHG\n                              labelKey='task.new.button'\n                              startIcon={<Add />}\n                              className={classes.buttonStyle}\n                              onClick={handleNewTask}\n                           />\n                           <StyledTreeItem nodeId={TASK_NODE} labelText='Tasks' className={classes.titleStyle}>\n                              {tasks.map((task) => (\n                                 <TaskTreeContent key={'Task ' + task?.id} classes={classes} task={task} />\n                              ))}\n                           </StyledTreeItem>\n                        </div>\n                        <div style={{position: 'relative', width: TREE_CONTENT_WIDTH}}>\n                           {(hasEstatePlan || husbandFiles?.length > 0 || wifeFiles?.length > 0) && (\n                              <StyledTreeItem\n                                 nodeId={ESTATE_PLAN_NODE}\n                                 labelText='Estate Plan'\n                                 className={classes.titleStyle}\n                              >\n                                 <StyledTreeItem\n                                    nodeId={HUSBAND_PLAN_NODE}\n                                    labelText=\"Husband's Plan\"\n                                    className={classes.titleStyle}\n                                    action={\n                                       <>\n                                          <input\n                                             key={'fileInputHusband'}\n                                             id='husbandUploadId'\n                                             type='file'\n                                             style={{display: 'none'}}\n                                             multiple\n                                             onChange={handleFileChange(HUSBAND_TAG)}\n                                             accept={`${[...FILE_MIME_TYPES]}`}\n                                          />\n                                          <label htmlFor='husbandUploadId'>\n                                             {fileUploading === HUSBAND_TAG ? (\n                                                <Loading\n                                                   size={25}\n                                                   thickness={3}\n                                                   classes={{progressStyle: classes.progressStyle}}\n                                                />\n                                             ) : (\n                                                <IconButton color='primary' component='span'>\n                                                   <CloudUpload />\n                                                </IconButton>\n                                             )}\n                                          </label>\n                                       </>\n                                    }\n                                 >\n                                    {husbandFiles.map((file) => (\n                                       <EstatePlanTreeContent key={'File ' + file?.id} classes={classes} file={file} />\n                                    ))}\n                                 </StyledTreeItem>\n                                 <StyledTreeItem\n                                    nodeId={WIFE_PLAN_NODE}\n                                    labelText=\"Wife's Plan\"\n                                    className={classes.titleStyle}\n                                    action={\n                                       <>\n                                          <input\n                                             key={'fileInputWife'}\n                                             id='wifeUploadId'\n                                             type='file'\n                                             style={{display: 'none'}}\n                                             multiple\n                                             onChange={handleFileChange(WIFE_TAG)}\n                                             accept={`${[...FILE_MIME_TYPES]}`}\n                                          />\n                                          <label htmlFor='wifeUploadId'>\n                                             {fileUploading === WIFE_TAG ? (\n                                                <Loading\n                                                   size={20}\n                                                   thickness={3}\n                                                   classes={{progressStyle: classes.progressStyle}}\n                                                />\n                                             ) : (\n                                                <IconButton color='primary' component='span'>\n                                                   <CloudUpload />\n                                                </IconButton>\n                                             )}\n                                          </label>\n                                       </>\n                                    }\n                                 >\n                                    {wifeFiles.map((file) => (\n                                       <EstatePlanTreeContent key={'File ' + file?.id} classes={classes} file={file} />\n                                    ))}\n                                 </StyledTreeItem>\n                              </StyledTreeItem>\n                           )}\n                        </div>\n                     </TreeView>\n                  </Grid>\n               ) : (\n                  <ButtonFHG\n                     labelKey='client.new.button'\n                     startIcon={<Add />}\n                     onClick={handleNewClient}\n                     style={{height: 42, backgroundColor: '#F4F4F4', borderRadius: 0}}\n                  />\n               )}\n            </Grid>\n         </Grid>\n      </ResponsiveMobileDrawer>\n   );\n}\n\nAdminDrawer.propTypes = {\n   replaceValue: PropTypes.any,\n   location: PropTypes.any,\n   onClick: PropTypes.func,\n};\n","import makeStyles from '@material-ui/core/styles/makeStyles';\nimport React from 'react';\nimport AdminDrawer from '../../components/AdminDrawer';\nimport Grid from '../../fhg/components/Grid';\nimport usePageTitle from '../../fhg/hooks/usePageTitle';\nimport ClientEntityTree from '../client/ClientEntityTree';\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      root: {\n         display: 'flex',\n         height: '100%',\n      },\n      contentStyle: {\n         position: 'relative',\n         padding: theme.spacing(4, 3),\n         [theme.breakpoints.up('md')]: {\n            padding: `${theme.spacing(2)}px 3px`,\n         },\n         overflow: 'auto',\n         maxHeight: '100%',\n      },\n   }),\n   {name: 'ClientSetupStyles'}\n);\n\n/**\n * Main component accessible only if the user has been authenticated. Contains the routing for the application.\n *\n * Reviewed:\n */\nexport default function ClientSetup() {\n   const classes = useStyles();\n\n   usePageTitle({titleKey: 'client.title.label'});\n\n   return (\n      <Grid container className={classes.root} fullHeight>\n         <Grid name='DrawerGrid' item container resizable={false} fullHeight fullWidth={false} direction={'column'}>\n            <AdminDrawer />\n         </Grid>\n         <Grid name='ContentGrid' container item resizable className={classes.contentStyle}>\n            <ClientEntityTree allowDelete={true} />\n         </Grid>\n      </Grid>\n   );\n}\n","import {defer} from 'lodash';\nimport {lazy} from 'react';\nimport React, {Fragment} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {useHistory} from 'react-router-dom';\nimport {Switch, Route} from 'react-router-dom';\nimport EditDrawer from '../../components/EditDrawer';\nimport {CLIENT_EDIT} from '../../Constants';\nimport {ENTITY_EDIT} from '../../Constants';\nimport {TASK_EDIT} from '../../Constants';\nimport {USER_EDIT} from '../../Constants';\nimport {ADMIN_USERS_PATH} from '../../Constants';\nimport {ADMIN_USER_PATH} from '../../Constants';\nimport {ADMIN_SETUP_PATH} from '../../Constants';\nimport {ADMIN_PATH} from '../../Constants';\nimport { ADMIN_COURSES_PATH, ADMIN_COURSE_PATH } from '../../Constants';\nimport ClientSetup from './ClientSetup';\n\nconst ClientEdit = lazy(() => import('../../components/ClientEdit'));\nconst EntityEdit = lazy(() => import('../../components/EntityEdit'));\nconst TaskEdit = lazy(() => import('../../components/TaskEdit'));\nconst UserEdit = lazy(() => import('../../components/UserEdit'));\nconst Users = lazy(() => import('../../components/Users'));\nconst LMS = lazy(() => import('../../fhg/Lms'));\n\n/**\n * Main component accessible only if the user has been authenticated as an admin. Contains the routing for the admin\n * paths.\n *\n * Reviewed:\n */\nexport default function AdminMain() {\n   const history = useHistory();\n   const {entityId} = useParams();\n   const location = useLocation();\n   const parentEntityId = !entityId && location?.state?.parentEntityId;\n   const isActive = !entityId && location?.state?.isActive;\n\n   const handleClose = () => {\n      defer(() => {\n         location.state = {selectEntityId: parentEntityId, isActive};\n         history.push(location);\n      })\n   };\n\n   return (\n      <Fragment>\n         <Switch>\n            <Route exact path={[ADMIN_USERS_PATH, ADMIN_USER_PATH]}>\n               <Users/>\n            </Route>\n            <Route exact path={[ADMIN_COURSES_PATH, ADMIN_COURSE_PATH]}>\n               <LMS />\n            </Route>\n            <Route exact path={[ADMIN_PATH, ADMIN_SETUP_PATH]}>\n               <ClientSetup/>\n               {location?.state?.edit && (\n                  <EditDrawer open={true} onClose={(location?.state?.edit === ENTITY_EDIT) && handleClose}>\n                     {{\n                        [USER_EDIT]: <UserEdit/>,\n                        [TASK_EDIT]: <TaskEdit/>,\n                        [ENTITY_EDIT]: <EntityEdit/>,\n                        [CLIENT_EDIT]: <ClientEdit/>,\n                     }[location?.state?.edit]}\n                  </EditDrawer>\n               )}\n            </Route>\n         </Switch>\n      </Fragment>\n   );\n}\n\n","import {forEach} from 'lodash';\nimport {forOwn} from 'lodash';\nimport {pick} from 'lodash';\nimport get from 'lodash/get';\nimport values from 'lodash/values';\nimport castArray from 'lodash/castArray';\nimport findIndex from 'lodash/findIndex';\nimport map from 'lodash/map';\nimport {removeOne} from './Utils';\n\n/**\n * Update the cache for the list of queries. The query list will have the query, the variables, and the\n * queryPath(optional). If the queryPath isn't specified, the mutationPath will be used\n *\n * @param queryList the list of queries to update. (e.g. {query, variables, queryPath})\n * @param id of the item to update.\n * @param mutationPathProp Property name for the property to update coming back from the mutation.\n * @return {function: void} The function for update.\n */\nexport const cacheUpdate = (queryList, id, mutationPathProp) => {\n   const useQueryList = castArray(queryList);\n\n   if (id !== undefined) {\n      return (proxy, {data}) => {\n         for (const queryItem of useQueryList) {\n            const {query, variables, queryPath = mutationPathProp, mutationPath = mutationPathProp} = queryItem;\n            const resultData = get(data, mutationPath);\n            try {\n               const cachedData = proxy.readQuery({query, variables});\n               const itemIndex = findIndex(cachedData[queryPath], {id});\n               let arr;\n\n               if (itemIndex >= 0) {\n                  arr = [...cachedData[queryPath]];\n                  arr[itemIndex] = resultData;\n               } else {\n                  arr = [...(cachedData[queryPath] || []), resultData];\n               }\n               proxy.writeQuery({query, variables, data: {...cachedData, [queryPath]: arr}});\n            } catch (e) {\n               if (process.env.NODE_ENV !== 'production') {\n                  console.log('Failed to update cache.', e);\n               }\n            }\n         }\n      }\n   } else {\n      return cacheAdd(useQueryList, mutationPathProp);\n   }\n};\n\n/**\n * Add the new item to the cache for the list of queries. The query list will have the query, the variables, and the\n * queryPath(optional). If the queryPath isn't specified, the mutationPath will be used\n *\n * @param queryList the list of queries to add the result item. (e.g. {query, variables, queryPath})\n * @param mutationPath Property name resulting object being updated.\n * @return {function: void} The function for the update.\n */\nexport const cacheAdd = (queryList, mutationPath) => {\n   const useQueryList = castArray(queryList);\n\n   return (proxy, {data}) => {\n      for (const queryItem of useQueryList) {\n         const {query, variables, queryPath = mutationPath} = queryItem;\n\n         const resultData = get(data, mutationPath);\n         // Read the data from our cache for this query.\n         const cachedData = proxy.readQuery({query, variables});\n         // Write our data back to the cache with the new comment in it\n         const newArray = [...(cachedData[queryPath] || []), resultData];\n         const newData = {...cachedData, [queryPath]: newArray};\n         proxy.writeQuery({query, variables, data: newData});\n      }\n   };\n}\n\n/**\n * Delete the item add the id from the cache for the list of queries. The query list will have the query, the\n * variables, and the queryPath(optional). If the queryPath isn't specified, the path will be used.\n *\n * @param queryList the list of queries to delete the item at id. (e.g. {query, variables, queryPath})\n * @param id The id of the item to delete in the cache.\n * @param path Property name resulting object being updated.\n * @return {function: void} Function for update.\n */\nexport const cacheDelete = (queryList, id, path) => {\n   const useQueryList = castArray(queryList);\n\n   return (proxy) => {\n      for (const queryItem of useQueryList) {\n         const {query, variables, queryPath = path} = queryItem;\n\n         const cachedData = proxy.readQuery({query, variables});\n         const itemIndex = findIndex(cachedData[queryPath], {id});\n         if (itemIndex >= 0) {\n            const modifiedList = removeOne([...cachedData[queryPath]], itemIndex);\n            proxy.writeQuery({\n               query,\n               variables,\n               data: {...cachedData, [queryPath]: modifiedList.length > 0 ? modifiedList : null}\n            });\n         }\n      }\n   };\n}\n\n/**\n * Create a cell in Excel spreadsheet.\n *\n * @param worksheet The worksheet of the spreadsheet.\n * @param text The text for the cell.\n * @param location The location of the cell (e.g. 'A1').\n * @param font The font style for the cell.\n * @param hasBottomBorder Indicates if the cell has a bottom border.\n * @return {Cell} The Excel spreadsheet cell.\n */\nconst createCell = (worksheet, text, location, font, hasBottomBorder) => {\n   const currentCell = worksheet.getCell(location);\n   currentCell.value = text;\n   currentCell.font = font;\n\n   if (hasBottomBorder) {\n      currentCell.border = {\n         bottom: {style: 'thin'},\n      };\n   }\n   return currentCell;\n};\n\n/**\n * Create a label for the Excel spreadsheet. Label is bold and can be aligned right.\n *\n * @param worksheet The worksheet of the spreadsheet.\n * @param text The text for the cell.\n * @param location The location of the cell (e.g. 'A1').\n * @param alignRight Indicates if the text should be aligned right.\n */\nexport const createLabel = (worksheet, text, location, alignRight = false) => {\n   const LABEL_FONT = {\n      name: 'Arial',\n      size: 10,\n      bold: true,\n   };\n   const currentCell = createCell(worksheet, text, location, LABEL_FONT);\n\n   if (alignRight) {\n      currentCell.alignment = {horizontal: 'right'};\n   }\n};\n\n/**\n * Create a notes area for the Excel spreadsheet. A note is any large text area.\n *\n * @param worksheet The worksheet of the spreadsheet.\n * @param text The text for the cell.\n * @param location The location of the cell (e.g. 'A1').\n * @param wrap Indicates if the cell should wrap.\n */\nexport const createNotes = (worksheet, text, location, wrap = false) => {\n   const NOTE_FONT = {\n      name: 'Arial',\n      size: 10,\n   };\n   const currentCell = createCell(worksheet, text, location, NOTE_FONT);\n\n   if (wrap) {\n      currentCell.alignment = {wrapText: true, vertical: 'middle', horizontal: 'left'};\n   }\n};\n\n/**\n * A value cell in an Excel spreadsheet. The value will be underlined.\n *\n * @param worksheet The worksheet of the spreadsheet.\n * @param text The text for the cell.\n * @param location The location of the cell (e.g. 'A1').\n */\nexport const createValue = (worksheet, text, location) => {\n   const VALUE_FONT = {\n      name: 'Arial',\n      size: 12,\n   }\n   createCell(worksheet, text, location, VALUE_FONT, true);\n};\n\n/**\n * A table for an Excel spreadsheet.\n *\n * @param worksheet The worksheet of the spreadsheet.\n * @param columns The columns for the table.\n * @param data The data properties must match the columns in order. For example the first column will be the first\n *        property in the object\n * @param location The location of the cell (e.g. 'A1').\n * @param showRowStripes Indicates if the stripes should be used in the table.\n * @param style\n * @param properties Optional properties of the data to be shown in the table\n */\nexport const createTable = (name, worksheet, columns, data, location, showRowStripes = false, style = {}, properties,\n   isAccessor = false, totalsRow = true, hasGetAccessor = false) => {\n\n   let rows;\n\n   if (hasGetAccessor) {\n      rows = map(data, item => {\n         let modifiedItem = {};\n         for (const column of columns) {\n            modifiedItem[column.accessor] = get(item, column.getAccessor || column.accessor);\n         }\n         return values(modifiedItem);\n      });\n   } else {\n      if (isAccessor) {\n         properties = map(columns, 'accessor');\n      }\n\n      rows = properties?.length > 0 ? map(data, item => values(pick(item, properties))) : map(data, values);\n   }\n\n   worksheet.addTable({\n      name,\n      ref: location,\n      headerRow: true,\n      totalsRow,\n      style: {\n         theme: 'TableStyleLight15',\n         showRowStripes: true\n         // ...style,\n      },\n      columns,\n      rows,\n   });\n};\n\n/**\n * A table for an Excel spreadsheet.\n *\n * @param worksheet The worksheet of the spreadsheet.\n * @param columns The columns for the table.\n * @param data The data properties must match the columns in order. For example the first column will be the first\n *        property in the object\n * @param location The location of the cell (e.g. 'A1').\n * @param style\n * @param properties Optional properties of the data to be shown in the table\n */\nexport const createTableLx = ({worksheet, columns, data, style, properties, ...tableProps}) => {\n\nlet rows = map(data, item => {\n      let modifiedItem = {};\n      for (const column of columns) {\n         const value = get(item, column.getAccessor || column.accessor);\n         modifiedItem[column.accessor] = value === undefined || value=== null? '' : value;\n      }\n      return values(modifiedItem);\n   });\n   const useColumns = map(columns, column => pick(column,['name', 'totalsRowFunction', 'style', 'totalsRowLabel']));\n\n   worksheet.addTable({\n      ...tableProps,\n      style: {\n         theme: 'TableStyleLight15',\n         showRowStripes: true,\n         // ...style,\n      },\n      columns: useColumns,\n      rows,\n   });\n};\n\nexport function PMT(interestRate = 0, numberOfPeriods = 1, presentValue = 0, futureValue = 0, paymentType = 0) {\n   if (!presentValue && !futureValue) {\n      return undefined;\n   }\n   if (numberOfPeriods <= 0) {\n      return undefined\n   }\n   if (interestRate === 0) {\n      return -(presentValue + futureValue) / numberOfPeriods;\n   }\n\n   var pvif = Math.pow(1 + interestRate, numberOfPeriods);\n   var payment = interestRate / (pvif - 1) * -(presentValue * pvif + futureValue);\n\n   if (paymentType === 1) {\n      payment /= (1 + interestRate);\n   }\n\n   return payment;\n}\n\nexport function round(x, isRounding = true) {\n   return !isRounding ? x : Math.round(x * 100) / 100;\n}\n\n/**\n * Assign the fields from all items. Priority is left to right. If the field has a value it will not be overwritten.\n * @param primary The most important priority object. Set fields will not be overwritten.\n * @param items Array of items to provide values.\n */\nexport function assign(primary, ...items) {\n   const result = {...primary};\n\n   forEach(items, item => {\n      forOwn(item, (value, key) => {\n         if (result[key] === undefined) {\n            result[key] = value;\n         }\n      });\n   });\n   return result;\n}\n","import {useQuery} from '@apollo/client';\nimport uniqueId from 'lodash/uniqueId';\nimport {useRef} from 'react';\nimport {useSetRecoilState} from 'recoil';\nimport {errorState} from '../../../pages/Main';\nimport {useEffect} from 'react';\nimport useMessage from '../useMessage';\nimport {progressGlobal} from '../useProgress';\nimport useProgress from '../useProgress';\n\nexport default function useQueryFHG(query, options, typeKey, showGlobalProgress, showLoading) {\n   const theUniqueId = useRef(uniqueId()).current;\n   const [, /*Unused*/ setProgress] = useProgress(theUniqueId);\n   const type = useMessage(typeKey, 'Unknown');\n\n   const setErrorState = useSetRecoilState(errorState);\n\n   const {loading, error, data} = useQuery(query, options);\n   // const {loading, error, data} = useQuery(query, {fetchPolicy: 'cache-and-network', ...options});\n   const setProgressGlobal = useSetRecoilState(progressGlobal);\n\n   useEffect(() => {\n      setProgressGlobal(showGlobalProgress);\n      return () => {\n         setProgressGlobal(true);\n      };\n   }, [showGlobalProgress, setProgressGlobal]);\n\n   useEffect(() => {\n      return () => {\n         setProgress(false);\n      };\n   }, [setProgress]);\n\n   useEffect(() => {\n      if (showLoading !== false) {\n         setProgress(loading);\n      }\n   }, [loading, setProgress, showLoading]);\n\n   useEffect(() => {\n      if (error) {\n         console.log('Error type', typeKey);\n         console.log(error, error.stackTrace);\n         setErrorState({error, errorKey: 'load.error', values: {type, message: error.message}});\n      }\n   }, [error, setErrorState, typeKey, type]);\n\n   return [data, {loading, error}];\n}\n","// eslint-disable-next-line\nimport Button, {ButtonProps} from '@material-ui/core/Button';\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport TypographyFHG from './Typography';\n\n/**\n *\n * @param labelKey {string}\n * @param buttonProps {ButtonProps}\n * @return {JSX.Element}\n * @constructor\n */\nButtonFHG.propTypes = {\n   labelKey: PropTypes.string,\n}\nexport default function ButtonFHG({labelKey, ...buttonProps}) {\n   return <Button {...buttonProps}>\n      <TypographyFHG variant={'inherit'} id={labelKey}/>\n   </Button>;\n}\n\n","import PropTypes from 'prop-types';\nimport {useIntl} from 'react-intl';\nimport {useSetRecoilState} from 'recoil';\nimport {titleStatus} from '../components/WebAppBar';\nimport {formatMessage} from '../utils/Utils';\nimport {useEffect} from 'react';\n\n/**\n * The component used as a placeholder for not implemented components.\n *\n * Reviewed:\n */\nexport default function usePageTitle({title, titleKey, values}) {\n   const intl = useIntl();\n   const setTitleStatus = useSetRecoilState(titleStatus);\n\n   useEffect(() => {\n       return () => {\n          setTitleStatus({titleKey: undefined, titleValues: undefined});\n          document.title = '';\n       }\n   }, [setTitleStatus]);\n\n   useEffect(() => {\n      const appTitle = formatMessage(intl, 'application.title', '');\n      const titleLabel = titleKey ? formatMessage(intl, titleKey, title, values) : title || '';\n      setTitleStatus(status => ({...status, titleKey, titleValues: values}));\n      document.title = appTitle ? `${appTitle} - ${titleLabel}` : titleLabel;\n   }, [title, titleKey, values, intl, setTitleStatus]);\n}\n\nusePageTitle.propTypes = {\n   appTitleKey: PropTypes.string,\n   title: PropTypes.string,\n   titleKey: PropTypes.string,\n   values: PropTypes.any,\n}\n","import makeStyles from '@material-ui/core/styles/makeStyles';\nimport React from 'react';\nimport ButtonFHG from '../fhg/components/ButtonFHG';\n\nconst useStyles = makeStyles({\n   buttonStyle: {\n      textDecoration: 'underline',\n      '&:hover': {\n         textDecoration: 'underline',\n      },\n   },\n}, {name: 'ButtonLFStyles'});\n\nButtonLF.propTypes = {\n\n};\n\nexport default function ButtonLF({labelKey, children, ...buttonProps}) {\n   const classes = useStyles();\n\n   return (\n      <ButtonFHG labelKey={labelKey} color='primary' size='large' className={classes.buttonStyle} {...buttonProps}/>\n   );\n}\n","import {IconButton} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React, {Fragment, useState} from 'react';\nimport ModalDialog from './dialog/ModalDialog';\n\n/**\n * Button Component to show confirmation.\n *\n * Reviewed:\n */\nConfirmIconButton.propTypes = {\n   titleKey: PropTypes.string,                  // Localization key for the title.\n   messageKey: PropTypes.string.isRequired,     // Localization key for the messages.\n   buttonLabelKey: PropTypes.string,            // Localization key for the button label.\n   onConfirm: PropTypes.func.isRequired,        // The callback when the action is confirmed.\n   onCancel: PropTypes.func,                    // The callback when the action is canceled.\n   component: PropTypes.any,                    // The Button component. Defaults to Button.\n   isProgress: PropTypes.bool,                  // Indicates if the confirmed action is in progress.\n   buttonProperties: PropTypes.any              // The properties for the button component.\n};\n\nexport default function ConfirmIconButton({\n   titleKey = 'confirmRemove.title', submitStyle,\n   messageKey = 'confirmRemove.message', buttonLabelKey, onConfirm, onCancel, confirmProps, submitColor,\n   children, color, component, values, titleValues, isProgress = false, buttonTypographyProps, ...buttonProperties\n}) {\n\n   const [isModalOpen, setIsModalOpen] = useState(false);\n\n   const handleClick = event => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      if (buttonProperties.type !== 'submit') {\n         setIsModalOpen(true);\n      }\n\n      buttonProperties?.onClick?.(event);\n   };\n\n   const handleConfirm = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n\n      setIsModalOpen(false);\n      onConfirm && onConfirm();\n   };\n\n   const handleCancel = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n\n      setIsModalOpen(false);\n      onCancel && onCancel();\n   };\n\n   return (\n      <Fragment>\n         {isModalOpen && (\n            <ModalDialog submitKey={buttonLabelKey} {...confirmProps} titleKey={titleKey} messageKey={messageKey} onSubmit={handleConfirm}\n                         onClose={handleCancel} hideBackdrop submitColorStyle={submitStyle} submitColor={submitColor || color} messageValues={values} titleValues={titleValues || values}\n            />\n         )}\n         <IconButton onClick={handleClick} {...buttonProperties} color={color} >\n            {children}\n         </IconButton>\n      </Fragment>\n   );\n}\n\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {useIntl} from 'react-intl';\nimport NumberFormatCustom from '../fhg/components/NumberFormat';\nimport {formatMessage} from '../fhg/utils/Utils';\nimport CustomInputTextField from './CustomInputTextField';\nimport get from 'lodash/get';\n\n/**\n * The TextField with preset formats.\n */\nexport default function TextFieldFHG ({ className, name, labelKey, placeholderKey, helpKey, helperText, defaultValue, value, onChange, margin, InputLabelProps, InputProps, label, fullWidth = true, isFormattedNumber, variant = 'outlined', classes, ...textFieldProps }) {\n   const intl = useIntl();\n   const currentLabel = label || (labelKey && formatMessage(intl, labelKey)) || undefined;\n   const currentPlaceholder = (placeholderKey && formatMessage(intl, placeholderKey)) || undefined;\n   const helpText = helperText || (helpKey && formatMessage(intl, helpKey)) || undefined;\n\n   const useInputProps = {\n      // style:{marginTop: 32, backgroundColor: theme.palette.background.paper},\n      ...InputProps,\n   };\n\n   if (isFormattedNumber) {\n      if (get(InputProps, 'inputComponent') || get(InputProps, 'inputProps.component')) {\n         console.log('isFormattedNumber cannot have a different input component.', InputProps);\n      }\n      useInputProps.inputComponent = CustomInputTextField;\n      useInputProps.inputProps = {...get(InputProps, 'inputProps', {}), ...(textFieldProps.inputProps || {}), component: NumberFormatCustom};\n   }\n   return (\n      <TextField\n         key={name}\n         name={name}\n         {...textFieldProps}\n         defaultValue={defaultValue}\n         value={value}\n         onChange={onChange}\n         label={currentLabel}\n         placeholder={currentPlaceholder}\n         helperText={helpText}\n         InputLabelProps={InputLabelProps}\n         InputProps={useInputProps}\n         className={className}\n         variant={variant}\n         size=\"small\"\n         margin={margin || 'normal'}\n         fullWidth={fullWidth}\n      />\n   );\n}\n","import Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport PropTypes from 'prop-types';\nimport React, {useEffect, useCallback} from 'react';\nimport Grid from '../Grid';\nimport Typography from '../Typography';\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      contentStyle: {\n         flex: '1 1 auto',\n         overflow: 'auto',\n      },\n      contentStyleNoScroll: {\n         '&:first-child': {\n            paddingTop: 10,\n         },\n         flex: '1 1 auto',\n         overflow: 'hidden',\n         display: 'flex',\n         paddingLeft: 10,\n         paddingRight: 10,\n         paddingBottom: 0,\n      },\n      spinnerMargin: {\n         marginLeft: theme.spacing(0.5),\n      },\n      actionStyle: {\n         margin: 0,\n         padding: theme.spacing(1),\n         flex: '0 0 auto',\n      },\n      fatButtonStyle: {\n         margin: `0 0 0 ${theme.spacing(1)}px !important`,\n         width: 'unset',\n         height: 'unset',\n         '@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)': {\n            width: 'auto',\n            height: 'auto',\n            padding: '12px 24px !important',\n         },\n      },\n      titleStyle: {\n         borderBottom: '1px solid #BFBAAE',\n         flex: '0 0 auto',\n         textTransform: 'capitalize',\n      },\n      innerStyle: {\n         paddingTop: theme.spacing(1),\n         height: '100%',\n      },\n      noScroll: {\n         flex: '0 0 auto',\n      },\n      formStyle: {\n         overflow: 'hidden',\n         display: 'flex',\n         flexDirection: 'column',\n      },\n   }),\n   {name: 'ModalDialogStyles'}\n);\n\n/**\n * The New User dialog which creates a new user.\n */\nexport default function ModalDialog({\n   open,\n   titleKey,\n   title,\n   titleValues,\n   titleVariant = 'h6',\n   submitKey,\n   messageKey,\n   message,\n   messageValues,\n   messageVariant = 'subtitle1',\n   cancelKey,\n   submitColor,\n   onClose,\n   onSubmit,\n   maxWidth,\n   fullWidth,\n   submitColorStyle,\n   cancelColorStyle,\n   disableBackdropClick,\n   buttons,\n   contentsScroll,\n   fullScreen,\n   isForm,\n   isSaving,\n   isEnabled,\n   TransitionComponent,\n   children,\n   fullHeight,\n   hideBackdrop,\n}) {\n   const classes = useStyles();\n\n   const handleSubmit = useCallback(\n      (event) => {\n         event.preventDefault();\n\n         onSubmit && onSubmit(event);\n      },\n      [onSubmit]\n   );\n\n   const handleKey = useCallback(\n      (event) => {\n         if (!event.defaultPrevented && open) {\n            if (event.key === 'Escape' && onClose) {\n               event.preventDefault();\n               onClose(event);\n            } else if (!isForm && event.key === 'Enter') {\n               handleSubmit(event);\n            }\n         }\n      },\n      [handleSubmit, isForm, onClose, open]\n   );\n\n   /**\n    * Handles keydown events for Escape and Enter.\n    */\n   useEffect(() => {\n      document.addEventListener('keydown', handleKey, false);\n\n      // Cleanup the listener when this component is removed.\n      return () => {\n         document.removeEventListener('keydown', handleKey, false);\n      };\n   }, [isForm, onClose, open, handleSubmit, handleKey]);\n\n   const handleClickSubmit = (event) => {\n      if (!event.isDefaultPrevented()) {\n         handleSubmit(event);\n      }\n   };\n   return (\n      <Dialog\n         open={open}\n         onClose={onClose}\n         maxWidth={maxWidth}\n         onKeyDown={handleKey}\n         fullWidth={fullWidth}\n         disableBackdropClick={disableBackdropClick}\n         fullScreen={fullScreen}\n         hideBackdrop={hideBackdrop}\n         TransitionComponent={TransitionComponent}\n      >\n         <Grid container direction={'column'} wrap={'nowrap'} fullHeight={fullHeight}>\n            {(title || titleKey) && (\n               <DialogTitle disableTypography className={classes.titleStyle}>\n                  <Typography\n                     className={classes.titleTypography}\n                     variant={titleVariant}\n                     id={titleKey}\n                     values={titleValues}\n                  >\n                     {title}\n                  </Typography>\n               </DialogTitle>\n            )}\n            <DialogContent className={contentsScroll ? classes.contentStyle : classes.contentStyleNoScroll}>\n               <Grid\n                  container\n                  className={contentsScroll ? classes.innerStyle : classes.noScroll}\n                  direction={'column'}\n                  wrap={'nowrap'}\n                  fullHeight={fullHeight}\n               >\n                  {messageKey && (\n                     <Typography id={messageKey} variant={messageVariant} values={messageValues} hasBold>\n                        {message}\n                     </Typography>\n                  )}\n                  {children}\n               </Grid>\n            </DialogContent>\n            <DialogActions className={classes.actionStyle} spacing={1}>\n               {buttons}\n               <Button\n                  className={`${classes.fatButtonStyle} button ${cancelColorStyle}`}\n                  disabled={isSaving}\n                  onClick={onClose}\n               >\n                  <Typography color='inherit' id={cancelKey} />\n               </Button>\n               {!!onSubmit && (\n                  <Button\n                     className={`${classes.fatButtonStyle} button ${submitColorStyle}`}\n                     type='submit'\n                     variant={'contained'}\n                     disabled={isSaving || !isEnabled}\n                     onClick={!isForm ? handleClickSubmit : undefined}\n                     color={submitColor}\n                  >\n                     <Typography color='inherit' id={submitKey} values={titleValues} />\n                     {isSaving && <CircularProgress className={classes.spinnerMargin} size={15} thickness={2.5} />}\n                  </Button>\n               )}\n            </DialogActions>\n         </Grid>\n      </Dialog>\n   );\n}\n\nModalDialog.propTypes = {\n   message: PropTypes.string, // Message to be displayed to the user. Use either message or messageKey but\n   //    not both.\n   messageKey: PropTypes.string, // Message key of the message to be displayed to the user.\n   onSubmit: PropTypes.func, // Called when the user submits/confirms.\n   onClose: PropTypes.func, // Called when the user closes/cancels.\n   open: PropTypes.bool, // Indicates if the dialog should be open or not.\n   title: PropTypes.string, // Title for the confirmation dialog.\n   titleKey: PropTypes.string, // Localization key for the Title for the confirmation dialog.\n   titleValues: PropTypes.object, // Values for the Title for the confirmation dialog.\n   submitLabel: PropTypes.string, // Label for the submit button.\n   submitKey: PropTypes.string, // Localization key for the submit button label.\n   cancelLabel: PropTypes.string, // Label for the cancel button.\n   cancelKey: PropTypes.string, // Localization key for the cancel button label.\n   cancelColorStyle: PropTypes.string, // The class specifying the color of the cancel button. Needs color and\n   //    background color for all states (e.g. primary-color-button).\n   messageValues: PropTypes.object, // Localization messageValues for the message.\n   isSaving: PropTypes.bool, // Indicates if the saving progress should be shown.\n   isEnabled: PropTypes.bool, // Indicates if the submit button can be enabled. It won't be enabled if\n   // isSaving is true.\n   submitColorStyle: PropTypes.string, // The class specifying the color of the submit button. Needs color and\n   //    background color for all states (e.g. primary-color-button).\n   maxWidth: PropTypes.string, // The maximum width of the dialog.\n   children: PropTypes.any, // Optional children components.\n   isForm: PropTypes.bool, // Is the modal containing a form? If not, the enter key is handled.\n   useCaptureKeydown: PropTypes.bool,\n   contentsScroll: PropTypes.bool,\n};\n\nModalDialog.defaultProps = {\n   open: true,\n   isSaving: false,\n   isEnabled: true,\n   submitLabel: 'OK',\n   submitKey: 'ok.button',\n   cancelLabel: 'Cancel',\n   cancelKey: 'cancel.button',\n   submitColorStyle: 'primary-color-button',\n   cancelColorStyle: 'minimal-cancel-button',\n   maxWidth: 'md',\n   isForm: false,\n   useCaptureKeydown: true,\n   contentsScroll: true,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\nimport set from 'lodash/set';\n\nfunction NumberFormatCustom(props) {\n   const {inputRef, onChange, value, defaultValue, ...other} = props;\n\n   const handleChange = (values, {source}) => {\n      if (source === 'event') {\n         const target = {\n            type: 'react-number-format',\n            name: props.name,\n            value: values.value,\n            valueAsNumber: values.floatValue,\n         };\n         if (props['data-index'] !== undefined) {\n            set(target, 'dataset.index', props['data-index']);\n         }\n         onChange && onChange({target});\n      }\n   };\n\n   return (\n      <NumberFormat\n         {...other}\n         defaultValue={defaultValue}\n         value={value === '' ? null : value}\n         getInputRef={inputRef}\n         onValueChange={handleChange}\n         thousandSeparator\n      />\n   );\n}\n\nNumberFormatCustom.propTypes = {\n   inputRef: PropTypes.func,\n   onChange: PropTypes.func.isRequired,\n};\n\nexport default NumberFormatCustom;\n","import React from 'react';\n\nexport default function CustomInputTextField({ component: Component, inputRef, ...other }) {\n\n   // implement `InputElement` interface\n   React.useImperativeHandle(inputRef, () => ({\n      focus: () => {\n         // logic to focus the rendered component from 3rd party belongs here\n      },\n      // hiding the value e.g. react-stripe-elements\n   }));\n\n   // `Component` will be your `SomeThirdPartyComponent` from below\n   return <Component {...other} />;\n}\n","import Drawer from '@material-ui/core/Drawer/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {atom, useRecoilState} from 'recoil';\nimport {APPBAR_SMALL_HEIGHT} from '../../Constants';\nimport {DRAWER_WIDTH, APPBAR_HEIGHT} from '../../Constants';\n\nexport const drawerIsOpenStatus = atom({\n   key: 'isDrawerOpen',\n   default: false,\n});\n\nconst useStyles = makeStyles(theme => ({\n   drawer: props => ({\n      flex: '1 1',\n      '@media print': {\n         display: 'none',\n      },\n      [theme.breakpoints.up('md')]: {\n         width: props?.width || DRAWER_WIDTH,\n         // height: DRAWER_WIDTH,\n         flexShrink: 0,\n      },\n   }),\n   drawerPaper: props => ({\n      // backgroundColor: theme.palette.environment.light.level1.base,\n      // minWidth: 300,\n      width: props?.width || DRAWER_WIDTH, //EQUIPMENT_LIST_PROPERTY_WIDTH,\n      maxWidth: '100%',\n      height: `calc(100% - ${APPBAR_HEIGHT}px)`,\n      margin: 0,\n      marginTop: APPBAR_HEIGHT,\n      [theme.breakpoints.down('sm')]: {\n         marginTop: APPBAR_SMALL_HEIGHT,\n         height: `calc(100% - ${APPBAR_SMALL_HEIGHT}px)`,\n      },\n      // marginLeft: 'auto',\n   }),\n   noBorder: {\n      borderRight: 'none',\n   },\n   closeButtonStyle: {\n      '@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)': {\n         position: 'absolute',\n         top: 0,\n         right: 0,\n      },\n      '@supports not (-ms-high-contrast: none)': {\n         position: 'sticky',\n      },\n      right: 0,\n      top: 0,\n      marginLeft: 'auto',\n      marginBottom: theme.spacing(-6),\n      zIndex: 1001,\n   },\n}));\n\n/**\n * Responsive Drawer Component which changes between a permanent drawer above the breakpoint and is temporary at or\n * below the breakpoint. The close button floats above the children and stays at in the top right of the component. The\n * children should allow space in the upper right corner for the close button.\n */\nexport default function ResponsiveMobileDrawer({children, width, backgroundColor, ModalProps}) {\n   const classes = useStyles({width});\n   const [isDrawerOpen, setIsDrawerOpen] = useRecoilState(drawerIsOpenStatus);\n\n   return (\n      <nav className={classes.drawer} aria-label='navigation'>\n         <Hidden mdUp implementation='css'>\n            <SwipeableDrawer\n               variant='temporary'\n               anchor='left'\n               open={isDrawerOpen}\n               onClose={() => setIsDrawerOpen(false)}\n               onOpen={() => setIsDrawerOpen(true)}\n               PaperProps={{style: {width, backgroundColor}}}\n               classes={{\n                  paper: classes.drawerPaper,\n                  paperAnchorDockedLeft: classes.noBorder,\n               }}\n\n               ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                  ...ModalProps,\n               }}\n            >\n               {children}\n            </SwipeableDrawer>\n         </Hidden>\n         <Hidden smDown implementation='css'>\n            <Drawer\n               anchor='left'\n               PaperProps={{style: {width, backgroundColor}}}\n               classes={{\n                  paper: classes.drawerPaper,\n                  paperAnchorDockedLeft: classes.noBorder,\n               }}\n               elevation={0}\n               variant='permanent'\n               open\n            >\n               {children}\n            </Drawer>\n         </Hidden>\n      </nav>\n   );\n}\n\nResponsiveMobileDrawer.propTypes = {\n   children: PropTypes.any.isRequired,       // Children in the drawer.\n   width: PropTypes.number,                  // Width of the draw to override the constant DRAWER_WIDTH.\n   backgroundColor: PropTypes.string,        // Background color of the drawer.\n};\n","import Menu from '@material-ui/icons/Menu';\nimport AppBar from '@material-ui/core/AppBar';\nimport FormControl from '@material-ui/core/FormControl';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Person from '@material-ui/icons/Person';\nimport {Auth} from 'aws-amplify';\nimport React, {useState, Fragment} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport {useRecoilState, atom, useRecoilValue} from 'recoil';\nimport {LOGO, APPBAR_HEIGHT, APPBAR_SMALL_HEIGHT, DEFAULT_PATH} from '../../Constants';\nimport Grid from './Grid';\nimport {drawerIsOpenStatus} from './ResponsiveMobileDrawer';\nimport {userStatus} from './security/AuthenticatedUser';\nimport Typography from './Typography';\nimport useWidthRule from '../hooks/useWidthRule';\n\nexport const titleStatus = atom({\n   key: 'titleStatus',\n   default: {\n      titleKey: undefined,\n      titleValues: undefined,\n      titleUrl: undefined,\n      subtitleKey: undefined,\n      subtitleValues: undefined,\n      showTitles: false,\n      videoId: undefined,\n      helpKey: undefined,\n      showSelect: true,\n   },\n});\n\nconst useStyles = makeStyles((theme) => ({\n   appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      flex: '0 0 auto',\n      height: APPBAR_HEIGHT,\n      [theme.breakpoints.down('sm')]: {\n         height: APPBAR_SMALL_HEIGHT,\n         paddingLeft: theme.spacing(0),\n         paddingRight: theme.spacing(0),\n      },\n      position: 'relative',\n      [theme.breakpoints.up('sm')]: {\n         paddingLeft: theme.spacing(1),\n         paddingRight: theme.spacing(1),\n      },\n   },\n   toolBarStyle: {\n      [theme.breakpoints.up('md')]: {\n         height: APPBAR_HEIGHT,\n         minHeight: APPBAR_HEIGHT,\n      },\n      [theme.breakpoints.down('sm')]: {\n         height: APPBAR_SMALL_HEIGHT,\n         minHeight: APPBAR_SMALL_HEIGHT,\n      },\n      [theme.breakpoints.down('sm')]: {\n         paddingLeft: 2,\n         paddingRight: 2,\n      },\n   },\n   imageStyle: {\n      display: 'block',\n      height: 'calc(4vw + 18px)',\n      maxHeight: 58,\n      minHeight: 38,\n   },\n   iconStyle: {\n      [theme.breakpoints.down('sm')]: {\n         fontSize: '2rem',\n      },\n   },\n   titleStyle: {\n      // width: '100%',\n      color: theme.palette.text.primary,\n   },\n   subtitleStyle: {\n      width: '100%',\n      color: theme.palette.text.primary,\n      textTransform: 'uppercase',\n      marginTop: theme.spacing(3),\n   },\n}));\n\n/**\n * The AppBar with search and export to CSV capabilities.\n */\nexport default function WebAppBar({children}) {\n   const classes = useStyles();\n   const history = useHistory();\n   const isSmallWidth = useWidthRule('down', 'xs');\n   const user = useRecoilValue(userStatus);\n   const [isDrawerOpen, setIsDrawerOpen] = useRecoilState(drawerIsOpenStatus);\n\n   const [isAccountMenuOpen, setIsAccountMenuOpen] = useState(false);\n   const [{titleKey, titleValues, titleUrl, subtitleKey, subtitleValues, showTitles, helpKey, videoId}] =\n      useRecoilState(titleStatus);\n\n   const handleClose = () => {\n      setIsAccountMenuOpen(false);\n   };\n\n   const handleMenu = () => {\n      setIsAccountMenuOpen(true);\n   };\n\n   const handleLogoutChange = (event) => {\n      if (event.target.value === 'logout') {\n         Auth.signOut();\n      }\n   };\n\n   const handleClick = (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n\n      history.push(DEFAULT_PATH);\n   };\n\n   const handleMenuClick = () => {\n      setIsDrawerOpen(!isDrawerOpen);\n   };\n\n   const LinkComponent = titleUrl ? Link : Fragment;\n   const toProp = titleUrl ? {to: titleUrl} : {};\n\n   return (\n      <AppBar position='relative' color={'inherit'} className={classes.appBar}>\n         <Toolbar className={classes.toolBarStyle}>\n            <Grid container justify={'space-between'} alignItems={'center'} direction={'row'} wrap={'nowrap'}>\n               <Grid\n                  item\n                  container\n                  fullWidth={false}\n                  alignItems={'center'}\n                  direction={'row'}\n                  wrap={'nowrap'}\n                  resizable={false}\n               >\n                  <Grid item>\n                     <Hidden mdUp implementation='css'>\n                        <IconButton edge='start' size='small' color='primary' onClick={handleMenuClick}>\n                           <Menu />\n                        </IconButton>\n                     </Hidden>\n                  </Grid>\n                  <Grid item fullHeight resizable={false}>\n                     <img alt='' className={classes.imageStyle} src={LOGO} onClick={handleClick} />\n                  </Grid>\n                  <Hidden xsDown>\n                     <Grid item resizable={false}>\n                        {process.env.REACT_APP_VERSION}\n                     </Grid>\n                  </Hidden>\n               </Grid>\n               {showTitles && titleKey && (\n                  <Grid name={'TitleCard-title'} item className={classes.titleGridStyle} resizable fullWidth={false}>\n                     <LinkComponent {...toProp}>\n                        <Typography\n                           id={titleKey}\n                           values={titleValues}\n                           className={classes.titleStyle}\n                           variant={'h5'}\n                           align={'center'}\n                        />\n                     </LinkComponent>\n                     {subtitleKey && (\n                        <Typography\n                           id={subtitleKey}\n                           values={subtitleValues}\n                           className={classes.subtitleStyle}\n                           variant={'subtitle1'}\n                           noWrap\n                           align={'center'}\n                        />\n                     )}\n                  </Grid>\n               )}\n               {children}\n               <Grid\n                  container\n                  alignItems={'center'}\n                  fullWidth={false}\n                  direction={'column'}\n                  wrap={'nowrap'}\n                  resizable={false}\n               >\n                  <FormControl className={classes.formControl}>\n                     <Select\n                        open={isAccountMenuOpen}\n                        className={classes.selectStyle}\n                        onClose={handleClose}\n                        onOpen={handleMenu}\n                        renderValue={() => (\n                           <Grid container wrap={'nowrap'} direction={'row'} alignItems={'center'}>\n                              <Person fontSize={isSmallWidth ? 'default' : 'large'} color={'primary'} />\n                              <Hidden mdDown>\n                                 <Typography variant={'body2'} color={'primary'}>\n                                    {user?.name}\n                                 </Typography>\n                              </Hidden>\n                           </Grid>\n                        )}\n                        disableUnderline={true}\n                        displayEmpty={true}\n                        value={''}\n                        onChange={handleLogoutChange}\n                     >\n                        <MenuItem value='logout'>\n                           <Typography id='path.logout' variant='menuItem' />\n                        </MenuItem>\n                     </Select>\n                  </FormControl>\n               </Grid>\n            </Grid>\n         </Toolbar>\n      </AppBar>\n   );\n}\n","import useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nexport default function useWidthRule(mode, width) {\n   const theme = useTheme();\n   return useMediaQuery(theme.breakpoints[mode](width));\n}\n","import Autocomplete from '@material-ui/lab/Autocomplete';\nimport isObjectLike from 'lodash/isObjectLike';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport * as PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport TextFieldFHG from '../../../components/TextField';\nimport {useEffect} from 'react';\nimport {hasValue, renderOptionsKey} from '../../utils/Utils';\n\nAutocompleteFHG.propTypes = {\n   isOptionObjects: PropTypes.bool,\n   labelKey: PropTypes.string,\n   optionObjects: PropTypes.array,\n   optionKey: PropTypes.string,\n   ...Autocomplete.propTypes,\n}\n\n/**\n * The Autocomplete with preset formats.\n */\nexport default function AutocompleteFHG({\n   name,\n   editName,\n   defaultValue = null,\n   value,\n   autoComplete = true,\n   isOptionObjects = true,\n   disableClearable = true,\n   options = [],\n   optionKey = 'name',\n   valueKey = 'id',\n   labelKey,\n   onChange,\n   autoHighlight = true,\n   selectOnFocus = true,\n   autoFocus,\n   required,\n   placeholderKey,\n   variant,\n   inputProps,\n   onClear,\n   ...textFieldProps\n}) {\n\n   const [innerValue, setValue] = useState(isOptionObjects ? {} : undefined);\n   const [isSet, setIsSet] = useState(false);\n\n   useEffect(() => {\n      if (!!value && !isSet) {\n         const predicate = isObjectLike(value) ? {[valueKey]: value[valueKey]} : {[valueKey]: value};\n         const newValue = find(options, predicate);\n         if (newValue) {\n            setValue(newValue);\n         }\n      }\n   }, [value, options, isSet, valueKey]);\n\n   useEffect(() => {\n      let newValue;\n\n      if (!value) {\n         if (hasValue(defaultValue)) {\n            if (options) {\n               if (isOptionObjects) {\n                  const predicate = isObjectLike(defaultValue) ? {[valueKey]: defaultValue[valueKey]} :\n                     {[valueKey]: defaultValue};\n                  newValue = find(options, predicate);\n               } else {\n                  newValue = defaultValue;\n               }\n               if (newValue) {\n                  setValue(newValue);\n               }\n            }\n         } else {\n            setValue(null);\n         }\n      }\n   }, [valueKey, value, defaultValue, options, isOptionObjects]);\n\n   const getOptionLabel = option => {\n      if (option && typeof option === 'string') {\n         return option;\n      }\n      const item = isOptionObjects ? (option ? option[optionKey] || 'Untitled' : 'Untitled') : option || 'Untitled';\n      if (item === undefined) {\n         console.log('AutocompleteFHG item undefined');\n         return 'Untitled';\n      }\n      return item;\n   }\n\n   const handleChange = (event, newValue, reason) => {\n      setValue(newValue);\n      setIsSet(true);\n      if (isOptionObjects) {\n         let newValueObject;\n\n         if (reason === 'create-option' && newValue && typeof newValue === 'string') {\n            newValueObject = {[editName]: newValue, [name]: undefined};\n         } else if (reason === 'clear') {\n            newValueObject = {[name]: newValue};\n            if (editName) {\n               newValueObject[editName] = undefined;\n            }\n         } else {\n            newValueObject = {[name]: get(newValue, valueKey)};\n            if (editName) {\n               newValueObject[editName] = undefined;\n            }\n         }\n         onChange && onChange(event, newValue, reason, newValueObject, name);\n      } else {\n         onChange && onChange(event, newValue, reason, undefined, name);\n      }\n   };\n\n   const handleInputChange = (event, newValue, reason) => {\n      if (reason === 'input') {\n         const useValue = newValue && newValue.length > 0 ? newValue.toLowerCase() : '';\n         const found = find(options, option => option[optionKey].toLowerCase() === useValue);\n         const newValueObject = found ? {[name]: found[valueKey], [editName]: newValue} :\n            {[editName]: newValue, [name]: null};\n         setIsSet(true);\n\n         onChange && onChange(event, newValue, reason, newValueObject, editName);\n      } else if (reason === 'clear') {\n         onClear?.(event, innerValue, reason);\n      }\n   };\n\n   const onHighlightChange = (event, value, reason) => {\n      if (reason === 'keyboard') {\n         if (onChange) {\n            const newValueObject = {[name]: value[valueKey]};\n            // if (editName) {\n            //    newValueObject[editName] = null;\n            // }\n            setIsSet(true);\n            onChange && onChange(event, newValueObject, reason, newValueObject, name);\n         }\n      }\n   };\n\n   const handleGetOptionSelected = (option, value) => {\n      if (value === null || value === undefined) {\n         return false;\n      }\n\n      if (typeof option === 'string') {\n         if (typeof value === 'object') {\n            return option === value[optionKey];\n         } else {\n            return option === value;\n         }\n      } else if (typeof option === 'object') {\n         if (typeof value === 'string') {\n            return option[optionKey] === value;\n         } else if (typeof value === 'number') {\n            return option[valueKey] === value;\n         } else if (typeof value === 'object') {\n            return option[valueKey] === value[valueKey];\n         } else {\n            return option === value[optionKey];\n         }\n      }\n   };\n\n   return (\n      <Autocomplete\n         name={name}\n         freeSolo={!!editName}\n         options={options || []}\n         autoComplete={autoComplete}\n         autoHighlight={autoHighlight}\n         onHighlightChange={onHighlightChange}\n         selectOnFocus={selectOnFocus}\n         disableClearable={disableClearable}\n         getOptionLabel={textFieldProps.getOptionLabel || getOptionLabel}\n         // getOptionLabel={textFieldProps.getOptionLabel || (isOptionObjects ? getOptionLabel : undefined)}\n         renderOption={textFieldProps.renderOption || renderOptionsKey(optionKey)}\n         // renderOption={textFieldProps.renderOption || (isOptionObjects ? renderOptionsKey(optionKey) : undefined)}\n         getOptionSelected={handleGetOptionSelected}\n         onChange={handleChange}\n         onInputChange={!!editName ? handleInputChange : undefined}\n         renderInput={(params) => (\n            <TextFieldFHG {...params} key={'autoCompleteTextKey' + name} name={'autoCompleteText' + name}\n                          placeholderKey={placeholderKey || labelKey} autoFocus={autoFocus}\n                          labelKey={labelKey} required={required} variant={variant}\n                          InputLabelProps={{style: {zIndex: 100}}}\n                          InputProps={params.InputProps ? {...params.InputProps, ...inputProps} : inputProps}\n            />\n         )}\n         {...textFieldProps}\n         value={innerValue}\n      />\n   );\n}\n\n\n","import {MenuItem} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport {forwardRef} from 'react';\nimport React, {Fragment, useState} from 'react';\nimport ButtonLF from '../../components/ButtonLF';\nimport {UNDO_DURATION} from '../../Constants';\nimport ModalDialog from './dialog/ModalDialog';\nimport TypographyFHG from './Typography';\nimport Typography from './Typography';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      messageStyle: {\n         backgroundColor: `${theme.palette.background.default} !important`,\n         color: `${theme.palette.text.secondary} !important`,\n         paddingRight: theme.spacing(6),\n      },\n      snackbarMessageStyle: {\n         marginRight: theme.spacing(1),\n      },\n      closeButtonStyle: {\n         position: 'absolute',\n         right: 0,\n         top: 0,\n         marginLeft: 'auto',\n         zIndex: 1001,\n      },\n      spinnerMargin: {\n         marginLeft: theme.spacing(0.5),\n      },\n   }),\n   {name: 'ConfirmMenuItemStyles'}\n);\n\n/**\n * Confirm Menu Item Component to show confirmation when selecting a menu item.\n *\n * Reviewed:\n */\nconst ConfirmMenuItem = forwardRef(function ConfirmMenuItem(\n   {\n      titleKey = 'confirmRemove.title',\n      messageKey = 'confirmRemoveValue.message',\n      buttonLabelKey = 'delete.button',\n      onConfirm,\n      onCancel,\n      confirmProps,\n      children,\n      color,\n      component,\n      values,\n      titleValues,\n      isProgress = false,\n      submitStyle,\n      onUndo = false,\n      startIcon,\n      buttonTypographyProps,\n      ...menuItemProperties\n   },\n   ref\n) {\n   const classes = useStyles();\n   const theme = useTheme();\n\n   const [isModalOpen, setIsModalOpen] = useState(false);\n   const [showUndelete, setShowUndelete] = useState(false);\n\n   const useTitleValues = titleValues || values;\n   const StartIcon = startIcon;\n\n   const handleClick = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      if (menuItemProperties.type !== 'submit') {\n         setIsModalOpen(true);\n      }\n\n      menuItemProperties?.onClick?.(event);\n   };\n\n   const handleConfirm = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      setIsModalOpen(false);\n\n      if (onUndo) {\n         setShowUndelete(true);\n      }\n      onConfirm && onConfirm();\n   };\n\n   const handleCancel = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      setIsModalOpen(false);\n      onCancel?.(event);\n   };\n\n   const handleUndoClose = () => {\n      setShowUndelete(false);\n   };\n\n   const handleUndo = () => {\n      onUndo?.();\n      handleUndoClose();\n   };\n\n   return (\n      <Fragment>\n         {isModalOpen && (\n            <ModalDialog\n               submitKey={buttonLabelKey}\n               {...confirmProps}\n               titleKey={titleKey}\n               messageKey={messageKey}\n               onSubmit={handleConfirm}\n               onClose={handleCancel}\n               hideBackdrop\n               submitColor={color}\n               messageValues={values}\n               titleValues={useTitleValues}\n               submitColorStyle={submitStyle}\n            />\n         )}\n         {showUndelete && (\n            <Snackbar\n               open={true}\n               autoHideDuration={UNDO_DURATION}\n               onClose={handleUndoClose}\n               ContentProps={{classes: {root: classes.messageStyle}}}\n               message={\n                  <Typography\n                     id={'confirmRemoveValue.Undo.message'}\n                     variant={'subtitle1'}\n                     className={classes.snackbarMessageStyle}\n                     values={values}\n                     color={'inherit'}\n                  >\n                     <ButtonLF labelKey={'undo.label'} onClick={handleUndo} />\n                  </Typography>\n               }\n               action={[\n                  <IconButton\n                     key='close'\n                     aria-label='Close'\n                     color='inherit'\n                     size={'small'}\n                     className={classes.closeButtonStyle}\n                     onClick={handleUndoClose}\n                  >\n                     <CloseIcon fontSize='inherit' />\n                  </IconButton>,\n               ]}\n            />\n         )}\n         <MenuItem onClick={handleClick} color={color} {...menuItemProperties}>\n            {isProgress && <CircularProgress className={classes.spinnerMargin} size={15} thickness={2.5} />}\n            {startIcon && <StartIcon fontSize={'small'} color={color} style={{marginRight: theme.spacing(1)}} />}\n            <TypographyFHG variant='menuItem' id={buttonLabelKey} color={color} {...buttonTypographyProps} />\n            {children}\n         </MenuItem>\n      </Fragment>\n   );\n});\n\nConfirmMenuItem.propTypes = {\n   titleKey: PropTypes.string, // Localization key for the title.\n   messageKey: PropTypes.string, // Localization key for the messages.\n   buttonLabelKey: PropTypes.string, // Localization key for the button label.\n   onConfirm: PropTypes.func.isRequired, // The callback when the action is confirmed.\n   onCancel: PropTypes.func, // The callback when the action is canceled.\n   component: PropTypes.any, // The Button component. Defaults to Button.\n   isProgress: PropTypes.bool, // Indicates if the confirmed action is in progress.\n   menuItemProperties: PropTypes.any, // The properties for the button component.\n};\n\nexport default ConfirmMenuItem;\n","import React from 'react';\nimport TreeItemFHG from './TreeItemFHG';\n\nexport default function TreeViewFHG({\n   defaultExpanded,\n   expandAll = false,\n   ContentComponent,\n   EditComponent,\n   height,\n   width,\n   onAdd,\n   onEdit,\n   onDelete,\n   onMove,\n   onMoveX,\n   item,\n   itemsKey = 'items',\n   labelKey = 'label',\n   parentKey,\n}) {\n   return (\n      <TreeItemFHG\n         key={'TreeView' + item?.id}\n         ContentComponent={ContentComponent}\n         height={height}\n         width={width}\n         defaultExpanded={defaultExpanded}\n         expandAll={expandAll}\n         EditComponent={EditComponent}\n         item={item}\n         itemsKey={itemsKey}\n         labelKey={labelKey}\n         parentKey={parentKey}\n         onMoveX={onMoveX}\n         onMove={onMove}\n         onEdit={onEdit}\n         onAdd={onAdd}\n         onDelete={onDelete}\n      />\n   );\n}\n","import React from 'react';\nimport {useSpring, animated} from 'react-spring';\n\nexport default function Collapse(props) {\n   let style = useSpring({\n      from: {opacity: 0, transform: 'translateY(-340px)', marginLeft: 'auto', marginRight: 'auto'},\n      to: {\n         opacity: props.in ? 1 : 0,\n         transform: `translateY(${props.in ? 0 : -340}px)`,\n         marginLeft: 'auto',\n         marginRight: 'auto',\n      },\n      overflow: 'hidden',\n      position: 'relative',\n   });\n   return <animated.div style={style}>{props.children}</animated.div>;\n}\n","import {Divider} from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {useRef} from 'react';\nimport React from 'react';\nimport {useDrop} from 'react-dnd';\nimport {PRIMARY_COLOR} from '../../../Constants';\nimport Grid from '../Grid';\nimport {ITEM_DRAG_TYPE} from './TreeItemFHG';\n\nconst BOTTOM_MARGIN = 16;\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      root: {\n         paddingRight: theme.spacing(2),\n         paddingLeft: theme.spacing(2),\n         marginLeft: 'auto',\n         marginRight: 'auto',\n      },\n      itemStyle: {\n         marginBottom: BOTTOM_MARGIN,\n         position: 'relative',\n         '&:first-child:not(:only-child)': {\n            paddingRight: theme.spacing(2),\n            '&:after': {\n               content: '\"\"',\n               position: 'absolute',\n               top: 0,\n               left: `calc(50% - ${theme.spacing(1)}px)`,\n               right: 0,\n               borderTop: `2px solid ${theme.palette.primary.main}`,\n               zIndex: 1,\n            },\n         },\n         '&:last-child:not(:only-child)': {\n            paddingLeft: theme.spacing(2),\n            '&:after': {\n               content: '\"\"',\n               position: 'absolute',\n               top: 0,\n               left: 0,\n               right: `calc(50% - ${theme.spacing(1)}px)`,\n               borderTop: `2px solid ${theme.palette.primary.main}`,\n               zIndex: 1,\n            },\n         },\n         '&:not(:first-child):not(:last-child)': {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(2),\n            '&:after': {\n               content: '\"\"',\n               position: 'absolute',\n               top: 0,\n               left: 0,\n               right: 0,\n               borderTop: `2px solid ${theme.palette.primary.main}`,\n               zIndex: 1,\n            },\n         },\n      },\n   }),\n   {name: 'TreeGroupFHGStyles'}\n);\n\nconst TreeGroupFHG = React.forwardRef(function TreeGroupFHG({isTopLevel = false, children}, ref) {\n   const classes = useStyles();\n   const itemRef = useRef();\n   const childCount = React.Children.count(children);\n   const [, drop] = useDrop(() => ({accept: ITEM_DRAG_TYPE}));\n\n   const render = (child) => {\n      if (typeof child === 'function') {\n         return child({childCount, ...child.props});\n      } else if (typeof children === 'object') {\n         return React.cloneElement(child, {\n            childCount,\n            ...child.props,\n            ref: itemRef,\n         });\n      }\n   };\n\n   return (\n      <Grid\n         ref={drop}\n         name={'Tree Group Root'}\n         container\n         item\n         className={classes.root}\n         direction={'row'}\n         wrap={'nowrap'}\n         justify={'space-around'}\n         alignItems={'flex-start'}\n         resizable={false}\n         fullWidth={false}\n      >\n         {React.Children.map(children, (child, index) => (\n            <Grid\n               name='Tree Group Cell'\n               key={'group' + index}\n               container\n               item\n               className={isTopLevel ? classes.root : classes.itemStyle}\n               fullWidth={false}\n               justify={'center'}\n               direction={'column'}\n               overflow={'visible'}\n               wrap={'nowrap'}\n               alignContent={'flex-start'}\n               resizable={false}\n            >\n               {!isTopLevel && (\n                  <Grid item style={{height: 20}}>\n                     <Divider\n                        orientation={'vertical'}\n                        flexItem\n                        style={{\n                           height: 20,\n                           marginRight: 'auto',\n                           marginLeft: 'auto',\n                           backgroundColor: PRIMARY_COLOR,\n                           width: 2,\n                        }}\n                     />\n                  </Grid>\n               )}\n               <Grid name={'Tree Group Item'} item container resizable={false} fullWidth={false} overflow={'visible'}>\n                  {render(child)}\n               </Grid>\n            </Grid>\n         ))}\n      </Grid>\n   );\n});\n\nexport default TreeGroupFHG;\n","import {Menu} from '@material-ui/core';\nimport {Divider} from '@material-ui/core';\nimport {CardHeader} from '@material-ui/core';\nimport {CardActions} from '@material-ui/core';\nimport {CardContent} from '@material-ui/core';\nimport {Card} from '@material-ui/core';\nimport {styled} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport {lighten} from '@material-ui/core/styles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {AddCircle} from '@material-ui/icons';\nimport {Delete} from '@material-ui/icons';\nimport {MoreVert} from '@material-ui/icons';\nimport {Edit} from '@material-ui/icons';\nimport {ExpandMore as ExpandMoreIcon} from '@material-ui/icons';\nimport {indexOf} from 'lodash';\nimport findIndex from 'lodash/findIndex';\nimport {useCallback} from 'react';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport {useLayoutEffect} from 'react';\nimport {useRef} from 'react';\nimport React from 'react';\nimport {atom} from 'recoil';\nimport {PASSIVE_ROOT_ID} from '../../../Constants';\nimport {ACTIVE_ROOT_ID} from '../../../Constants';\nimport {PRIMARY_COLOR} from '../../../Constants';\nimport {removeOne} from '../../utils/Utils';\nimport ConfirmMenuItem from '../ConfirmMenuItem';\nimport Grid from '../Grid';\nimport Collapse from '../transitions/Collapse';\nimport TreeGroupFHG from './TreeGroupFHG';\nimport {useDrag} from 'react-dnd';\nimport {useDrop} from 'react-dnd';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport update from 'immutability-helper';\n\nconst COLLAPSE_TIMEOUT = 500;\nconst SCROLL_TIMEOUT = 300;\n\nexport const moveState = atom({\n   key: 'moveState',\n   default: [],\n});\n\nexport const ExpandMore = styled((props) => {\n   const {expand, ...other} = props;\n   return <IconButton {...other} />;\n})(({theme, expand}) => ({\n   transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n   marginLeft: 'auto',\n   color: expand ? theme.palette.primary.light : undefined,\n   transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n   }),\n}));\n\nconst useStyles = makeStyles(\n   (theme) => ({\n      root: {\n         width: 320,\n         height: 310,\n         display: 'flex',\n         flexDirection: 'column',\n         marginLeft: 'auto',\n         marginRight: 'auto',\n         marginBottom: 'auto,',\n         overflow: 'hidden',\n      },\n      contentRoot: {\n         // flex: '1 1 100%',\n         paddingTop: 0,\n         paddingBottom: theme.spacing(0.5),\n         flex: '1 1 auto',\n         height: '100%',\n         overflow: 'auto',\n         borderBottom: `1px solid ${theme.palette.divider}`,\n      },\n      titleStyle: {\n         fontWeight: 500,\n         fontSize: 16,\n         color: 'rgba(0, 0, 0, 0.87)',\n      },\n      subtitleStyle: {\n         color: 'rgba(0, 0, 0, 0.54)',\n         fontSize: 14,\n      },\n      listItemStyle: {\n         color: 'rgba(0, 0, 0, 0.87)',\n         fontSize: 14,\n      },\n      buttonStyle: {\n         '&:hover': {\n            color: `#91B867`,\n         },\n      },\n      moveStyle: {\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n      },\n      maskStyle: {\n         filter: 'invert(43%) sepia(12%) saturate(0%) hue-rotate(223deg) brightness(95%) contrast(103%)',\n         // filter: 'invert(43%) sepia(18%) saturate(0%) hue-rotate(284deg) brightness(96%) contrast(81%)',\n         '&:hover': {\n            filter: 'invert(63%) sepia(39%) saturate(454%) hue-rotate(46deg) brightness(94%) contrast(86%)',\n         },\n      },\n      deleteColorStyle: {\n         backgroundColor: lighten(theme.palette.error.light, 0.7),\n         '&:hover': {\n            backgroundColor: lighten(theme.palette.error.light, 0.8),\n         },\n      },\n      deleteButtonStyle: {\n         '&:hover': {\n            color: theme.palette.error.main,\n         },\n      },\n      moveTypeStyle: {\n         transition: 'transform 800ms ease-in-out  100ms',\n         willChange: 'transform',\n         userSelect: 'none',\n      },\n   }),\n   {name: 'TreeCardViewStyles'}\n);\nexport const ITEM_DRAG_TYPE = 'item';\n\nconst TreeItemFHG = React.forwardRef(function TreeItemFHG(\n   {\n      ContentComponent,\n      defaultExpanded,\n      expandAll,\n      height,\n      width,\n      childCount,\n      onMoveX,\n      index,\n      onMove,\n      onAdd,\n      onEdit,\n      onDelete,\n      item,\n      itemsKey = 'items',\n      parentKey,\n      labelKey,\n      parent,\n      onHoverX,\n      onUpdateMoveX,\n   },\n   ref\n) {\n   const classes = useStyles();\n   const groupRef = useRef();\n   const itemRef = useRef();\n   const myRef = useRef();\n\n   const [isMoveHorizontal, setIsMoveHorizontal] = useState(false);\n\n   //Need duplicate tracking to access changes inside the drag and drop callbacks. Can't use useCallback because they don't update properly.\n   const refChild = useRef({\n      childItems: [],\n      isMoveHorizontal: false,\n   });\n   const [childItems, setChildItems] = useState();\n\n   useEffect(() => {\n      const array = item?.[itemsKey] || [];\n\n      if (array.length > 0) {\n         for (let i = 0; i < array.length; i++) {\n            if (array[i].order !== i) {\n               array[i].order = i;\n            }\n         }\n      }\n      refChild.current.childItems = array;\n      setChildItems(array);\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [item?.[itemsKey]]);\n\n   const handleUpdateMoveX = useCallback(\n      (dragItem, monitor) => {\n         if (!!onMoveX) {\n            if (monitor?.didDrop()) {\n               let useMove = [];\n               const updatedItems = refChild.current.childItems || [];\n\n               for (let i = 0; i < updatedItems.length; i++) {\n                  const item = updatedItems[i];\n\n                  if (i !== item.order) {\n                     useMove.push({seat: item, order: i});\n                  }\n               }\n\n               onMoveX(useMove);\n            } else {\n               revertMoveX();\n            }\n         }\n      },\n      [isMoveHorizontal, onMoveX]\n   );\n\n   const [, drag, dragPreview] = useDrag(\n      () => ({\n         type: ITEM_DRAG_TYPE,\n         end: onUpdateMoveX,\n         item,\n         canDrag: () => !!onMove && item?.isEditable !== false && parent,\n         collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n         }),\n      }),\n      [item, onUpdateMoveX]\n   );\n\n   const aDrop = useCallback(\n      (droppedItem) => {\n         if (!refChild.current.isMoveHorizontal) {\n            // debugger;\n            setRefresh(new Date());\n            onMove?.(droppedItem, item);\n         }\n      },\n      [item, onMove]\n   );\n\n   const revertMoveX = () => {\n      refChild.current.childItems = item[itemsKey] || [];\n      setChildItems(item[itemsKey] || []);\n      refChild.current.isMoveHorizontal = false;\n      setRefresh(new Date());\n   };\n   const [{isOver, canDrop, dragItem}, drop] = useDrop({\n      accept: ITEM_DRAG_TYPE,\n      drop: aDrop,\n      canDrop: (dropItem) => {\n         // Is the dropItem being dropped on a node that doesn't allow children to be added.\n         if (item?.hasAdd === false) {\n            return undefined;\n         }\n         // Is the dropItem being dropped on itself?\n         if (dropItem?.id === item?.id) {\n            return undefined;\n         }\n         // Is the dropItem being dropped on its own parent? If so the dropItem is already a child of the parent.\n         if (dropItem?.[parentKey] === item?.id) {\n            return undefined;\n         }\n         if (!dropItem?.[parentKey]) {\n            if (\n               (dropItem?.isActive && item?.id === ACTIVE_ROOT_ID) ||\n               (!dropItem?.isActive && item?.id === PASSIVE_ROOT_ID)\n            ) {\n               return undefined;\n            }\n         }\n         return dropItem;\n      },\n      hover(hoverItem, monitor) {\n         if (!!onMoveX) {\n            if (!myRef.current) {\n               revertMoveX();\n               return;\n            }\n            // Don't replace items with themselves\n            if (hoverItem.id === item.id) {\n               return;\n            }\n\n            // Don't move horizontally if the parents of the two items aren't the same.\n            if (hoverItem?.[parentKey] !== item?.[parentKey]) {\n               revertMoveX();\n               return;\n            }\n            // Original index where the item was before the drag.\n            const dragIndex = hoverItem.order;\n            // New index that the item is dragged and is hovering over.\n            const hoverIndex = index;\n\n            // Determine rectangle on screen\n            const hoverBoundingRect = myRef.current?.getBoundingClientRect();\n            // Get vertical middle\n            const hoverForths = hoverBoundingRect.width / 4;\n            const hoverThreeForths = hoverForths * 3;\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n            // Get pixels to the left\n            const hoverClientX = clientOffset.x - hoverBoundingRect.left;\n\n            // Dragging right, but is the hover in the right 1/4 of the item\n            if (dragIndex < hoverIndex && hoverClientX < hoverThreeForths) {\n               refChild.current.isMoveHorizontal = false;\n               setIsMoveHorizontal(false);\n               return;\n            }\n\n            // Dragging left, but is the hover in the left 1/4 of the item\n            if (dragIndex > hoverIndex && hoverClientX > hoverForths) {\n               refChild.current.isMoveHorizontal = false;\n               setIsMoveHorizontal(false);\n               return;\n            }\n            onHoverX?.(dragIndex, hoverIndex);\n            setRefresh(new Date());\n            refChild.current.isMoveHorizontal = hoverItem.id;\n            setIsMoveHorizontal(hoverItem.id);\n         }\n      },\n      collect: (monitor) => ({\n         isOver: monitor.isOver(),\n         canDrop: monitor.canDrop(),\n         dragItem: monitor.getItem(),\n      }),\n   });\n   const [expanded, setExpanded] = React.useState(expandAll);\n\n   const [showExpanded, setShowExpanded] = React.useState(expandAll);\n   const [refresh, setRefresh] = useState(Date.now());\n\n   const [anchorEl, setAnchorEl] = React.useState(null);\n\n   // When the item is dragged horizontally only show the drop target as active if the item is in the middle half of the item.\n   const isActive = isOver && canDrop && !refChild.current.isMoveHorizontal;\n\n   useEffect(() => {\n      if (defaultExpanded?.length > 0 && !expanded && item) {\n         const foundIndex = indexOf(defaultExpanded, item?.id);\n\n         if (foundIndex >= 0) {\n            handleExpand();\n            removeOne(defaultExpanded, foundIndex);\n         }\n      }\n   }, [defaultExpanded, expanded, item]);\n\n   useLayoutEffect(() => {\n      if (expanded) {\n         setTimeout(() => {\n            groupRef.current?.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'nearest'});\n         }, SCROLL_TIMEOUT);\n      } else {\n         setTimeout(() => {\n            itemRef.current?.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'nearest'});\n         }, SCROLL_TIMEOUT);\n      }\n   }, [expanded, itemRef, groupRef]);\n\n   const handleHoverX = useCallback(\n      (dragIndex, hoverIndex) => {\n         if (dragIndex !== undefined && hoverIndex !== undefined) {\n            const array = item?.[itemsKey] || [];\n            const test = update(array, {\n               $splice: [\n                  [dragIndex, 1],\n                  [hoverIndex, 0, array[dragIndex]],\n               ],\n            });\n            refChild.current.childItems = test;\n            setChildItems(test);\n            setRefresh(new Date());\n         }\n      },\n      [item, itemsKey]\n   );\n\n   const handleExpand = () => {\n      setShowExpanded(true);\n      setTimeout(() => {\n         setExpanded(true);\n      }, 10);\n   };\n\n   const handleCollapse = () => {\n      setExpanded(false);\n      setTimeout(() => {\n         setShowExpanded(false);\n      }, COLLAPSE_TIMEOUT);\n   };\n\n   const handleExpandClick = () => {\n      const newExpanded = !expanded;\n\n      if (newExpanded) {\n         handleExpand();\n      } else {\n         handleCollapse();\n      }\n   };\n\n   const handleAdd = (event) => {\n      event?.stopPropagation();\n      event?.preventDefault();\n      onAdd?.(item);\n      handleExpand();\n   };\n\n   const handleEdit = (event) => {\n      event?.stopPropagation();\n      event?.preventDefault();\n      onEdit?.(item);\n   };\n\n   const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n   };\n\n   const handleClose = () => {\n      setAnchorEl(null);\n   };\n\n   const handleDelete = async (event) => {\n      event?.stopPropagation();\n      event?.preventDefault();\n\n      handleClose();\n      await onDelete?.(item);\n      const index = findIndex(item[itemsKey], {id: item.id});\n      removeOne(item[itemsKey], index);\n      setRefresh(new Date());\n   };\n\n   drag(drop(myRef));\n   return (\n      <Grid\n         id={'Tree' + item?.id}\n         key={'TreeItemRoot' + item?.id}\n         ref={dragPreview}\n         name={'Tree Item Root'}\n         container\n         item\n         direction={'column'}\n         alignContent={'center'}\n         resizable={false}\n         overflow={'auto'}\n         fullWidth={false}\n         style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            opacity: dragItem?.id === item?.id ? 0.3 : 1,\n         }}\n      >\n         <Grid ref={myRef} item style={{marginLeft: 'auto', marginRight: 'auto'}}>\n            <Card\n               className={classes.root}\n               style={{\n                  height: item?.height || height,\n                  width: item?.width || width,\n                  margin: 2,\n                  backgroundColor: isActive ? '#F0F6EA' : undefined,\n               }}\n               ref={itemRef}\n               elevation={2}\n            >\n               <CardHeader\n                  title={\n                     <Box alignItems={'center'} display={'flex'}>\n                        {!!onMove && item?.isEditable !== false && parent && (\n                           <DragIndicatorIcon className={classes.buttonStyle} style={{color: '#707070'}} />\n                        )}\n                        {item?.[labelKey] || 'Untitled'}\n                     </Box>\n                  }\n                  titleTypographyProps={{variant: 'subtitle1', className: classes.titleStyle}}\n                  action={\n                     <React.Fragment>\n                        {item?.isEditable !== false && (\n                           <IconButton size={'small'} onClick={handleEdit} className={classes.buttonStyle}>\n                              <Edit fontSize={'small'} />\n                           </IconButton>\n                        )}\n                        {item?.isEditable !== false && onDelete && (\n                           <React.Fragment>\n                              <IconButton size={'small'} onClick={handleClick} className={classes.buttonStyle}>\n                                 <MoreVert fontSize={'small'} />\n                              </IconButton>\n                              <Menu\n                                 anchorEl={anchorEl}\n                                 keepMounted\n                                 open={Boolean(anchorEl)}\n                                 onClose={handleClose}\n                                 anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'center',\n                                 }}\n                                 transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                 }}\n                              >\n                                 <ConfirmMenuItem\n                                    className={classes.buttonStyle}\n                                    messageKey='entity.confirmRemoveValue.message'\n                                    color={'error'}\n                                    onConfirm={handleDelete}\n                                    values={{type: 'entity', name: item?.name}}\n                                    size='small'\n                                    submitStyle={classes.deleteColorStyle}\n                                    startIcon={Delete}\n                                    buttonTypographyProps={{variant: 'inherit'}}\n                                    // disabled={isSaving || isNew}\n                                 />\n                              </Menu>\n                           </React.Fragment>\n                        )}\n                     </React.Fragment>\n                  }\n               />\n               <CardContent classes={{root: classes.contentRoot}}>\n                  <Box height={'100%'} minHeight={100}>\n                     {ContentComponent && <ContentComponent item={item} />}\n                  </Box>\n               </CardContent>\n               <CardActions>\n                  <Grid container justify={'space-between'}>\n                     {/*Left actions*/}\n                     <Grid item flex={'1 1 33%'}>\n                        {item?.hasAdd !== false && (\n                           <IconButton size={'small'} onClick={handleAdd}>\n                              <AddCircle fontSize={'small'} className={classes.buttonStyle} />\n                           </IconButton>\n                        )}\n                     </Grid>\n                     {/*Center actions*/}\n                     <Grid container item alignItems={'center'} justify={'center'} fullWidth={false} flex={'1 1 33%'}>\n                        {item?.[itemsKey]?.length > 0 && (\n                           <ExpandMore\n                              expand={expanded}\n                              onClick={handleExpandClick}\n                              size={'small'}\n                              style={{marginRight: 'auto'}}\n                              className={classes.buttonStyle}\n                           >\n                              <ExpandMoreIcon />\n                           </ExpandMore>\n                        )}\n                     </Grid>\n                     {/*Right Actions*/}\n                     <Grid item flex={'1 1 33%'} />\n                  </Grid>\n               </CardActions>\n            </Card>\n         </Grid>\n         <Grid name={'Expanding Grid'} container item ref={groupRef} resizable={false} fullWidth={false}>\n            {showExpanded && item?.[itemsKey]?.length > 0 && (\n               <>\n                  <Collapse in={expanded}>\n                     <Grid\n                        key={'TreeItemExpanding' + item?.id}\n                        name={'Expanding Grid'}\n                        container\n                        item\n                        resizable={false}\n                        fullWidth={false}\n                     >\n                        <Grid item style={{height: 20, marginLeft: 'auto', marginRight: 'auto'}} fullWidth>\n                           <Divider\n                              orientation={'vertical'}\n                              flexItem\n                              style={{\n                                 height: 20,\n                                 marginRight: 'auto',\n                                 marginLeft: 'auto',\n                                 backgroundColor: PRIMARY_COLOR,\n                                 width: 2,\n                              }}\n                           />\n                        </Grid>\n                        <TreeGroupFHG key={'ExpandedTreeItem' + item?.id + refresh} height={height} onMove={onMove}>\n                           {childItems?.map((child, index) => (\n                              <TreeItemFHG\n                                 key={'child' + child?.order + '' + child?.id}\n                                 ContentComponent={ContentComponent}\n                                 onMoveX={onMoveX}\n                                 onHoverX={handleHoverX}\n                                 item={child}\n                                 parent={item}\n                                 index={index}\n                                 itemsKey={itemsKey}\n                                 defaultExpanded={defaultExpanded}\n                                 expandAll={expandAll && expanded}\n                                 labelKey={labelKey}\n                                 parentKey={parentKey}\n                                 height={height}\n                                 width={width}\n                                 onMove={onMove}\n                                 onEdit={onEdit}\n                                 onAdd={onAdd}\n                                 onDelete={onDelete}\n                                 onUpdateMoveX={handleUpdateMoveX}\n                              />\n                           ))}\n                        </TreeGroupFHG>\n                     </Grid>\n                  </Collapse>\n               </>\n            )}\n         </Grid>\n      </Grid>\n   );\n});\n\nexport default TreeItemFHG;\n","import {Drawer} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {EDIT_DRAWER_WIDTH} from '../Constants';\nimport {APPBAR_SMALL_HEIGHT} from '../Constants';\nimport {APPBAR_HEIGHT} from '../Constants';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {useEffect} from 'react';\n\nconst useStyles = makeStyles(theme => ({\n   inputStyle: {\n      backgroundColor: theme.palette.background.default,\n   },\n   frameStyle: {\n      padding: theme.spacing(4, 2),\n   },\n   expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n         duration: theme.transitions.duration.shortest,\n      }),\n   },\n   expandOpen: {\n      transform: 'rotate(180deg)',\n   },\n   titleStyle: {\n      paddingTop: theme.spacing(2),\n   },\n   drawerPaper: props => ({\n      backgroundColor: props?.backgroundColor || theme.palette.background.paper,\n      width: props?.width || EDIT_DRAWER_WIDTH,\n      maxWidth: '100%',\n      marginTop: APPBAR_HEIGHT,\n      height: `calc(100% - ${APPBAR_HEIGHT}px)`,\n      overflow: 'visible',\n      [theme.breakpoints.down('sm')]: {\n         marginTop: APPBAR_SMALL_HEIGHT,\n         height: `calc(100% - ${APPBAR_SMALL_HEIGHT}px)`,\n      },\n   }),\n   backdropStyle: {\n      marginTop: APPBAR_HEIGHT,\n      [theme.breakpoints.down('sm')]: {\n         marginTop: APPBAR_SMALL_HEIGHT,\n      },\n   },\n   closeButtonStyle: {\n      '@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)': {\n         position: 'absolute',\n         top: 0,\n         right: 0,\n      },\n      '@supports not (-ms-high-contrast: none)': {\n         position: 'sticky',\n      },\n      right: 0,\n      top: 0,\n      marginLeft: 'auto',\n      marginBottom: theme.spacing(-6),\n      zIndex: 1001,\n   },\n}), {name: 'EditDrawerStyles'});\n\nexport default function EditDrawer({open = true, onClose, children, ...styleProps}) {\n   const classes = useStyles(styleProps);\n   const history = useHistory();\n   const location = useLocation();\n\n   useEffect(() => {\n      //POP only occurs when this URL is reached through browser action. App actions will be 'Replace' or 'Push'.\n      if (history?.action === 'POP') {\n         location.state = {};\n         history.replace(location);\n      }\n   }, [history, location]);\n\n   return (\n      <Drawer\n         anchor={'right'}\n         open={open}\n         // onClose={toggleDrawer(false)}\n         // onOpen={toggleDrawer(true)}\n         classes={{\n            paper: classes.drawerPaper,\n         }}\n         ModalProps={{disableEscapeKeyDown: true, BackdropProps: {className: classes.backdropStyle}}}\n      >\n         {open && onClose && (\n            <IconButton key='close' className={classes.closeButtonStyle} aria-label='Close' color='inherit'\n                        onClick={onClose}>\n               <CloseIcon/>\n            </IconButton>\n         )}\n         {children}\n      </Drawer>\n   );\n}\n"],"sourceRoot":""}