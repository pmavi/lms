{"version":3,"sources":["../node_modules/@material-ui/lab/esm/TreeView/TreeViewContext.js","../node_modules/lodash/uniq.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js","../node_modules/@material-ui/lab/esm/TreeView/TreeView.js","../node_modules/@material-ui/icons/esm/Add.js"],"names":["TreeViewContext","React","baseUniq","require","module","exports","array","length","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","comparator","index","includes","isCommon","result","seen","set","outer","value","computed","seenIndex","push","Set","noop","values","TreeItem","props","ref","children","classes","className","collapseIcon","endIcon","expandIcon","iconProp","icon","label","nodeId","onClick","onLabelClick","onIconClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_React$useContext","contextIcons","icons","focus","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","selectNode","selectRange","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","expandAllSiblings","toggleExpansion","isExpanded","isFocused","isSelected","isTabbable","multiSelect","getParent","mapFirstChar","addNodeToNodeMap","removeNodeFromNodeMap","nodeRef","contentRef","handleRef","useForkRef","expandable","Boolean","Array","isArray","expanded","focused","tabbable","selected","theme","useTheme","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","ariaSelected","handleNextArrow","event","handlePreviousArrow","parent","childIds","forEach","child","current","textContent","substring","toLowerCase","_extends","clsx","root","role","flag","key","altKey","currentTarget","target","str","ctrlPressed","ctrlKey","metaKey","shiftKey","end","stopPropagation","direction","match","preventDefault","tabIndex","content","multiple","defaultPrevented","iconContainer","Typography","component","unmountOnExit","group","in","withStyles","listStyle","margin","padding","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","fade","primary","main","selectedOpacity","hoverOpacity","marginLeft","width","display","alignItems","cursor","marginRight","flexShrink","justifyContent","fontSize","paddingLeft","position","name","findNextFirstChar","firstChars","startIndex","char","i","defaultExpandedDefault","defaultSelectedDefault","TreeView","_props$defaultExpande","defaultExpanded","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","expandedProp","onNodeSelect","onNodeToggle","selectedProp","_React$useState","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","visibleNodes","_useControlled","useControlled","controlled","default","state","_useControlled2","_slicedToArray","setExpandedState","_useControlled3","_useControlled4","setSelectedState","id","indexOf","getNextNode","nodeIndex","getPreviousNode","getLastNode","getFirstNode","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","nodes","base","start","next","filter","handleRangeSelect","range","a","b","aIndex","bIndex","Math","min","max","slice","getNodesInRange","newSelected","concat","handleMultipleSelect","handleSingleSelect","stacked","arguments","undefined","_nodes$start","getNodesToRemove","map","node","cleanUpFirstCharMap","newMap","parentMap","parentChildren","c","oldFocusedNodeId","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","arr1","arr2","arrayDiff","buildVisible","list","item","childs","noopSelection","Provider","lowercaseChar","firstCharIds","Object","keys","firstChar","diff","newExpanded","oldTabbable","childrenIds","currentMap","childId","currentChildMap","createSvgIcon","d"],"mappings":"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","file":"static/js/16.b00bc760.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TreeViewContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nimport TreeViewContext from './TreeViewContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"sourceRoot":""}