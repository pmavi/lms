{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","components/Users.js"],"names":["ListItemText","React","props","ref","children","classes","className","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","other","_objectWithoutProperties","dense","ListContext","type","Typography","_extends","variant","component","display","color","clsx","root","multiline","withStyles","flex","minWidth","marginTop","marginBottom","paddingLeft","name","useStyles","makeStyles","theme","margin","spacing","infoInnerStyle","padding","frameStyle","drawerStyle","Users","history","useHistory","useTheme","userId","useParams","location","useLocation","useQueryFHG","USER_ADMIN_QUERY","undefined","userData","usePageTitle","titleKey","sortedUsers","useMemo","users","sortBy","container","fullWidth","fullHeight","direction","overflow","wrap","item","resizable","backgroundColor","palette","background","default","width","ADMIN_DRAWER","ModalProps","BackdropProps","style","height","APPBAR_SMALL_HEIGHT","id","labelKey","startIcon","onClick","event","stopPropagation","preventDefault","state","edit","USER_EDIT","pathname","ADMIN_USERS_PATH","push","isScrollable","map","user","button","Link","to","ADMIN_USER_PATH","replace","selected","contactName","username","maxWidth","isAdmin"],"mappings":"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","file":"static/js/17.636782e4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import {List} from '@material-ui/core';\nimport {ListItemText} from '@material-ui/core';\nimport {ListItem} from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {Add} from '@material-ui/icons';\nimport {sortBy} from 'lodash';\nimport {useMemo} from 'react';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {useLocation} from 'react-router-dom';\nimport {ADMIN_USERS_PATH} from '../Constants';\nimport {USER_EDIT} from '../Constants';\nimport {ADMIN_USER_PATH} from '../Constants';\nimport {APPBAR_SMALL_HEIGHT} from '../Constants';\nimport {ADMIN_DRAWER} from '../Constants';\nimport {USER_ADMIN_QUERY} from '../data/QueriesGL';\nimport ButtonFHG from '../fhg/components/ButtonFHG';\nimport Grid from '../fhg/components/Grid';\nimport ResponsiveMobileDrawer from '../fhg/components/ResponsiveMobileDrawer';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useQueryFHG from '../fhg/hooks/data/useQueryFHG';\nimport usePageTitle from '../fhg/hooks/usePageTitle';\nimport UserEdit from './UserEdit';\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      margin: theme.spacing(0, 2),\n   },\n   infoInnerStyle: {\n      padding: theme.spacing(0, 2),\n   },\n   frameStyle: {\n      padding: theme.spacing(3, 0),\n   },\n   drawerStyle: {\n      padding: theme.spacing(3, 2),\n   },\n}), {name: 'UsersStyles'});\n\nexport default function Users() {\n   const classes = useStyles();\n   const history = useHistory();\n   const theme = useTheme();\n   const {userId} = useParams();\n   const location = useLocation();\n\n   const [userData] = useQueryFHG(USER_ADMIN_QUERY, undefined, 'user.type');\n   usePageTitle({titleKey: 'user.title2.label'});\n\n   const sortedUsers = useMemo(() => {\n      if (userData?.users) {\n         return sortBy(userData?.users, 'contactName');\n      }\n      return [];\n   }, [userData]);\n\n   const handleNewUser = (event) => {\n      event?.stopPropagation();\n      event?.preventDefault();\n\n      location.state = {edit: USER_EDIT};\n      location.pathname = ADMIN_USERS_PATH;\n      history.push(location);\n   };\n\n   return (\n      <Grid container fullWidth fullHeight className={classes.frameStyle} direction={'row'} overflow={'visible'}\n            wrap={'nowrap'}>\n         <Grid item fullHeight resizable={false}>\n            <ResponsiveMobileDrawer\n               backgroundColor={theme.palette.background.default}\n               width={ADMIN_DRAWER}\n               ModalProps={{BackdropProps: {style: {height: '100%', marginTop: APPBAR_SMALL_HEIGHT}}}}>\n               <Grid container fullWidth className={classes.drawerStyle}>\n                  <Grid container item resizable={false} direction={'row'}>\n                     <Grid item resizable={false} className={classes.infoInnerStyle}>\n                        <TypographyFHG variant={'h5'} id={'user.adminTitle.label'} color={'textSecondary'}/>\n                     </Grid>\n                     <Grid item>\n                        <ButtonFHG labelKey='user.new.button' startIcon={(<Add/>)} onClick={handleNewUser}/>\n                     </Grid>\n                  </Grid>\n                  <Grid isScrollable className={classes.root}>\n                     <List dense>\n                        {sortedUsers.map(user => (\n                           <ListItem button component={Link} to={ADMIN_USER_PATH.replace(':userId', user.id)}\n                                     selected={userId === user.id}>\n                              <ListItemText primary={user.contactName || user.username}\n                                            primaryTypographyProps={{variant: 'subtitle1'}}/>\n                           </ListItem>\n                        ))}\n                     </List>\n                  </Grid>\n               </Grid>\n            </ResponsiveMobileDrawer>\n         </Grid>\n         {(userId || location?.state?.edit === USER_EDIT) && (\n            <Grid item container direction={'column'} overflow={'visible'} style={{maxWidth: 480}}>\n               <UserEdit isAdmin/>\n            </Grid>\n         )}\n      </Grid>\n   );\n}\n"],"sourceRoot":""}