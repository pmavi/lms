{"version":3,"sources":["../node_modules/lodash/upperFirst.js","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","components/TaskEdit.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/icons/esm/ExpandLess.js","components/TextFieldLF.js","fhg/components/ProgressButton.js","fhg/components/edit/useEditData.js","fhg/components/edit/Form.js","fhg/components/edit/Prompt.js","../node_modules/lodash/sortBy.js","fhg/hooks/useKeyDown.js","fhg/components/KeyboardDatePickerFHG.js","fhg/components/CheckboxFHG.js","../node_modules/lodash/defer.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","fhg/components/ValidateTarget.js","fhg/components/ConfirmButton.js","components/AutocompleteLF2.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","components/AutocompleteLF.js","../node_modules/lodash/capitalize.js","../node_modules/lodash/_baseDelay.js"],"names":["upperFirst","require","createCaseFirst","module","exports","castSlice","hasUnicode","stringToArray","toString","methodName","string","strSymbols","undefined","chr","charAt","trailing","join","slice","baseSlice","array","start","end","length","index","result","Array","FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","ListContext","type","variant","multiline","flex","minWidth","marginTop","marginBottom","paddingLeft","REPEAT_INTERVALS","useStyles","makeStyles","formStyle","maxHeight","width","infoRootStyle","spacing","overflow","infoInnerStyle","padding","buttonPanelStyle","borderTop","divider","margin","frameStyle","historyStyle","fontSize","buttonStyle","error","main","deleteColorStyle","backgroundColor","lighten","light","deleteButtonStyle","TaskEdit","useTheme","clientId","useParams","history","useHistory","editItem","id","uuid","subject","isCompleted","dueDate","repeatTask","repeatAmount","repeatInterval","isDeleted","location","useLocation","taskId","state","isNew","useQueryFHG","USER_CLIENT_QUERY","variables","skip","validate","userData","users","useMemo","map","user","contactName","TASK_QUERY","taskData","useMutationFHG","TASK_CREATE_UPDATE","taskCreateUpdate","ENTITY_CLIENT_QUERY","entitiesData","lastHistoryVariables","completionDateTime","task","lastCompletionDate","TASK_HISTORY_TASK_QUERY","lastHistoryData","useLazyQueryFHG","loadHistory","historyData","data","loading","TASK_HISTORY_DELETE","taskHistoryDelete","taskHistory","lastCompletionDateTime","entities","sortBy","useState","isSaving","setIsSaving","expanded","setExpanded","useEffect","element","document","getElementById","scrollIntoViewIfNeeded","scrollIntoView","useEditData","editValues","handleChange","isChanged","setIsChanged","defaultValues","setDefaultValues","getValue","isPickerOpen","setIsPickerOpen","TASK_DELETE","taskDelete","handleDeleteTask","event","a","stopPropagation","preventDefault","optimisticResponse","task_Delete","update","cacheDelete","getTaskCacheQueries","handleClose","useCallback","defer","replace","useKeyDown","handleSubmit","taskHistory_Delete","getTaskHistoryCacheQueries","__typename","cacheUpdate","container","fullWidth","fullHeight","direction","wrap","item","resizable","gutterBottom","onSubmit","when","labelTemplate","defaultValue","required","rows","shouldDisableDate","day","isSame","moment","isSameOrAfter","startOf","format","DATE_FORMAT_KEYBOARD","labelKey","options","onBlur","onFocus","userId","entityId","defaultChecked","xs","freeSolo","autoHighlight","valueKey","renderInput","params","size","endIcon","onClick","currentExpanded","aria-expanded","aria-label","in","timeout","unmountOnExit","style","isLoading","Fragment","disablePadding","taskHistoryItem","disableGutters","DATE_TIME_FORMAT","paddingTop","paddingBottom","justify","isProgress","dark","onConfirm","values","submitStyle","startIcon","buttonTypographyProps","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","SwitchBase","colorPrimary","fade","action","hoverOpacity","colorSecondary","createMuiTheme","TextFieldLF","placeholderKey","helpKey","helperText","InputLabelProps","InputProps","isFormattedNumber","classesProp","editData","internalKey","placeholder","textFieldProps","useLabelKey","currentLabel","useMessage","currentPlaceholder","helpText","useInputProps","get","console","log","inputComponent","CustomInputTextField","NumberFormatCustom","textFieldStyle","shrink","spinnerMargin","darkSpinnerMargin","ProgressButton","isSpinnerLight","typographyProps","buttonProperties","thickness","defaultValuesProp","requiredEditValues","isArrayType","isArray","setEditValues","requiredObject","pick","reason","newValue","useValue","handleArrayChange","newEditValues","editChange","componentName","edit","requiredValues","resetValues","defaultValuesLocal","useDefaultValues","handleSelectChange","path","editValue","setValue","hasValue","hasValueUtil","Form","forwardRef","onValid","customValidity","reportInvalid","useFormEl","useRef","formEl","isValid","isReport","form","current","checkValidity","reportValidity","defaultProps","Prompt","messageKey","message","intl","useIntl","getPrompt","newLocation","pathname","window","formatMessage","baseFlatten","baseOrderBy","baseRest","isIterateeCall","collection","iteratees","onClose","ignoreDefaultPrevented","onOther","handleKey","defaultPrevented","addEventListener","useLayoutEffect","removeEventListener","propTypes","PropTypes","func","buttonPadding","paddingRight","KeyboardDatePickerFHG","disableToolbar","autoOk","InputAdornmentProps","position","keyboardDatePickerProps","isSet","setIsSet","target","TextFieldComponent","TextFieldFHG","checkboxStyle","CheckboxFHG","checkboxProps","baseDelay","args","autoFocus","checkedProp","readOnly","tabIndex","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","input","newChecked","opacity","height","top","left","zIndex","ValidateTarget","aria-invalid","border","outline","messageStyle","background","snackbarMessageStyle","closeButtonStyle","right","ConfirmButton","titleKey","buttonLabelKey","onCancel","confirmProps","titleValues","onUndo","isModalOpen","setIsModalOpen","showUndelete","setShowUndelete","useTitleValues","handleUndoClose","submitKey","hideBackdrop","submitColor","messageValues","submitColorStyle","open","autoHideDuration","UNDO_DURATION","ContentProps","filter","createFilterOptions","AutocompleteLF2","editName","optionKey","autoComplete","multiple","autocompleteOptions","valueObject","find","valueLocal","setValueLocal","isObjectLike","valueObjectList","inputValue","filterOptions","filtered","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","renderOptionsKey","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","orders","iteratee","object","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","AutocompleteLF","otherProps","toLowerCase","wait","TypeError","setTimeout","apply"],"mappings":"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","file":"static/js/9.acfaacee.chunk.js","sourcesContent":["var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import {Divider} from '@material-ui/core';\nimport {List} from '@material-ui/core';\nimport {ListItemText} from '@material-ui/core';\nimport {ListItem} from '@material-ui/core';\nimport {Collapse} from '@material-ui/core';\nimport {TextField} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport {lighten} from '@material-ui/core/styles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport {Delete} from '@material-ui/icons';\nimport {ExpandLess} from '@material-ui/icons';\nimport {ExpandMore} from '@material-ui/icons';\nimport moment from 'moment';\nimport {Fragment} from 'react';\nimport {useMemo} from 'react';\nimport React, {useState, useCallback} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {v4 as uuid, validate} from 'uuid';\nimport {DATE_TIME_FORMAT} from '../Constants';\nimport {DATE_FORMAT_KEYBOARD} from '../Constants';\nimport {TASK_DELETE} from '../data/QueriesGL';\nimport {getTaskHistoryCacheQueries} from '../data/QueriesGL';\nimport {TASK_HISTORY_DELETE} from '../data/QueriesGL';\nimport {TASK_QUERY} from '../data/QueriesGL';\nimport {TASK_HISTORY_TASK_QUERY} from '../data/QueriesGL';\nimport {ENTITY_CLIENT_QUERY} from '../data/QueriesGL';\nimport {USER_CLIENT_QUERY} from '../data/QueriesGL';\nimport {getTaskCacheQueries} from '../data/QueriesGL';\nimport {TASK_CREATE_UPDATE} from '../data/QueriesGL';\nimport ButtonFHG from '../fhg/components/ButtonFHG';\nimport CheckboxFHG from '../fhg/components/CheckboxFHG';\nimport ConfirmButton from '../fhg/components/ConfirmButton';\nimport Form from '../fhg/components/edit/Form';\nimport Prompt from '../fhg/components/edit/Prompt';\nimport useEditData from '../fhg/components/edit/useEditData';\nimport Grid from '../fhg/components/Grid';\nimport KeyboardDatePickerFHG from '../fhg/components/KeyboardDatePickerFHG';\nimport Loading from '../fhg/components/Loading';\nimport ProgressButton from '../fhg/components/ProgressButton';\nimport TypographyFHG from '../fhg/components/Typography';\nimport useLazyQueryFHG from '../fhg/hooks/data/useLazyQueryFHG';\nimport useMutationFHG from '../fhg/hooks/data/useMutationFHG';\nimport useQueryFHG from '../fhg/hooks/data/useQueryFHG';\nimport {useEffect} from 'react';\nimport useKeyDown from '../fhg/hooks/useKeyDown';\nimport {cacheDelete} from '../fhg/utils/DataUtil';\nimport {cacheUpdate} from '../fhg/utils/DataUtil';\nimport AutocompleteLF from './AutocompleteLF';\nimport AutocompleteLF2 from './AutocompleteLF2';\nimport TextFieldLF from './TextFieldLF';\nimport {useLocation} from 'react-router-dom';\nimport defer from 'lodash/defer';\nimport map from 'lodash/map';\nimport sortBy from 'lodash/sortBy';\nimport capitalize from 'lodash/capitalize';\n\n\nconst REPEAT_INTERVALS = ['Days', 'Weeks', 'Months', 'Years'];\n\nconst useStyles = makeStyles(theme => ({\n   formStyle: {\n      maxHeight: '100%',\n      // overflow: 'hidden',\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n   },\n   infoRootStyle: {\n      maxHeight: `calc(100% - ${theme.spacing(5)}px)`,\n      '& > *': {\n         marginRight: theme.spacing(1),\n      },\n      overflow: 'auto',\n      marginBottom: theme.spacing(1),\n   },\n   infoInnerStyle: {\n      padding: theme.spacing(0, 2),\n   },\n   buttonPanelStyle: {\n      marginLeft: -8,\n      borderTop: `solid 1px ${theme.palette.divider}`,\n      margin: theme.spacing(0, 0, 0, 0),\n      padding: theme.spacing(1, 2, 0),\n      '& > *': {\n         marginRight: theme.spacing(1),\n      },\n   },\n   frameStyle: {\n      padding: theme.spacing(3, 0),\n   },\n   '::placeholder': {\n      color: '#707070 !important',\n   },\n   historyStyle: {\n      fontSize: '16px !important',\n   },\n   buttonStyle: {\n      // margin: theme.spacing(1),\n      '&:hover': {\n         color: theme.palette.error.main,\n      }\n   },\n   deleteColorStyle: {\n      backgroundColor: lighten(theme.palette.error.light, 0.7),\n      '&:hover': {\n         backgroundColor: lighten(theme.palette.error.light, 0.8),\n      }\n   },\n   deleteButtonStyle: {\n      '&:hover': {\n         color: theme.palette.error.main,\n      }\n   },\n\n}), {name: 'TaskEditStyles'});\n\nexport default function TaskEdit() {\n   const classes = useStyles();\n   const theme = useTheme();\n   const {clientId} = useParams();\n   const history = useHistory();\n   const editItem = {\n      id: uuid(),\n      subject: '',\n      isCompleted: false,\n      dueDate: null,\n      clientId,\n      repeatTask: false,\n      repeatAmount: 1,\n      repeatInterval: 'Month',\n      isDeleted: false,\n   };\n\n   const location = useLocation();\n   const taskId = location?.state?.id;\n   const isNew = !taskId;\n\n   const [userData] = useQueryFHG(USER_CLIENT_QUERY, {variables: {clientId}, skip: !validate(clientId)},\n      'user.type');\n   const users = useMemo(() => map(userData?.users || [], user => ({...user, name: user.contactName})),\n      [userData?.users]);\n   const [taskData] = useQueryFHG(TASK_QUERY, {variables: {taskId}, skip: !taskId},\n      'task.type');\n   const [taskCreateUpdate] = useMutationFHG(TASK_CREATE_UPDATE);\n\n   const [entitiesData] = useQueryFHG(ENTITY_CLIENT_QUERY, {variables: {clientId}, skip: !validate(clientId)});\n   //Get the last\n   const lastHistoryVariables = {taskId, completionDateTime: taskData?.task?.lastCompletionDate};\n   const [lastHistoryData] = useQueryFHG(TASK_HISTORY_TASK_QUERY,\n      {variables: lastHistoryVariables, skip: !taskId || !taskData?.task?.lastCompletionDate},\n      'taskHistory.type', false);\n   const [loadHistory, {data: historyData, loading}] = useLazyQueryFHG(TASK_HISTORY_TASK_QUERY, undefined,\n      'taskHistory.type', false);\n   const [taskHistoryDelete] = useMutationFHG(TASK_HISTORY_DELETE);\n\n   const taskHistory = useMemo(() => {\n      if (historyData?.taskHistory?.length > 0) {\n         return historyData.taskHistory;\n      } else if (taskData?.task?.lastCompletionDateTime) {\n         return [\n            {\n               id: 'history' + taskData.task.id,\n               completionDateTime: taskData.task.lastCompletionDateTime,\n            }\n         ];\n      } else {\n         return [];\n      }\n   }, [historyData, taskData?.task?.id, taskData?.task?.lastCompletionDateTime]);\n\n   const entities = sortBy(entitiesData?.entities || [], 'name');\n\n   const [isSaving, setIsSaving] = useState(false);\n   const [expanded, setExpanded] = React.useState(false);\n\n   useEffect(() => {\n      if (taskHistory) {\n         const element = document.getElementById('historyId');\n         if (element?.scrollIntoViewIfNeeded) {\n            element.scrollIntoViewIfNeeded();\n         } else {\n            element?.scrollIntoView(true);\n         }\n      }\n   }, [taskHistory]);\n\n   const handleExpandClick = () => {\n      const currentExpanded = !expanded;\n      setExpanded(currentExpanded);\n      if (currentExpanded && getValue('repeatTask')) {\n         loadHistory({variables: {taskId}});\n      }\n   };\n\n   const [\n      editValues, handleChange, {\n         isChanged = false,\n         setIsChanged,\n         defaultValues,\n         setDefaultValues,\n         getValue\n      }\n   ] = useEditData(isNew ? editItem : undefined, ['clientId']);\n\n   const [isPickerOpen, setIsPickerOpen] = useState(false);\n   // const [weekdays, setWeekdays] = useState([]);\n\n   const [taskDelete] = useMutationFHG(TASK_DELETE);\n\n   const handleDeleteTask = async (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      setIsSaving(true);\n\n      if (taskData?.task?.id) {\n         await taskDelete({\n            variables: {id: taskData?.task?.id},\n            optimisticResponse: {task_Delete: 1},\n            update: cacheDelete(getTaskCacheQueries(clientId), taskData?.task?.id),\n         });\n      }\n      setIsSaving(false);\n      handleClose();\n   };\n\n   useEffect(() => {\n      let isCompleted;\n\n      if (taskData?.task) {\n         // if (taskData.task.repeatTask) {\n         //    // If the task is repeating, but has no lastCompletionDateTime it has never been completed.\n         //    isCompleted = completedDuringLastInterval(taskData.task);\n         // } else {\n         //    isCompleted = taskData.task.isCompleted;\n         // }\n         setDefaultValues({repeatTask: false, repeatAmount: 1, ...taskData.task});\n      }\n   }, [taskData, setDefaultValues]);\n\n   const handleClose = useCallback(() => {\n      setIsChanged(false);\n      defer(() => {\n         location.state = undefined\n         history.replace(location);\n      });\n   }, [history, location, setIsChanged]);\n\n   useKeyDown(handleClose);\n\n   /**\n    * Submit the task.\n    * @return {Promise<void>}\n    */\n   const handleSubmit = useCallback(async () => {\n\n      if (isChanged) {\n         try {\n            setIsSaving(true);\n            if (lastHistoryData?.taskHistory?.id && getValue('repeatTask') && editValues.isCompleted === false &&\n               defaultValues.isCompleted === true) {\n               await taskHistoryDelete({\n                  variables: {id: lastHistoryData?.taskHistory?.id},\n                  optimisticResponse: {taskHistory_Delete: 1},\n                  update: cacheDelete(\n                     getTaskHistoryCacheQueries(lastHistoryVariables.taskId, lastHistoryVariables.completionDateTime),\n                     lastHistoryData?.taskHistory?.id),\n               });\n            }\n            if (editValues.repeatTask) {\n               editValues.repeatAmount = editValues.repeatAmount || 1;\n               editValues.repeatInterval = editValues.repeatInterval || REPEAT_INTERVALS[2];\n            }\n            await taskCreateUpdate({\n               variables: editValues,\n               optimisticResponse: {\n                  __typename: 'Mutation',\n                  task: {\n                     __typename: 'Task',\n                     ...defaultValues,\n                     ...editValues,\n                     subject: '',\n                     isDeleted: false,\n                  }\n               },\n               update: cacheUpdate(getTaskCacheQueries(clientId), editValues.id, 'task'),\n            });\n            setIsChanged(false);\n            handleClose();\n         } catch (e) {\n            //Intentionally left blank\n         } finally {\n            setIsSaving(false);\n         }\n      } else {\n         handleClose();\n      }\n   }, [getValue, lastHistoryData?.taskHistory?.id, lastHistoryVariables.completionDateTime,\n      lastHistoryVariables.taskId, taskHistoryDelete, clientId, taskCreateUpdate, handleClose, isChanged, defaultValues, editValues, setIsChanged]);\n\n   const handleDisableDate = (day) => {\n      return !(day.isSame(moment(defaultValues.dueDate)) || day.isSameOrAfter(moment().startOf('day')));\n   };\n\n   return (\n      <Grid container fullWidth fullHeight className={classes.frameStyle} direction={'column'} overflow={'visible'}\n            wrap={'nowrap'}>\n         <Grid item resizable={false} className={classes.infoInnerStyle}>\n            <TypographyFHG variant={'h5'} id={'task.title.label'} color={'textSecondary'} gutterBottom/>\n         </Grid>\n         <Grid item container resizable>\n            <Form onSubmit={(!isPickerOpen && handleSubmit) || undefined} className={classes.formStyle}>\n               <Prompt when={isChanged}/>\n               <Grid name={'Task Edit Root'} item fullWidth className={classes.infoRootStyle}\n                     overflow={'visible'}>\n                  <Grid name={'Task Edit Inner'} container item fullWidth className={classes.infoInnerStyle}\n                        overflow={'visible'}>\n                     <TextFieldLF\n                        key={'subject' + defaultValues.id}\n                        name={'subject'}\n                        labelTemplate={'task.{name}.label'}\n                        onChange={handleChange}\n                        defaultValue={defaultValues.subject}\n                        value={editValues.subject}\n                        required\n                        multiline\n                        rows={2}\n                        disabled={isSaving}\n                     />\n                     <KeyboardDatePickerFHG\n                        key={'dueDate' + defaultValues.id}\n                        name={'dueDate'}\n                        shouldDisableDate={handleDisableDate}\n                        format={DATE_FORMAT_KEYBOARD}\n                        labelKey={'task.dueDate.label'}\n                        defaultValue={defaultValues.dueDate}\n                        value={editValues.dueDate}\n                        onChange={handleChange}\n                        required\n                        disabled={isSaving}\n                     />\n                     <AutocompleteLF\n                        key={`'userId ${defaultValues.id} ${users?.length}`}\n                        name={'userId'}\n                        options={users}\n                        labelTemplate={'task.user.label'}\n                        onChange={handleChange}\n                        onBlur={() => setIsPickerOpen(false)}\n                        onFocus={() => setIsPickerOpen(true)}\n                        defaultValue={defaultValues.userId}\n                        fullWidth\n                     />\n                     <AutocompleteLF\n                        key={`'entityId ${defaultValues.id} ${entities?.length}`}\n                        name={'entityId'}\n                        options={entities}\n                        labelTemplate={'task.entity.label'}\n                        onChange={handleChange}\n                        onBlur={() => setIsPickerOpen(false)}\n                        onFocus={() => setIsPickerOpen(true)}\n                        defaultValue={defaultValues.entityId}\n                        value={editValues.entityId}\n                        fullWidth\n                     />\n                     <CheckboxFHG\n                        key={'repeatTask'}\n                        name={'repeatTask'}\n                        onChange={handleChange}\n                        color={'default'}\n                        labelKey={'task.repeatTask.label'}\n                        value={'repeatTask'}\n                        defaultChecked={defaultValues.repeatTask}\n                        checked={editValues.repeatTask}\n                        disabled={isSaving}\n                        marginTop={0}\n                        fullWidth\n                     />\n                     {getValue('repeatTask') === true && (\n                        <Grid container direction={'row'} spacing={1}>\n                           <Grid item xs={4}>\n                              <TextFieldLF\n                                 key={'repeatAmount' + defaultValues.id}\n                                 type={'number'}\n                                 name={'repeatAmount'}\n                                 labelTemplate={'task.{name}.label'}\n                                 onChange={handleChange}\n                                 defaultValue={defaultValues.repeatAmount || 1}\n                                 value={editValues.repeatAmount}\n                                 disabled={isSaving}\n                                 required\n                              />\n                           </Grid>\n                           <Grid item xs={8}>\n                              <AutocompleteLF2\n                                 key={'repeat' + defaultValues.id}\n                                 name={'repeatInterval'}\n                                 value={capitalize(getValue('repeatInterval', REPEAT_INTERVALS[2]))}\n                                 freeSolo={false}\n                                 autoHighlight\n                                 onChange={handleChange}\n                                 valueKey={false}\n                                 onBlur={() => setIsPickerOpen(false)}\n                                 onFocus={() => setIsPickerOpen(true)}\n                                 options={REPEAT_INTERVALS}\n                                 fullWidth\n                                 required\n                                 renderInput={(params) => (\n                                    <TextField {...params} label={<TypographyFHG id={'task.repeat.label'}/>}\n                                               variant={'outlined'} size={'small'} margin={'normal'}/>\n                                 )}\n                              />\n                           </Grid>\n                        </Grid>\n                     )}\n                     <CheckboxFHG\n                        key={'isCompleted'}\n                        name={'isCompleted'}\n                        onChange={handleChange}\n                        color={'default'}\n                        labelKey={'task.isCompleted.label'}\n                        value={'isCompleted'}\n                        defaultChecked={defaultValues.isCompleted}\n                        checked={editValues.isCompleted}\n                        disabled={isSaving}\n                        marginTop={0}\n                        fullWidth\n                     />\n                     {!isNew && <>\n                        <Button\n                           endIcon={expanded ? <ExpandMore/> : <ExpandLess/>}\n                           onClick={handleExpandClick}\n                           aria-expanded={expanded}\n                           aria-label='show more'\n                        >\n                           <TypographyFHG className={classes.historyStyle}>Show Completed Dates</TypographyFHG>\n                        </Button>\n                        <Collapse id='historyId' in={expanded} timeout='auto' unmountOnExit\n                                  style={{width: '100%', marginBottom: 8}}>\n                           {loading ? (\n                              <Loading isLoading={loading}/>\n                           ) : (\n                              <React.Fragment>\n                                 {taskHistory?.length > 0 ? (\n                                    <Grid container>\n                                       <List dense={true} disablePadding style={{width: '100%'}}>\n                                          <Divider/>\n                                          {taskHistory?.map(taskHistoryItem => (\n                                             <ListItem key={'list' + taskHistoryItem?.id} disableGutters\n                                                       style={{paddingLeft: 8}}>\n                                                <ListItemText style={{marginTop: 0, marginBottom: 0}}\n                                                              primary={(\n                                                                 <TypographyFHG variant={'subtitle2'}\n                                                                                style={{fontSize: 16}}>\n                                                                    {moment(taskHistoryItem.completionDateTime)\n                                                                       .format(DATE_TIME_FORMAT)}\n                                                                 </TypographyFHG>\n                                                              )}\n                                                />\n                                             </ListItem>\n                                          ))}\n                                          <Divider/>\n                                       </List>\n                                    </Grid>\n                                 ) : (\n                                    <Fragment>\n                                       <Divider/>\n                                       <Grid item style={{marginLeft: 8, paddingTop: 8, paddingBottom: 8}}>\n                                          <TypographyFHG>No Task History</TypographyFHG>\n                                       </Grid>\n                                       <Divider/>\n                                    </Fragment>\n                                 )}\n                              </React.Fragment>\n                           )}\n                        </Collapse>\n                     </>}\n                  </Grid>\n               </Grid>\n               <Grid container item direction={'row'} fullWidth className={classes.buttonPanelStyle}\n                     overflow={'visible'} resizable={false} justify={'space-between'}>\n                  <Grid item>\n                     <ProgressButton isProgress={isSaving} variant='text' color='primary' type={'submit'}\n                                     size='large' labelKey='save.label' disabled={isSaving}/>\n                     <ButtonFHG variant='text' size={'large'} labelKey={'cancel.button'} disabled={isSaving}\n                                onClick={() => handleClose()}/>\n                  </Grid>\n                  <Grid>\n                     <ConfirmButton\n                        className={classes.buttonStyle}\n                        color={theme.palette.error.dark}\n                        onConfirm={handleDeleteTask}\n                        values={{type: 'task', name: taskData?.task?.subject}}\n                        size='large'\n                        submitStyle={classes.deleteColorStyle}\n                        startIcon={<Delete/>}\n                        buttonTypographyProps={{variant: 'inherit'}}\n                        disabled={isSaving || isNew}\n                     />\n                  </Grid>\n               </Grid>\n            </Form>\n         </Grid>\n      </Grid>\n   );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport TextField from '@material-ui/core/TextField';\nimport get from 'lodash/get';\nimport React from 'react';\nimport NumberFormatCustom from '../fhg/components/NumberFormat';\nimport useMessage from '../fhg/hooks/useMessage';\nimport CustomInputTextField from './CustomInputTextField';\nimport ThemeProvider from './ThemeProvider';\n\nconst theme = createMuiTheme({\n   palette: {\n      text: {\n         secondary: '#707070',\n         primary: '#527928',\n      },\n   },\n});\n\n/**\n * The TextField with preset formats.\n\n * @param className\n * @param name\n * @param labelKey\n * @param placeholderKey\n * @param helpKey\n * @param helperText\n * @param defaultValue\n * @param value\n * @param onChange\n * @param margin\n * @param InputLabelProps\n * @param InputProps\n * @param label\n * @param fullWidth\n * @param isFormattedNumber\n * @param variant\n * @param size\n * @param labelTemplate\n * @param editData\n * @param classesProp\n * @param internalKey\n * @param textFieldProps\n * @param placeholder The placeholder for the text component.\n * @return {JSX.Element}\n * @constructor\n */\nexport default function TextFieldLF({\n   className,\n   name,\n   labelKey,\n   placeholderKey,\n   helpKey,\n   helperText,\n   defaultValue,\n   value,\n   onChange,\n   margin = 'normal',\n   InputLabelProps,\n   InputProps,\n   label,\n   fullWidth = true,\n   isFormattedNumber,\n   variant = 'outlined',\n   size = 'small',\n   labelTemplate,\n   editData,\n   classes: classesProp,\n   internalKey,\n   placeholder,\n   ...textFieldProps\n}) {\n   const classes = {...classesProp};\n   const useLabelKey = labelTemplate?.format({name}) || labelKey;\n   const currentLabel = useMessage(useLabelKey, label);\n   const currentPlaceholder = useMessage(placeholderKey) || placeholder;\n   const helpText = useMessage(helpKey, helperText) || helperText;\n\n   const useInputProps = {\n      ...InputProps,\n   };\n\n   if (isFormattedNumber) {\n      if (get(InputProps, 'inputComponent') || get(InputProps, 'inputProps.component')) {\n         console.log('isFormattedNumber cannot have a different input component.', InputProps);\n      }\n      useInputProps.inputComponent = CustomInputTextField;\n      useInputProps.inputProps =\n         {...get(InputProps, 'inputProps', {}), ...(textFieldProps.inputProps || {}), component: NumberFormatCustom};\n   }\n\n   return (\n      <ThemeProvider theme={theme}>\n         <TextField\n            {...textFieldProps}\n            key={'internal' + internalKey}\n            name={name}\n            className={`${classes.textFieldStyle} ${className}`}\n            label={currentLabel}\n            placeholder={currentPlaceholder}\n            helperText={helpText}\n            defaultValue={defaultValue}\n            value={value}\n            onChange={onChange}\n            InputProps={useInputProps}\n            InputLabelProps={{\n               ...InputLabelProps,\n               shrink: true,\n            }}\n            variant={variant}\n            size={size}\n            margin={margin}\n            fullWidth={fullWidth}\n         />\n      </ThemeProvider>\n   );\n}\n","// eslint-disable-next-line\nimport Button, {ButtonProps} from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from './Typography';\n\nconst useStyles = makeStyles(theme => ({\n   spinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: 'white',\n   },\n   darkSpinnerMargin: {\n      marginLeft: theme.spacing(0.5),\n      color: theme.palette.primary.main,\n   },\n}), {name: 'ProgressButtonStyles'});\n\n/**\n * Button Component to show progress.\n *\n * Reviewed:\n */\nProgressButton.propTypes = {\n   isProgress: PropTypes.bool.isRequired, //Indicates if the progress should be showing.\n   labelKey: PropTypes.string,            // Localization key for the button label.\n   typographyProps: PropTypes.any,        // The properties for the typography component.\n   ...Button.propTypes,\n};\n\n/**\n *\n * @param isProgress\n * @param labelKey\n * @param isSpinnerDark Indicates if the spinner should be dark.\n * @param children\n * @param typographyProps\n * @param buttonProperties {ButtonProps}\n * @return {JSX.Element}\n * @constructor\n */\nexport default function ProgressButton({isProgress = false, labelKey, isSpinnerLight = false, children, typographyProps, ...buttonProperties}) {\n   const classes = useStyles();\n\n   return (\n      <Button {...buttonProperties}>\n         {labelKey && (\n            <Typography variant={'inherit'} id={labelKey} {...typographyProps}/>\n         )}\n         {children}\n         {isProgress && <CircularProgress className={buttonProperties?.classes?.spinnerMargin || (!isSpinnerLight ? classes.darkSpinnerMargin : classes.spinnerMargin)} size={15} thickness={2.5}/>}\n      </Button>\n   );\n}\n\n","import get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport pick from 'lodash/pick';\nimport {useState, useEffect, useCallback} from 'react';\nimport {v4 as uuid} from 'uuid';\nimport {hasValue as hasValueUtil} from '../../utils/Utils';\nimport {editChange} from '../../utils/Utils';\n\nexport default function useEditData(defaultValuesProp, requiredEditValues = [], isArrayType = false, onChange) {\n   const [isChanged, setIsChanged] = useState(false);\n   const [defaultValues, setDefaultValues] = useState(defaultValuesProp ? defaultValuesProp : isArrayType ? [] : {});\n   const [editValues, setEditValues] = useState(\n      isArrayType ? [] : !isArray(requiredEditValues) ? requiredEditValues : {}\n   );\n\n   useEffect(() => {\n      if (defaultValues && !isArrayType) {\n         let requiredObject;\n\n         if (isArray(requiredEditValues)) {\n            requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n         } else {\n            requiredObject = {...defaultValues};\n         }\n\n         setEditValues({...editValues, ...requiredObject});\n      }\n      //editValues and requiredEditValues cause constant changes.\n      // eslint-disable-next-line\n   }, [defaultValues, isArrayType]);\n\n   /**\n    * Handle onChange events for the inputs.\n    *\n    * NOTE:\n    * Input components MUST have their name set to be set in the editValues.\n    *\n    * @param event The event that changed the input.\n    * @param value The value if the component is an Autocomplete\n    * @param reason The reason of the value change if Autocomplete\n    * @param newValue The value from the component.\n    * @param name the name of the component.\n    */\n   const handleChange = (event, value, reason, newValue, name) => {\n      let useValue = newValue;\n\n      if (isArrayType) {\n         handleArrayChange(event);\n      } else {\n         let newEditValues;\n\n         if (newValue) {\n            newEditValues = {...editValues, ...newValue};\n         } else {\n            useValue = editChange(event, value, reason, true, newValue, name);\n            newEditValues = {...editValues, ...useValue};\n         }\n         setEditValues(newEditValues);\n         if (onChange) {\n            let requiredObject;\n\n            if (isArray(requiredEditValues)) {\n               requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n            } else {\n               requiredObject = {...defaultValues};\n            }\n            onChange?.({...requiredObject, ...useValue}, newEditValues);\n         }\n\n         if (reason !== 'reset') {\n            setIsChanged(true);\n         }\n      }\n      return useValue;\n   };\n\n   const handleArrayChange = (event) => {\n      const index = get(event, 'target.dataset.index');\n      const {componentName, newValue} = editChange(event, undefined, undefined, false);\n\n      const edit = editValues[index];\n      if (!edit) {\n         let requiredValues = {};\n         // Is there a default at each index?\n         if (isArray(defaultValues)) {\n            const defaultValue = get(defaultValues, `[${index}]`);\n            if (defaultValue) {\n               if (isArray(requiredEditValues)) {\n                  requiredValues = pick(defaultValue, requiredEditValues);\n               } else {\n                  requiredValues = {uuid: defaultValue, id: defaultValue.id};\n               }\n            }\n            //Is there a generic default?\n         } else if (defaultValues) {\n            if (isArray(requiredEditValues)) {\n               requiredValues = pick(defaultValues, requiredEditValues);\n               requiredValues.uuid = uuid();\n            } else {\n               requiredValues = {uuid: uuid(), id: defaultValues.id};\n            }\n         }\n         editValues[index] = {[componentName]: newValue, ...requiredValues};\n      } else {\n         editValues[index] = {...edit, [componentName]: newValue};\n      }\n      setEditValues([...editValues]);\n      setIsChanged(true);\n   };\n\n   const resetValues = useCallback(\n      (defaultValuesLocal) => {\n         let requiredObject;\n         const useDefaultValues = defaultValuesLocal || defaultValuesProp || (isArrayType ? [] : {});\n\n         if (isArray(requiredEditValues)) {\n            requiredObject = pick(useDefaultValues, ['id', ...requiredEditValues]);\n         } else {\n            requiredObject = {...useDefaultValues};\n         }\n\n         setEditValues({...requiredObject});\n         setDefaultValues(useDefaultValues);\n         setIsChanged(false);\n      },\n      [isArrayType]\n   );\n\n   const handleSelectChange = (value, name) => {\n      setEditValues((editValues) => ({...editValues, [name]: value}));\n      setIsChanged(true);\n   };\n\n   /**\n    * Get the current value for the named property. If the value has been edited, it will return the edited value even\n    * if it is null, and it will return the default value if not edited. If there is no default value, the default\n    * value from the parameter is used.\n    *\n    * @Param path The path to the property\n    * @Param defaultValue The default value to use if there isn't a edit or default value already.\n    *\n    * @type {function(*, *=): *}\n    */\n   const getValue = useCallback(\n      (path, defaultValue) => {\n         const editValue = get(editValues, path);\n         return editValue !== undefined ? editValue : get(defaultValues, path) || defaultValue;\n      },\n      [editValues, defaultValues]\n   );\n\n   /**\n    * Get the current value for the named property. If the value has been edited, it will return the edited value even\n    * if it is null, and it will return the default value if not edited. If there is no default value, the default\n    * value from the parameter is used.\n    *\n    * @Param path The path to the property\n    * @Param defaultValue The default value to use if there isn't a edit or default value already.\n    *\n    * @type {function(*, *=): *}\n    */\n   const setValue = useCallback(\n      (path, value, isChanged = false) => {\n         const newEditValues = {...editValues, [path]: value};\n\n         setEditValues((editValues) => ({...editValues, [path]: value}));\n\n         if (isChanged) {\n            setIsChanged(true);\n         }\n\n         if (onChange) {\n            let requiredObject;\n\n            if (isArray(requiredEditValues)) {\n               requiredObject = pick(defaultValues, ['id', ...requiredEditValues]);\n            } else {\n               requiredObject = {...defaultValues};\n            }\n            onChange?.({...requiredObject, ...newEditValues}, newEditValues);\n         }\n      },\n      [editValues, defaultValues]\n   );\n\n   /**\n    * Indicates if there is a value set for the property. If the default value is deleted, false will be returned even\n    * though there is a defaultValue.\n    *\n    * @Param name The name of the property\n    * @type {function(*=, *=): boolean}\n    */\n   const hasValue = useCallback(\n      (name) => {\n         return hasValueUtil(getValue(name));\n      },\n      [getValue]\n   );\n\n   return [\n      editValues,\n      handleChange,\n      {\n         handleSelectChange,\n         isChanged,\n         setIsChanged,\n         setEditValues,\n         defaultValues,\n         setDefaultValues,\n         resetValues,\n         getValue,\n         setValue,\n         hasValue,\n      },\n   ];\n}\n","import PropTypes from 'prop-types';\nimport React, {useRef, useEffect, forwardRef} from 'react';\n\n/**\n * Form component that handles custom validation and removing prevents default for the submit event.\n *\n * Reviewed: 3/26/20\n */\nconst Form = forwardRef(\nfunction Form({onSubmit, onValid, validate, customValidity, reportInvalid, children, ...props}, ref) {\n   const useFormEl = useRef();\n   const formEl = ref || useFormEl;\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    */\n   useEffect(() => {\n      /**\n       * Validate the form data. Calls customValidity if the rest of the form is valid.\n       *\n       * @param isReport True if the validity should be reported.\n       * @return {boolean} True if the form is valid and the custom validity is valid.\n       */\n      const checkValidity = (isReport = true) => {\n         let isValid;\n         let form = formEl.current;\n         if (form) {\n            // noinspection JSUnresolvedFunction\n            isValid = form.checkValidity();\n            if (isValid && customValidity) {\n               isValid = customValidity();\n            }\n            if (!isValid && isReport) {\n               // noinspection JSUnresolvedFunction\n               return form.reportValidity();\n            }\n            return isValid\n         }\n         return true;\n      };\n\n      if (validate && checkValidity(reportInvalid)) {\n         onValid && onValid()\n      }\n   }, [validate, reportInvalid, customValidity, onValid, formEl]);\n\n   /**\n    * Rechecks validity if the checkValidity prop changes.\n    *\n    * @param prevProps\n    * @param prevState\n    * @param snapshot\n    */\n\n   /**\n    * Submits the form data and prevents the default for the submit event.\n    * @param event The submit event.\n    */\n   const submitHandler = (event) => {\n      event && event.preventDefault();\n      event && event.stopPropagation();\n      let form = formEl.current;\n      let isValid = true;\n\n      if (customValidity) {\n         isValid = customValidity();\n      }\n      if (!isValid && reportInvalid) {\n         // noinspection JSUnresolvedFunction\n         return form.reportValidity();\n      }\n\n      if (isValid) {\n         onSubmit && onSubmit(event);\n      }\n   };\n\n   return (\n      <form ref={formEl} onSubmit={submitHandler} {...props} className={props.className}>\n         {children}\n      </form>\n   );\n});\n\nForm.propTypes = {\n   validate: PropTypes.bool,           // True to force validation.\n   reportInvalid: PropTypes.bool,      // True to report when invalid. Can prevent reporting if needed.\n   onValid: PropTypes.func,            // Callback when the form is valid.\n   onSubmit: PropTypes.func,           // Submit callback to submit the form inputs.\n   customValidity: PropTypes.func,     // A validity check from the parent component.\n};\n\nForm.defaultProps = {\n   validate: false,\n   reportInvalid: true,\n};\n\nexport default Form;","import React, {useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useIntl} from 'react-intl';\nimport {useLocation} from 'react-router';\nimport { Prompt as PromptDOM } from \"react-router-dom\"\nimport {formatMessage} from '../../utils/Utils';\n\n/**\n * The component to prompt the user when leaving the page with unsaved changes.\n *\n * Reviewed:\n */\nexport default function Prompt({when, messageKey = 'leavePage', message, ...props}) {\n   const intl = useIntl();\n   const location = useLocation();\n\n   const getPrompt = useCallback((newLocation = {}) => {\n      if (newLocation && location && newLocation.pathname !== window.location.pathname) {\n         if (messageKey) {\n            return formatMessage(intl, 'leavePage', 'Discard changes?')\n         }\n         return message;\n      }\n   }, [intl, message, messageKey, location]);\n\n   return (\n      <PromptDOM when={when} message={getPrompt} {...props}/>\n   )\n}\n\nPrompt.propTypes = {\n   when: PropTypes.bool.isRequired,\n   message: PropTypes.string,\n   messageKey: PropTypes.string,\n}\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","import {useLayoutEffect} from 'react';\nimport {useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useEffect} from 'react';\n\nuseKeyDown.propTypes = {\n   onClose: PropTypes.func,\n   onSubmit: PropTypes.func,\n};\n\n/**\n * Hook to call onClose when escape is pressed, and onSubmit when the enter key is pressed.\n * @param onClose The callback for closing for escape key.\n * @param onSubmit The callback for submit for enter key.\n * @param ignoreDefaultPrevented Indicates if the defaultPrevented should be ignored.\n */\nfunction useKeyDown(onClose, onSubmit, ignoreDefaultPrevented = false, onOther) {\n\n   const handleKey = useCallback((event) => {\n      if (ignoreDefaultPrevented || !event.defaultPrevented) {\n         if (event.key === 'Escape' && onClose) {\n            event.preventDefault();\n            onClose(event);\n         } else if (event.key === 'Enter' && onSubmit) {\n            onSubmit(event);\n         } else {\n            onOther?.(event);\n         }\n      }\n   }, [ignoreDefaultPrevented, onClose, onOther, onSubmit]);\n\n   /**\n    * Handles keydown events for Escape and Enter.\n    */\n   useEffect(() => {\n      document.addEventListener('keydown', handleKey, false);\n      }, [handleKey]);\n\n   /**\n    * Cleanup the listener when this component is removed. This is needed because of a bug in react. Should be able to\n    * do this from UseEffect.\n    */\n   useLayoutEffect(() => {\n      return () => {\n         document.removeEventListener('keydown', handleKey, false);\n      }\n   }, [handleKey]);\n\n   return [handleKey, onSubmit, onClose];\n}\n\nexport default useKeyDown;\n","import makeStyles from '@material-ui/core/styles/makeStyles';\nimport {KeyboardDatePicker as KeyboardDatePickerOriginal} from '@material-ui/pickers';\nimport React, {useState, useMemo, Fragment} from 'react';\nimport {useIntl} from 'react-intl';\nimport TextFieldFHG from '../../components/TextField';\nimport {DATE_FORMAT_KEYBOARD} from '../../Constants';\nimport {formatMessage} from '../utils/Utils';\nimport ValidateTarget from './ValidateTarget';\n\nconst useStyles = makeStyles(theme => ({\n   buttonPadding: {\n      '& button': {\n         padding: theme.spacing(0.5),\n      },\n      '& > div': {\n         paddingRight: 0,\n      },\n      '& > div > div': {\n         marginLeft: 0,\n      },\n      '& input > div': {\n         marginLeft: 0,\n      }\n   }\n}));\n\n/**\n * The TextField with preset formats.\n */\nexport default function KeyboardDatePickerFHG({name, className, label, labelKey, disableToolbar = false, format = DATE_FORMAT_KEYBOARD, autoOk = true, onChange, value, defaultValue, variant = 'inline', InputAdornmentProps = {position: 'start'}, required, ...keyboardDatePickerProps}) {\n   const classes = useStyles();\n   const intl = useIntl();\n   const [isSet, setIsSet] = useState(value !== undefined && value !== null && value !== '');\n\n   return useMemo(() => {\n      const currentLabel = label || (labelKey && formatMessage(intl, labelKey)) || undefined;\n      const handleChange = (moment) => {\n         setIsSet(true);\n         onChange && onChange({target: {name}}, moment, 'date-picker');\n      };\n\n      return (\n         <Fragment>\n         <KeyboardDatePickerOriginal\n            name={name}\n            className={`${classes.buttonPadding} ${className}`}\n            disableToolbar={disableToolbar}\n            format={format}\n            autoOk={autoOk}\n            // disableFuture={true}\n            label={currentLabel}\n            onChange={handleChange}\n            value={isSet || value !== undefined ? value : defaultValue}\n            variant={variant}\n            InputAdornmentProps={InputAdornmentProps}\n            TextFieldComponent={TextFieldFHG}\n            required={required}\n            {...keyboardDatePickerProps}\n         />\n            {required && <ValidateTarget name={'validate '+ name} value={isSet ? value : defaultValue} />}\n         </Fragment>\n      )\n   }, [name, classes, className, disableToolbar, format, autoOk, InputAdornmentProps, defaultValue, intl, isSet, keyboardDatePickerProps, label, labelKey, onChange, value, variant, required]);\n}\n","import Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport * as PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport TypographyFHG from './Typography';\n\nconst useStyles = makeStyles(theme => ({\n   checkboxStyle: props => ({\n      marginLeft: props.marginLeft !== undefined ? theme.spacing(props.marginLeft) : theme.spacing(-1),\n      marginTop: props.marginTop !== undefined ? theme.spacing(props.marginTop) : theme.spacing(2),\n      width: props.fullWidth ? '100%' : undefined,\n   }),\n}), \"CheckboxStyles\");\n\nCheckboxFHG.propTypes = {\n   name: PropTypes.string.isRequired,\n   checked: PropTypes.bool,\n   labelKey: PropTypes.string,\n   defaultChecked: PropTypes.bool,\n   onChange: PropTypes.func,\n   label: PropTypes.string,\n   ...Checkbox.propTypes,\n}\n\n/**\n * The Checkbox with preset formats.\n */\nexport default function CheckboxFHG({name, checked, labelKey, defaultChecked, onChange, label, classes:classesProp={}, fullWidth, marginTop, marginLeft, ...checkboxProps}) {\n   const classes = {...useStyles({fullWidth, marginTop, marginLeft}), ...classesProp};\n\n   const [isSet, setIsSet] = useState(checked !== undefined && checked !== null);\n\n   const handleChange = (event) => {\n      setIsSet(true);\n      onChange && onChange(event);\n   };\n\n   return (\n      <FormControlLabel\n         className={classes.checkboxStyle}\n         control={\n            <Checkbox\n               name={name}\n               checked={isSet ? checked : defaultChecked || false}\n               onChange={handleChange}\n               {...checkboxProps}\n            />\n         }\n         label={<TypographyFHG id={labelKey}>{label}</TypographyFHG>}\n      />\n   );\n}\n","var baseDelay = require('./_baseDelay'),\n    baseRest = require('./_baseRest');\n\n/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // => Logs 'deferred' after one millisecond.\n */\nvar defer = baseRest(function(func, args) {\n  return baseDelay(func, 1, args);\n});\n\nmodule.exports = defer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\n\n/**\n * The component used as a placeholder for not implemented components.\n *\n * Reviewed: 6/22/20\n */\nexport default function ValidateTarget({name, top, value}) {\n\n   return (\n      <input\n         aria-invalid='false'\n         id={name}\n         name='confirm'\n         type='text'\n         required\n         value={value}\n         readOnly\n         style={{\n            display: 'block',\n            width: 1,\n            height: 1,\n            padding: 0,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            position: 'relative',\n            border: 'none',\n            top,\n            zIndex: -1,\n            outline: 'unset',\n         }}\n      />\n   );\n}\n","import IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport React, {Fragment, useState} from 'react';\nimport ButtonLF from '../../components/ButtonLF';\nimport {UNDO_DURATION} from '../../Constants';\nimport ModalDialog from './dialog/ModalDialog';\nimport ProgressButton from './ProgressButton';\nimport Typography from './Typography';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n   messageStyle: {\n      backgroundColor: `${theme.palette.background.default} !important`,\n      color: `${theme.palette.text.secondary} !important`,\n      paddingRight: theme.spacing(6),\n   },\n   snackbarMessageStyle: {\n      marginRight: theme.spacing(1),\n   },\n   closeButtonStyle: {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      marginLeft: 'auto',\n      zIndex: 1001,\n   },\n\n}), {name: 'ConfirmButtonStyles'});\n\n/**\n * Button Component to show confirmation.\n *\n * Reviewed:\n */\nConfirmButton.propTypes = {\n   titleKey: PropTypes.string,                  // Localization key for the title.\n   messageKey: PropTypes.string,                // Localization key for the messages.\n   buttonLabelKey: PropTypes.string,            // Localization key for the button label.\n   onConfirm: PropTypes.func.isRequired,        // The callback when the action is confirmed.\n   onCancel: PropTypes.func,                    // The callback when the action is canceled.\n   component: PropTypes.any,                    // The Button component. Defaults to Button.\n   isProgress: PropTypes.bool,                  // Indicates if the confirmed action is in progress.\n   buttonProperties: PropTypes.any              // The properties for the button component.\n};\n\nexport default function ConfirmButton({\n   titleKey = 'confirmRemove.title',\n   messageKey = 'confirmRemoveValue.message',\n   buttonLabelKey = 'delete.button',\n   onConfirm,\n   onCancel,\n   confirmProps,\n   children,\n   color,\n   component,\n   values,\n   titleValues,\n   isProgress = false,\n   submitStyle,\n   onUndo = false,\n   buttonTypographyProps,\n   ...buttonProperties\n}) {\n   const classes = useStyles();\n\n   const [isModalOpen, setIsModalOpen] = useState(false);\n   const [showUndelete, setShowUndelete] = useState(false);\n\n   const useTitleValues = titleValues || values;\n\n   const handleClick = event => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      if (buttonProperties.type !== 'submit') {\n         setIsModalOpen(true);\n      }\n\n      buttonProperties?.onClick?.(event);\n   };\n\n   const handleConfirm = (event) => {\n      if (event) {\n         event.stopPropagation();\n         event.preventDefault();\n      }\n      setIsModalOpen(false);\n\n      if (onUndo) {\n         setShowUndelete(true);\n      }\n      onConfirm && onConfirm();\n   };\n\n   const handleCancel = () => {\n      setIsModalOpen(false);\n      onCancel && onCancel();\n   };\n\n   const handleUndoClose = () => {\n      setShowUndelete(false);\n   };\n\n   const handleUndo = () => {\n      onUndo?.();\n      handleUndoClose();\n   };\n\n   return (\n      <Fragment>\n         {isModalOpen && (\n            <ModalDialog submitKey={buttonLabelKey} {...confirmProps} titleKey={titleKey} messageKey={messageKey}\n                         onSubmit={handleConfirm}\n                         onClose={handleCancel} hideBackdrop submitColor={color} messageValues={values}\n                         titleValues={useTitleValues}\n                         submitColorStyle={submitStyle}\n            />\n         )}\n         {showUndelete && (\n            <Snackbar\n               open={true}\n               autoHideDuration={UNDO_DURATION}\n               onClose={handleUndoClose}\n               ContentProps={{classes: {root: classes.messageStyle,}}}\n               message={(\n                  <Typography id={'confirmRemoveValue.Undo.message'} variant={'subtitle1'} className={classes.snackbarMessageStyle}\n                              values={values} color={'inherit'}\n                  >\n                     <ButtonLF labelKey={'undo.label'} onClick={handleUndo}/>\n                  </Typography>\n               )}\n               action={[\n                  <IconButton\n                     key='close'\n                     aria-label='Close'\n                     color='inherit'\n                     size={'small'}\n                     className={classes.closeButtonStyle}\n                     onClick={handleUndoClose}\n                  >\n                     <CloseIcon fontSize='inherit'/>\n                  </IconButton>,\n               ]}\n            />\n         )}\n         <ProgressButton isProgress={isProgress} onClick={handleClick} color={color} isSpinnerLight {...buttonProperties}>\n            {(!component && buttonLabelKey) && (\n               <Typography variant={'button'} id={buttonLabelKey} {...buttonTypographyProps}/>\n            )}\n            {children}\n         </ProgressButton>\n      </Fragment>\n   );\n}\n\n","/* eslint-disable no-use-before-define */\nimport {map} from 'lodash';\nimport {isObjectLike} from 'lodash';\nimport {Fragment} from 'react';\nimport React from 'react';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\nimport ValidateTarget from '../fhg/components/ValidateTarget';\nimport {useEffect} from 'react';\nimport {renderOptionsKey} from '../fhg/utils/Utils';\nimport TextFieldFHG from './TextField';\nimport find from 'lodash/find';\n\nconst filter = createFilterOptions();\n// const filter = createFilterOptions({\n//    // matchFrom: 'start',\n//    stringify: option => option.name,\n// });\n\nexport default function AutocompleteLF2({\n   labelKey,\n   labelTemplate,\n   name,\n   editName,\n   options,\n   value,\n   optionKey = 'name',\n   valueKey = 'id',\n   defaultValue,\n   onChange,\n   autoComplete = true,\n   freeSolo = true,\n   required,\n   variant = 'outlined',\n   fullWidth = true,\n   multiple,\n   ...autocompleteOptions\n}) {\n   const useLabelKey = labelTemplate?.format({name}) || labelKey;\n   const valueObject = !valueKey ? value : find(options, {[valueKey]: value});\n   const [valueLocal, setValueLocal] = React.useState(valueObject);\n\n   // useEffect(() => {\n   //  setValueLocal(valueObject);\n   // }, [valueObject]);\n\n   useEffect(() => {\n      if (typeof value === 'string' && options?.length > 0 && isObjectLike(options[0])) {\n         const valueObject = find(options, {[valueKey]: value});\n         if (valueObject) {\n            setValueLocal(valueObject);\n         }\n      }\n   }, [value, options, valueKey]);\n\n   useEffect(() => {\n      if (options?.length > 0 && isObjectLike(options[0])) {\n         if (multiple) {\n            if (value?.length > 0 && typeof value[0] === 'string') {\n               const valueObjectList = map(value, value => find(options, {[valueKey]: value}));\n               setValueLocal(valueObjectList);\n            }\n         } else if (typeof defaultValue === 'string') {\n            const valueObject = find(options, {[valueKey]: defaultValue});\n            if (valueObject) {\n               setValueLocal(valueObject);\n            } else {\n            }\n         }\n      }\n   }, [defaultValue, valueKey, options, multiple, value]);\n\n   const handleChange = (event, newValue, reason) => {\n      if (reason === 'create-option') {\n         // User created a new option by typing and pressed enter.\n         setValueLocal({name: newValue});\n         onChange(event, undefined, undefined, {[editName]: newValue, [name]: null});\n      } else if (reason === 'clear') {\n         // User cleared the input completely.\n         setValueLocal(newValue);\n         onChange(event, undefined, undefined, {[editName]: newValue, [name]: newValue});\n      } else if (newValue && newValue.inputValue) {\n         // Create a new option from the user typed input. User selected \"Add [input]\" from menu.\n         setValueLocal({name: newValue.inputValue});\n         onChange(event, undefined, undefined, {[editName]: newValue.inputValue, [name]: null});\n      } else {\n         setValueLocal(newValue);\n         if (typeof newValue === 'string') {\n            onChange(event, undefined, undefined, {[editName]: null, [name]: newValue});\n         } else {\n            onChange(event, undefined, undefined, {[editName]: null, [name]: newValue[valueKey]});\n         }\n      }\n   };\n\n   return (\n      <Fragment>\n         <Autocomplete\n            key={'autocomplete' + defaultValue + '' + options?.length}\n            {...autocompleteOptions}\n            name={name}\n            value={valueLocal || (multiple && []) || ''}\n            onChange={handleChange}\n            filterOptions={!multiple ? (options, params) => {\n               const filtered = filter(options, params);\n\n               // Suggest the creation of a new value\n               if (params.inputValue !== '') {\n                  filtered.push({\n                     inputValue: params.inputValue,\n                     name: `Add \"${params.inputValue}\"`,\n                  });\n               }\n\n               return filtered;\n            } : undefined}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            options={options}\n            getOptionLabel={multiple ? option => option.name : (option) => {\n               // Value selected with enter, right from the input\n               if (typeof option === 'string') {\n                  return option;\n               }\n               // Add \"xxx\" option created dynamically\n               if (option.inputValue) {\n                  return option.inputValue;\n               }\n               // Regular option\n               return option.name || 'N/A';\n            }}\n            renderOption={!multiple ? renderOptionsKey(optionKey) : undefined}\n            // style={{ width: 300 }}\n            freeSolo={freeSolo}\n            renderInput={(params) => {\n               return (\n                  <TextFieldFHG {...params} key={'autoCompleteTextKey' + name} name={'autoCompleteText' + name}\n                                labelKey={useLabelKey} required={required} variant={variant} fullWidth={fullWidth}/>\n               )\n            }}\n            fullWidth={fullWidth}\n         />\n         {required &&\n         <ValidateTarget name={'validate ' + name} value={valueLocal !== undefined ? valueLocal : defaultValue}/>}\n      </Fragment>\n   );\n}\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import React from 'react';\nimport AutocompleteFHG from '../fhg/components/edit/AutocompleteFHG';\n\n// AutocompleteLF.propTypes = {\n//    isOptionObjects: PropTypes.bool,\n//    labelKey: PropTypes.string,\n//    optionObjects: PropTypes.array,\n//    optionKey: PropTypes.string,\n//    ...Autocomplete.propTypes,\n// }\n\n/**\n * The Autocomplete with preset formats.\n */\nexport default function AutocompleteLF({name, editData, labelTemplate, labelKey, ...otherProps}) {\n   const useLabelKey = labelTemplate?.format({name}) || labelKey;\n\n   return (\n      <AutocompleteFHG\n         name={name}\n         labelKey={useLabelKey}\n         defaultValue={editData?.defaultValue?.[name]}\n         value={editData?.value?.[name]}\n         onChange={editData?.handleChange}\n         {...otherProps}\n      />\n   );\n}\n\n\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts `args`\n * to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Array} args The arguments to provide to `func`.\n * @returns {number|Object} Returns the timer id or timeout object.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = baseDelay;\n"],"sourceRoot":""}